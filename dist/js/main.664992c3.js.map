{"version":3,"sources":["webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/router/router.module.ts","webpack:///./src/router/router.config.ts","webpack:///./src/router/routes.ts","webpack:///./src/router/router.transitions.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/hero-detail/hero-detail.component.ts","webpack:///./src/app/hero-detail/hero-detail.component.html","webpack:///./src/app/hero-search/hero-search.component.ts","webpack:///./src/app/hero-search/hero-search.component.html","webpack:///./src/app/heroes/heroes.component.ts","webpack:///./src/app/heroes/heroes.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/hero.service.ts","webpack:///./src/app/mock-heroes.ts","webpack:///./src/app/message.service.ts"],"names":["angular","__webpack_require__","app_module_1","element","document","ready","bootstrap","AppModule","router_module_1","app_component_1","dashboard_component_1","hero_detail_component_1","hero_search_component_1","heroes_component_1","messages_component_1","hero_service_1","message_service_1","imports","RouterModule","declarations","components","appRoot","AppComponent","appDashboard","DashboardComponent","appDetail","HeroDetailComponent","appHeroSearch","HeroSearchComponent","appHeroes","HeroesComponent","appMessages","MessagesComponent","providers","HeroService","MessageService","exports","module","component","service","name","uiRouter","router_config_1","router_transitions_1","default","config","routerConfig","run","routeChange","routes_1","$locationProvider","$urlRouterProvider","$stateProvider","hashPrefix","routes","forEach","route","state","$inject","url","redirectTo","NProgress","$transitions","onStart","transition","start","onFinish","done","template","controller","this","title","_a","class_1","heroService","heroes","prototype","$onInit","getHeroes","_this","then","slice","bindings","hero","$state","getHero","id","params","goBack","go","save","updateHero","search","term","searchHeroes","heroName","add","trim","addHero","delete","filter","h","deleteHero","messageService","mock_heroes_1","$http","$q","HEROES","deferred","defer","log","resolve","promise","includes","length","ids","map","newHero","Math","max","apply","push","index","findIndex","splice","_i","item","message","messages","clear"],"mappings":"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","file":"js/main.664992c3.js","sourcesContent":["import * as angular from 'angular';\n\nimport { AppModule } from '@/app/app.module';\n\nangular.element(document).ready(() => {\n  angular.bootstrap(document, [AppModule]);\n});\n","import * as angular from 'angular';\n\nimport { RouterModule } from '@/router/router.module';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from '@/app/dashboard/dashboard.component';\nimport { HeroDetailComponent } from '@/app/hero-detail/hero-detail.component';\nimport { HeroSearchComponent } from '@/app/hero-search/hero-search.component';\nimport { HeroesComponent } from '@/app/heroes/heroes.component';\nimport { MessagesComponent } from '@/app/messages/messages.component';\n\n\nimport { HeroService } from '@/app/hero.service';\nimport { MessageService } from '@/app/message.service';\n\nconst imports = [RouterModule];\nconst declarations = {\n  components: {\n    appRoot: AppComponent,\n    appDashboard: DashboardComponent,\n    appDetail: HeroDetailComponent,\n    appHeroSearch: HeroSearchComponent,\n    appHeroes: HeroesComponent,\n    appMessages: MessagesComponent\n  }\n};\nconst providers = { HeroService, MessageService };\n\nexport const AppModule = angular\n  .module('App', imports)\n  .component(declarations.components)\n  .service(providers)\n  .name;\n\n","import * as angular from 'angular';\nimport * as uiRouter from '@uirouter/angularjs';\nimport 'oclazyload';\n\nimport { routerConfig } from './router.config';\nimport { routeChange } from './router.transitions';\n\nexport const RouterModule: string = angular\n  .module('Router', [\n    uiRouter.default,\n    'oc.lazyLoad'\n  ])\n  .config(routerConfig)\n  .run(routeChange)\n  .name;\n","import { UrlRouterProvider, StateProvider } from '@uirouter/angularjs';\nimport { ILocationProvider } from 'angular';\n\nimport { routes } from './routes';\n\nrouterConfig.$inject = [\n  '$locationProvider',\n  '$urlRouterProvider',\n  '$stateProvider'];\n\nexport function routerConfig(\n  $locationProvider: ILocationProvider,\n  $urlRouterProvider: UrlRouterProvider,\n  $stateProvider: StateProvider\n) {\n  $locationProvider.hashPrefix('');\n\n  // $urlRouterProvider.otherwise('/index');\n\n  routes.forEach(route => $stateProvider.state(route));\n}\n","import { Ng1StateDeclaration } from '@uirouter/angularjs';\n\nexport const routes: Ng1StateDeclaration[] = [\n  { name: 'index', url: '', redirectTo: { state: 'dashboard' } },\n  { name: 'dashboard', url: '/dashboard', component: 'appDashboard' },\n  { name: 'detail', url: '/detail/:id', component: 'appDetail' },\n  { name: 'heroes', url: '/heroes', component: 'appHeroes' },\n];\n","import { Transition } from '@uirouter/angularjs';\nimport * as NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\nrouteChange.$inject = ['$transitions'];\n\nexport function routeChange($transitions: Transition) {\n  $transitions.onStart({}, transition => {\n    NProgress.start();\n  });\n\n  $transitions.onFinish({}, transition => {\n    NProgress.done();\n  });\n}\n\n// https://ui-router.github.io/guide/ng1/migrate-to-1_0#state-change-events\n// $stateChangeStart $stateChangeCancel $stateChangeSuccess $stateChangeError $stateNotFound\n","import { IComponentOptions, IController } from 'angular';\nimport './app.component.scss';\n\nexport const AppComponent: IComponentOptions = {\n  template: require('./app.component.html'),\n  controller: class implements IController {\n    title: string = 'Tour of Heroes';\n  }\n}\n","module.exports = \"<h1>{{$ctrl.title}}</h1> <nav> <a ui-sref=dashboard>Dashboard</a> <a ui-sref=heroes>Heroes</a> </nav> <ui-view></ui-view> <app-messages></app-messages> \";","import { IComponentOptions, IController } from 'angular';\nimport { Hero } from '@/app/hero';\nimport { HeroService } from '@/app/hero.service';\nimport './dashboard.component.scss';\n\nexport const DashboardComponent: IComponentOptions = {\n  template: require('./dashboard.component.html'),\n  controller: class implements IController {\n    static $inject: string[] = ['HeroService'];\n\n    heroes: Hero[] = [];\n\n    constructor(private heroService: HeroService) { }\n\n    $onInit() {\n      this.getHeroes();\n    }\n\n    getHeroes(): void {\n      this.heroService.getHeroes()\n        .then(heroes => this.heroes = heroes.slice(1, 5));\n    }\n  }\n}\n","module.exports = \"<h3>Top Heroes</h3> <div class=\\\"grid grid-pad\\\"> <a ng-repeat=\\\"hero in $ctrl.heroes\\\" class=col-1-4 ui-sref=\\\"detail({id: hero.id})\\\"> <div class=\\\"module hero\\\"> <h4>{{hero.name}}</h4> </div> </a> </div> <app-hero-search></app-hero-search> \";","import { IComponentOptions, IController } from 'angular';\nimport { StateService } from '@uirouter/angularjs';\nimport { Hero } from '@/app/hero';\nimport { HeroService } from '@/app/hero.service';\nimport './hero-detail.component.scss';\n\nexport const HeroDetailComponent: IComponentOptions = {\n  template: require('./hero-detail.component.html'),\n  bindings: {\n    hero: '<',\n  },\n  controller: class implements IController {\n    static $inject: string[] = ['$state', 'HeroService'];\n\n    hero: Hero;\n\n    constructor(\n      private $state: StateService,\n      private heroService: HeroService\n    ) { }\n\n    $onInit() {\n      this.getHero();\n    }\n\n    getHero(): void {\n      const id = +this.$state.params.id;\n      this.heroService.getHero(id)\n        .then(hero => this.hero = hero);\n    }\n\n    goBack(): void {\n      this.$state.go('dashboard');\n    }\n\n    save(): void {\n      this.heroService.updateHero(this.hero)\n        .then(() => this.goBack());\n    }\n  }\n}\n","module.exports = \"<div class=hero-detail ng-if=$ctrl.hero> <h2>{{$ctrl.hero.name | uppercase}} Details</h2> <div><span>id: </span>{{$ctrl.hero.id}}</div> <div> <label>name: <input ng-model=$ctrl.hero.name placeholder=name /> </label> </div> <button ng-click=$ctrl.goBack()>go back</button> <button ng-click=$ctrl.save()>save</button> </div> \";","import { IComponentOptions, IController } from 'angular';\nimport { Hero } from '@/app/hero';\nimport { HeroService } from '@/app/hero.service';\nimport './hero-search.component.scss';\n\nexport const HeroSearchComponent: IComponentOptions = {\n  template: require('./hero-search.component.html'),\n  controller: class implements IController {\n    static $inject: string[] = ['HeroService'];\n\n    heroes: Hero[];\n\n    constructor(private heroService: HeroService) { }\n\n    search(term: string): void {\n      this.heroService.searchHeroes(term)\n        .then(heroes => this.heroes = heroes);\n    }\n  }\n}\n","module.exports = \"<div class=search-component> <h4>Hero Search</h4> <input id=search-box ng-model=$ctrl.term ng-model-options=\\\"{ debounce: 500 }\\\" ng-change=$ctrl.search($ctrl.term) /> <ul class=search-result> <li ng-repeat=\\\"hero in $ctrl.heroes track by hero.id\\\"> <a ui-sref=\\\"detail({id: hero.id})\\\"> {{hero.name}} </a> </li> </ul> </div> \";","import { IComponentOptions, IController } from 'angular';\nimport { Hero } from '@/app/hero';\nimport { HeroService } from '@/app/hero.service';\nimport './heroes.component.scss';\n\nexport const HeroesComponent: IComponentOptions = {\n  template: require('./heroes.component.html'),\n  controller: class implements IController {\n\n    static $inject: string[] = ['HeroService'];\n\n    heroes: Hero[];\n    heroName: string = '';\n\n    constructor(private heroService: HeroService) { }\n\n    $onInit() {\n      this.getHeroes();\n    }\n\n    getHeroes(): void {\n      this\n        .heroService.getHeroes()\n        .then(heroes => this.heroes = heroes);\n    }\n\n    add(name: string): void {\n      name = name.trim();\n      if (!name) { return; }\n      this.heroService.addHero({ name } as Hero)\n        .then(() => this.getHeroes());\n    }\n\n    delete(hero: Hero): void {\n      this.heroes = this.heroes.filter(h => h !== hero);\n      this.heroService.deleteHero(hero)\n        .then();\n    }\n  }\n}\n","module.exports = \"<h2>My Heroes</h2> <div class=heroes-add> <label>Hero name: <input ng-model=$ctrl.heroName /> </label> <button ng-click=\\\"$ctrl.add($ctrl.heroName); $ctrl.heroName=''\\\"> add </button> </div> <ul class=heroes> <li ng-repeat=\\\"hero in $ctrl.heroes track by hero.id\\\"> <a ui-sref=\\\"detail({id: hero.id})\\\"> <span class=badge>{{hero.id}}</span> {{hero.name}} </a> <button class=delete title=\\\"delete hero\\\" ng-click=$ctrl.delete(hero)>x</button> </li> </ul> \";","import { IComponentOptions, IController } from 'angular';\nimport { MessageService } from '@/app/message.service';\nimport './messages.component.scss';\n\nexport const MessagesComponent: IComponentOptions = {\n  template: require('./messages.component.html'),\n  controller: class implements IController {\n    static $inject: string[] = ['MessageService'];\n    constructor(private messageService: MessageService) { }\n  }\n}\n","module.exports = \"<div class=messages ng-if=$ctrl.messageService.messages.length> <h2>Messages</h2> <button class=clear ng-click=$ctrl.messageService.clear()>clear</button> <div ng-repeat=\\\"message in $ctrl.messageService.messages track by $index\\\">{{message}}</div> </div> \";","import { IPromise, IHttpService, IQService } from 'angular';\n\nimport { HEROES } from '@/app/mock-heroes';\nimport { Hero } from './hero';\nimport { MessageService } from './message.service';\n\nexport class HeroService {\n\n  static $inject: string[] = ['$http', '$q', 'MessageService'];\n\n  // private heroesUrl = 'api/heroes';\n  private heroes: Hero[] = HEROES;\n\n  constructor(\n    private $http: IHttpService,\n    private $q: IQService,\n    private messageService: MessageService) { }\n\n  getHeroes(): IPromise<Hero[]> {\n    const deferred = this.$q.defer<Hero[]>();\n    this.log('fetched heroes');\n    deferred.resolve(this.heroes);\n    // this.$http.get<Hero[]>(this.heroesUrl)\n    //   .then(response => {\n    //     this.log('fetched heroes');\n    //     deferred.resolve(response.data);\n    //   })\n    //   .catch(err => {\n    //     this.log(err);\n    //     deferred.reject(err);\n    //   });\n    return deferred.promise;\n  }\n\n  getHero(id: number): IPromise<Hero> {\n    const deferred = this.$q.defer<Hero>();\n    this.log(`fetched hero id=${id}`);\n    deferred.resolve(this.heroes.filter(hero => hero.id === id)[0])\n    // this.$http.get<Hero>(this.heroesUrl)\n    //   .then(({ data }) => {\n    //     this.log(`fetched hero id=${id}`);\n    //     deferred.resolve(data);\n    //   })\n    //   .catch(err => {\n    //     this.log(err);\n    //     deferred.reject(err);\n    //   });\n    return deferred.promise;\n  }\n\n  searchHeroes(name: string): IPromise<Hero[]> {\n    const deferred = this.$q.defer<Hero[]>();\n    const heroes = this.heroes.filter(hero => hero.name.includes(name));\n    if (heroes.length) {\n      this.log(`found ${heroes.length} heroes whose name contains ${name}`);\n    } else {\n      this.log(`no heroes with name that contains ${name}`);\n    }\n    deferred.resolve(heroes);\n\n    // this.$http.get<Hero[]>(this.heroesUrl, { params: { name } })\n    //   .then(({ data }) => {\n    //     this.log(`found heroes matching \"${name}\"`);\n    //     deferred.resolve(data)\n    //   })\n    //   .catch(err => {\n    //     this.log(err);\n    //     deferred.reject(err);\n    //   });\n    return deferred.promise;\n  }\n\n  addHero(hero: Hero): IPromise<Hero> {\n    const deferred = this.$q.defer<Hero>();\n    let ids = this.heroes.map(hero => hero.id);\n    if (ids.length === 0) {\n      ids = [10];\n    }\n    const id = Math.max(...ids) + 1;\n    let newHero = { id, name: hero.name };\n    this.heroes.push(newHero);\n    this.log('added new hero');\n    deferred.resolve(newHero);\n    // this.$http.post<Hero>(this.heroesUrl, hero)\n    //   .then(({ data }) => {\n    //     this.log(`added hero w/ id=${hero.id}`);\n    //     deferred.resolve(data);\n    //   })\n    //   .catch(err => {\n    //     this.log(err);\n    //     deferred.reject(err);\n    //   });\n    return deferred.promise;\n  }\n\n  deleteHero(hero: Hero | number): IPromise<Hero> {\n    const deferred = this.$q.defer<Hero>();\n    const id = typeof hero === 'number' ? hero : hero.id;\n    let index = this.heroes.findIndex(hero => hero.id === id);\n    this.log(`deleted hero id=${id}`);\n    deferred.resolve(this.heroes.splice(index, 1)[0]);\n    // const url = `${this.heroesUrl}/${id}`;\n    // this.$http.delete<Hero>(url)\n    //   .then(({ data }) => {\n    //     this.log(`deleted hero id=${id}`);\n    //     deferred.resolve(data)\n    //   })\n    //   .catch(err => {\n    //     this.log(err);\n    //     deferred.reject(err);\n    //   });\n    return deferred.promise;\n  }\n\n  updateHero(hero: Hero): IPromise<any> {\n    const deferred = this.$q.defer<Hero>();\n    for (const item of this.heroes) {\n      if (item.id === hero.id) {\n        item.name = hero.name;\n        this.log(`updated hero id=${hero.id}`);\n        break;\n      }\n    }\n    deferred.resolve();\n    // this.$http.put<Hero>(this.heroesUrl, hero)\n    //   .then(({ data }) => {\n    //     this.log(`updated hero id=${hero.id}`);\n    //     deferred.resolve(data)\n    //   })\n    //   .catch(err => {\n    //     this.log(err);\n    //     deferred.reject(err);\n    //   });\n    return deferred.promise;\n  }\n\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\n","import { Hero } from \"./hero\";\n\nexport const HEROES: Hero[] = [\n  { id: 11, name: 'Mr. Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n","export class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n"],"sourceRoot":""}