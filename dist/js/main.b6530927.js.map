{"version":3,"sources":["webpack:///./src/main.ts","webpack:///./src/common/common.module.ts","webpack:///./src/common/components/index.ts","webpack:///./src/common/directives/index.ts","webpack:///./src/common/directives/auto-focus.directive.ts","webpack:///./src/common/services/index.ts","webpack:///./src/common/services/http.service.ts","webpack:///./src/router/router.module.ts","webpack:///./src/router/router.config.ts","webpack:///./src/router/routes.ts","webpack:///./src/views/index/index.module.ts","webpack:///./src/views/index/index.component.ts","webpack:///./src/views/index/index.component.html","webpack:///./src/views/index/components/hello-angular/hello-angular.component.ts","webpack:///./src/views/index/components/hello-angular/hello-angular.component.html","webpack:///./src/assets/images/AngularJS-large.png","webpack:///./src/router/router.transitions.ts"],"names":["angular","__webpack_require__","common_module_1","router_module_1","module","commonModule","routerModule","element","document","ready","bootstrap","components_1","directives_1","services_1","exports","component","directive","service","name","auto_focus_directive_1","autoFocus","restrict","link","$scope","$ele","$attr","focus","$inject","http_service_1","HttpService","$http","this","baseUrl","prototype","get","url","config","post","data","put","patch","uiRouter","router_config_1","router_transitions_1","routerConfig","run","routeChange","routes_1","$locationProvider","$urlRouterProvider","$stateProvider","hashPrefix","otherwise","routes","forEach","route","state","lazyLoad","transition","$ocLazyLoad","injector","Promise","resolve","then","ngModule","load","index_component_1","hello_angular_component_1","index","helloAngular","template","controller","value","p","NProgress","$transitions","onStart","start","onFinish","done"],"mappings":"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","file":"js/main.b6530927.js","sourcesContent":["import * as angular from 'angular';\n\nimport { commonModule } from '@/common/common.module';\nimport { routerModule } from '@/router/router.module';\n\nimport '@/assets/styles/main.scss';\n\nangular.module('app', [\n  commonModule,\n  routerModule\n]);\n\nangular.element(document).ready(() => {\n  angular.bootstrap(document, ['app']);\n});\n","import * as angular from 'angular';\n\nimport components from './components';\nimport directives from './directives';\nimport services from './services';\n\nexport const commonModule = angular\n  .module('app.common', [])\n  .component(components)\n  .directive(directives)\n  .service(services)\n  .name;\n","export default {};\n","import { autoFocus } from './auto-focus.directive';\n\nexport default { autoFocus };\n","import { IDirective } from 'angular';\n\nautoFocus.$inject = [];\nexport function autoFocus(): IDirective {\n  return {\n    restrict: 'A',\n    link($scope, $ele, $attr) {\n      $ele[0].focus();\n    },\n  }\n}\n","import { HttpService } from './http.service';\n\nexport default { HttpService };\n","import { IHttpService, IRequestShortcutConfig } from 'angular';\n\nexport class HttpService {\n\n  static $inject: string[] = ['$http'];\n\n  baseUrl = process.env.NODE_ENV === 'production' ? '' : 'api';\n\n  constructor(private $http: IHttpService) {\n  }\n\n  get(url: string, config: IRequestShortcutConfig = {}) {\n    return this.$http.get(this.baseUrl + url, config);\n  }\n\n  post(url: string, data: any, config: IRequestShortcutConfig = {}) {\n    return this.$http.post(this.baseUrl + url, data, config);\n  }\n\n  delete(url: string, config: IRequestShortcutConfig = {}) {\n    return this.$http.delete(this.baseUrl + url, config);\n  }\n\n\n  put(url: string, data: any, config: IRequestShortcutConfig = {}) {\n    return this.$http.put(this.baseUrl + url, data, config);\n  }\n\n\n  patch(url: string, data: any, config: IRequestShortcutConfig = {}) {\n    return this.$http.patch(this.baseUrl + url, data, config);\n  }\n}\n","import * as angular from 'angular';\nimport * as uiRouter from '@uirouter/angularjs';\nimport 'oclazyload';\n\nimport { routerConfig } from './router.config';\nimport { routeChange } from './router.transitions';\n\nexport const routerModule: string = angular\n  .module('app.router', [\n    uiRouter.default,\n    'oc.lazyLoad'\n  ])\n  .config(routerConfig)\n  .run(routeChange)\n  .name;\n","import { UrlRouterProvider, StateProvider } from '@uirouter/angularjs';\nimport { ILocationProvider } from 'angular';\n\nimport { routes } from './routes';\n\nrouterConfig.$inject = [\n  '$locationProvider',\n  '$urlRouterProvider',\n  '$stateProvider'];\n\nexport function routerConfig(\n  $locationProvider: ILocationProvider,\n  $urlRouterProvider: UrlRouterProvider,\n  $stateProvider: StateProvider\n) {\n  $locationProvider.hashPrefix('');\n\n  $urlRouterProvider.otherwise('/index');\n\n  routes.forEach(route => $stateProvider.state(route));\n}\n","import {\n  Ng1StateDeclaration,\n  Transition,\n  StateDeclaration\n} from '@uirouter/angularjs';\n\nexport const routes: Ng1StateDeclaration[] = [\n  {\n    name: 'index',\n    url: '/index',\n    component: 'index',\n    lazyLoad(transition, state) {\n      const $ocLazyLoad = transition.injector().get('$ocLazyLoad');\n      return import('@/views/index/index.module').then(ngModule => $ocLazyLoad.load({ name: ngModule.default }))\n    }\n  }\n];\n","import * as angular from 'angular';\n\nimport { index } from './index.component';\nimport { helloAngular } from './components/hello-angular/hello-angular.component';\n\nexport default angular\n  .module('app.views.index', [])\n  .component({ index, helloAngular })\n  .name;\n","import { IComponentOptions } from 'angular';\n\nimport './index.component.scss';\n\nexport const index: IComponentOptions = {\n  template: require('./index.component.html'),\n}\n","module.exports = \"<div id=view-index class=text-center> <hello-angular></hello-angular> <a class=m-t-20> AngularJS-TypeScript </a> </div> \";","import { IComponentOptions, IController } from 'angular';\n\nimport './hello-angular.component.scss';\n\nexport const helloAngular: IComponentOptions = {\n  template: require('./hello-angular.component.html'),\n  controller: class implements IController {\n    value: string = 'AngularJS';\n  }\n}\n","module.exports = \" <div id=hello-angular> <img src=\" + require(\"./../../../../assets/images/AngularJS-large.png\") + \"> <h1>Hello {{$ctrl.value}}!</h1> <input type=text class=m-t-20 ng-model=$ctrl.value auto-focus> </div> \";","module.exports = __webpack_public_path__ + \"images/AngularJS-large.78ede85.png\";","import { Transition } from '@uirouter/angularjs';\nimport * as NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\nrouteChange.$inject = ['$transitions'];\n\nexport function routeChange($transitions: Transition) {\n  $transitions.onStart({}, transition => {\n    NProgress.start();\n  });\n\n  $transitions.onFinish({}, transition => {\n    NProgress.done();\n  });\n}\n\n// https://ui-router.github.io/guide/ng1/migrate-to-1_0#state-change-events\n// $stateChangeStart $stateChangeCancel $stateChangeSuccess $stateChangeError $stateNotFound\n"],"sourceRoot":""}