{"version":3,"sources":["webpack:///./node_modules/@uirouter/core/lib-esm/common/common.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/predicates.js","webpack:///./node_modules/oclazyload/dist/ocLazyLoad.js","webpack:///./node_modules/nprogress/nprogress.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/hof.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/coreservices.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/rejectFactory.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/angular.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/glob.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/queue.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/strings.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/trace.js","webpack:///./node_modules/@uirouter/core/lib-esm/params/paramType.js","webpack:///./node_modules/@uirouter/core/lib-esm/params/param.js","webpack:///./node_modules/@uirouter/core/lib-esm/params/paramTypes.js","webpack:///./node_modules/@uirouter/core/lib-esm/params/stateParams.js","webpack:///./node_modules/@uirouter/core/lib-esm/path/pathNode.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/targetState.js","webpack:///./node_modules/@uirouter/core/lib-esm/path/pathUtils.js","webpack:///./node_modules/@uirouter/core/lib-esm/resolve/interface.js","webpack:///./node_modules/@uirouter/core/lib-esm/resolve/resolvable.js","webpack:///./node_modules/@uirouter/core/lib-esm/resolve/resolveContext.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateBuilder.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/interface.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateObject.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateMatcher.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateQueueManager.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateRegistry.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/transitionHook.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/hookRegistry.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/hookBuilder.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/transition.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlMatcher.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlMatcherFactory.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlRule.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlRouter.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlRules.js","webpack:///./node_modules/@uirouter/core/lib-esm/view/view.js","webpack:///./node_modules/@uirouter/core/lib-esm/globals.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlConfig.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlService.js","webpack:///./node_modules/@uirouter/core/lib-esm/router.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/coreResolvables.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/redirectTo.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/onEnterExitRetain.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/resolve.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/views.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/updateGlobals.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/url.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/lazyLoad.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/transitionEventType.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/ignoredTransition.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/invalidTransition.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/transitionService.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/q.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/injector.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/utils.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/baseLocationService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/hashLocationService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/memoryLocationService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/pushStateLocationService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/memoryLocationConfig.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/browserLocationConfig.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/plugins.js","webpack:///./node_modules/@uirouter/core/lib-esm/interface.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/statebuilders/views.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/templateFactory.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/stateProvider.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/statebuilders/onEnterExitRetain.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/locationServices.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/urlRouterProvider.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/services.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/directives/stateDirectives.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/directives/viewDirective.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/stateFilters.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/viewScroll.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/index.js","webpack:///(webpack)/buildin/global.js"],"names":["global","__webpack_require__","d","__webpack_exports__","root","fromJson","toJson","forEach","extend","equals","identity","noop","createProxyFunctions","inherit","inArray","_inArray","removeFrom","_removeFrom","pushTo","_pushTo","deregAll","defaults","mergeR","ancestors","pick","omit","pluck","filter","find","mapObj","map","values","allTrueR","anyTrueR","unnestR","flattenR","pushR","uniqR","unnest","flatten","assertPredicate","assertMap","assertFn","pairs","arrayTuples","applyPairs","tail","copy","_extend","silenceUncaughtInPromise","silentRejection","_predicates__WEBPACK_IMPORTED_MODULE_0__","_hof__WEBPACK_IMPORTED_MODULE_1__","_coreservices__WEBPACK_IMPORTED_MODULE_2__","self","undefined","angular","JSON","parse","bind","stringify","obj","cb","_this","Object","keys","key","assign","_equals","x","source","target","fnNames","latebind","bindFunction","fnName","reduce","acc","name","apply","arguments","parent","extra","create","array","indexOf","idx","splice","arr","val","push","functions","slice","fn","opts","defaultsList","_i","length","defaultVals","concat","reverse","memo","item","first","second","path","n","propNames","objCopy","_prop","collection","propName","callback","result","accept","i","elem","token","predicateOrMap","errMsg","Error","args","maxArrayLen","min","Math","_loop_1","keyValTuple","value","src","dest","toObj","j","o1","o2","t1","a1","a2","tup","b","t","getTime","toString","promise","catch","e","error","$q","reject","isUndefined","isDefined","isNull","isNullOrUndefined","isFunction","isNumber","isString","isObject","isArray","isDate","isRegExp","isInjectable","isPromise","_hof__WEBPACK_IMPORTED_MODULE_0__","toStr","prototype","tis","o","Array","call","head","window","regModules","regInvokes","regConfigs","modulesToLoad","realModules","recordDeclarations","broadcast","runBlocks","justLoaded","module","provider","$controllerProvider","$provide","$compileProvider","$filterProvider","$injector","$animateProvider","modules","providers","debug","events","moduleCache","modulePromises","this","config","moduleConfig","_init","element","elements","names","NG_APP_CLASS_REGEXP","append","elm","document","getElementById","replace","querySelectorAll","className","match","exec","attributes","attr","jasmine","mocha","mock","console","moduleName","addReg","mainModule","_invokeQueue","_configBlocks","requires","pop","cache","hashCode","str","len","hash","charCodeAt","_register","registerModules","params","k","moduleFn","tempRunBlocks","getModuleName","newModule","ngModuleFct","_runBlocks","shift","rerun","reconfig","instanceInjector","getInstanceInjector","invoke","_registerInvokeList","invokeList","type","newInvoke","onInvoke","invokeName","hasOwnProperty","potentialNew","invokes","newHash","isNew","signature","checkHashes","data","queue","callInvoke","fct","invoked","jlen","moduleExists","test","message","$get","$log","$rootElement","$rootScope","$cacheFactory","filesCache","deferred","defer","injector","_broadcast","eventName","$broadcast","info","_$log","_getFilesCache","toggleWatch","watch","getModuleConfig","setModuleConfig","getModules","isLoaded","modulesNames","moduleLoaded","_getModuleName","_getModule","_loadDependencies","localParams","loadedModule","diff","promisesList","when","getRequires","requireEntry","files","warn","filesLoader","then","entry","all","inject","real","_addToLoadList","res","loadNext","resolve","err","requireModule","_unregister","bootstrapFct","bootstrap","force","configFn","exports","directive","$ocLazyLoad","$compile","$animate","$parse","$timeout","restrict","terminal","priority","compile","attrs","content","innerHTML","html","$scope","$element","$attr","model","ocLazyLoad","$watch","load","enter","contents","decorator","$delegate","$window","$interval","useCssLoadPatch","anchor","getElementsByTagName","buildElement","el","loaded","cacheBuster","url","dc","Date","substring","get","put","createElement","rel","href","remove","onload","onerror","async","serie","insertBeforeElem","lastChild","insertBefore","jQuery","querySelector","parentNode","ua","navigator","userAgent","toLowerCase","platform","v","appVersion","iOSVersion","parseFloat","parseInt","join","androidVersion","versionMatch","tries","interval","sheet","cssRules","cancel","cssFiles","templatesFiles","jsFiles","promises","cachePromise","pushFile","m","file_type","substr","jsLoader","cssDeferred","cssLoader","templatesDeferred","templatesLoader","jsDeferred","originalModule","errText","originalParams","deferredList","template","paths","ocLazyLoadLoader","$templateCache","$http","response","node","nodeName","id","searchElement","fromIndex","TypeError","O","abs","Infinity","max","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","initial","current","NProgress","version","Settings","settings","minimum","easing","positionUsing","speed","trickle","trickleRate","trickleSpeed","showSpinner","barSelector","spinnerSelector","clamp","toBarPerc","configure","options","status","set","started","isStarted","progress","render","bar","ease","offsetWidth","next","getPositioningCSS","css","barCSS","transform","margin-left","transition","barPositionCSS","opacity","setTimeout","start","work","done","inc","random","amount","$promise","state","always","fromStart","isRendered","addClass","documentElement","spinner","perc","removeElement","body","appendChild","removeClass","bodyStyle","style","vendorPrefix","pending","cssPrefixes","cssProps","getStyleProp","letter","toUpperCase","vendorName","capName","charAt","getVendorProp","applyCss","prop","properties","hasClass","list","classList","oldList","newList","removeChild","curry","initial_args","func_args_length","curried","compose","pipe","funcs","propEq","not","and","or","any","is","eq","pattern","_val","split","fn1","fn2","ctor","constructor","other","struct","makeStub","services","service","methods","fnname","RejectType","ng_from_global","ng","node_modules_angular","Glob","text","glob","regexpString","seg","regexp","RegExp","fromString","matches","queue_Queue","Queue","_items","_limit","_evictListeners","onEvict","common","enqueue","items","evict","dequeue","size","clear","peekTail","peekHead","rejectFactory_id","rejectFactory_Rejection","Rejection","detail","$id","isRejectionPromise","hof","_transitionRejection","superseded","rejection","SUPERSEDED","redirected","invalid","INVALID","ignored","IGNORED","aborted","ABORTED","errored","ERROR","normalize","toPromise","maxLength","padString","kebobString","camelCase","$1","functionToString","fnStr","fnToString","namedFunctionMatch","_fn","predicates","isRejection","stringifyPattern","seen","format","beforeAfterSubstr","char","hostRegex","stripLastPathElement","splitHash","splitQuery","splitEqual","trimHashVal","splitOnDelim","delim","re","joinNeighborsR","uiViewString","uiview","creationContext","$type","fqn","normalizedCat","input","Category","consoleLog","Function","log","consoletable","table","_tid","_rid","transLbl","trans","trace_Trace","Trace","_enabled","approximateDigests","_set","enabled","categories","isNaN","category","enable","disable","traceTransitionStart","TRANSITION","traceTransitionIgnored","traceHookInvocation","step","HOOK","event","context","registeredHook","traceHookResult","hookResult","transitionOptions","traceResolvePath","RESOLVE","traceResolvableResolved","resolvable","traceError","reason","traceSuccess","finalState","traceUIViewEvent","viewData","UIVIEW","traceUIViewConfigUpdated","traceUIViewFill","traceViewSync","VIEWCONFIG","uivheader","mapping","_a","_b","uiView","viewConfig","uiv","cfg","viewDecl","$context","$name","sort","a","localeCompare","traceViewServiceEvent","view","$uiViewName","$uiViewContextAnchor","viewConfigString","traceViewServiceUIViewEvent","trace","paramType_ParamType","ParamType","def","encode","decode","$subPattern","sub","$normalize","$asArray","mode","isSearch","ArrayType","arrayWrap","arrayHandler","allTruthyMode","arrayUnwrap","arrayEqualsHandler","val1","val2","left","right","paramTypeFn","wrapperFn","dynamic","raw","$arrayMode","DefType","hasOwn","isShorthand","getParamDeclaration","paramName","location","noReloadOnSearch","reloadOnSearch","SEARCH","defaultConfig","paramConfig","getStaticDefaultValue","$$fn","unwrapShorthand","makeDefaultType","param_Param","Param","urlConfig","urlType","paramTypes","CONFIG","PATH","getType","arrayDefaults","arrayParamNomenclature","arrayMode","isOptional","squash","defaultPolicy","getSquashPolicy","defaultSquashPolicy","from","to","configuredKeys","getReplace","paramValues","params_1","param","changed","values1","values2","validates","isDefaultValue","tuple","replaceSpecialValues","_defaultValueCache","defaultValue","coreservices","getDefaultValue","normalized","encoded","paramTypes_ParamTypes","ParamTypes","typeQueue","defaultTypes","types","definition","dispose","definitionFn","_flushTypeQueue","valToString","defaultTypeBase","String","string","query","int","bool","Boolean","date","getFullYear","getMonth","getDate","capture","valueOf","l","r","json","stateParams_StateParams","StateParams","$inherit","newParams","$current","$to","parentParams","parents","inherited","inheritList","pathNode_PathNode","PathNode","stateOrNode","paramSchema","resolvables","views","parameters","clone","applyRawParams","pDef","paramDef","parameter","paramsFn","targetState_TargetState","TargetState","_stateRegistry","_identifier","_params","_options","_definition","matcher","relative","identifier","$state","exists","valid","base","stateName","withState","withParams","withOptions","newOpts","isDef","pathUtils_PathUtils","PathUtils","makeTargetState","registry","buildPath","targetState","toParams","buildToPath","fromPath","toPath","inheritParams","applyViewConfigs","$view","states","viewDecls","subPath","viewConfigs","createViewConfig","toKeys","noInherit","toNode","toParamVals","incomingParamVals","fromParamVals","ownParamVals","treeChanges","reloadState","node1","node2","retained","exiting","entering","keep","nonDynamicParams","retainedWithToParams","retainedNode","cloned","matching","pathA","pathB","nodeA","nodeB","predicate","elementIdx","resolvePolicies","LAZY","EAGER","WAIT","NOWAIT","RXWAIT","defaultResolvePolicy","resolvable_Resolvable","Resolvable","arg1","resolveFn","deps","policy","resolved","literal","getPolicy","thisPolicy","statePolicy","resolvePolicy","resolveContext","findNode","maybeWaitForRx","observable$","cached","take","getDependencies","resolvedDeps","resolvedValue","fromData","whens","ALL_WHENS","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","resolveContext_ResolveContext","ResolveContext","_path","getTokens","getResolvable","subContext","addResolvables","newResolvables","resolvePath","matchedWhens","matchesPolicy","acceptedVals","whenOrAsync","nodeResolvables","nowait","wait","getResult","_injector","resolveContext_UIInjectorImpl","availableResolvables","_node","fromInjector","getNative","UIInjectorImpl","native","getAsync","nameBuilder","selfBuilder","$$state","dataBuilder","getUrlBuilder","$urlMatcherFactoryProvider","stateObject","stateDec","newStateDec","parsed","parseUrl","isMatcher","navigable","getNavigableBuilder","isRoot","getParamsBuilder","paramFactory","urlParams","nonUrlParams","fromConfig","p","pathBuilder","includesBuilder","includes","resolvablesBuilder","resolveObj","getToken","provide","literal2Resolvable","useFactory","dependencies","useClass","useValue","useExisting","tuple2Resolvable","annotate","strictDi","item2Resolvable","decl","TransitionHookPhase","TransitionHookScope","stateBuilder_StateBuilder","StateBuilder","urlMatcherFactory","builders","parentName","builder","build","chain","parentFn","_state","segments","stateObject_StateObject","StateObject","stateDecl","isStateClass","__stateObjectCache","nameGlob","ref","matchingKeys","isState","stateMatcher_StateMatcher","StateMatcher","_states","isRelative","stateOrName","matchGlob","isStr","baseState","splitName","pathLength","relName","stateQueueManager_StateQueueManager","StateQueueManager","router","listeners","register","flush","registered","orphans","previousQueueLength","getState","notifyListeners","listener","s","name_1","orphanIdx","existingState","existingFutureState","stateRegistry","deregister","attachRoute","prev","abstract","rulesApi","urlService","rules","rule","urlRuleFactory","stateRegistry_StateRegistry","StateRegistry","stateQueue","_registerRoot","_root","#","onStatesChanged","stateDefinition","_deregisterTree","getChildren","_children","children","deregistered","removeRule","deregisteredStates","found","func","defaultOptions","traceData","transitionHook_TransitionHook","TransitionHook","stateContext","isSuperseded","hookPhase","RUN","isActive","eventType","hooks","waitFor","nextHook","invokeHook","invokeHooks","doneCallback","remainingHooks","runAllHooks","hook","logError","stateService","defaultErrorHandler","_deregistered","notCurrent","getNotCurrentRejection","handleError","getErrorHandler","handleResult","getResultHandler","synchronous","invokeLimit","invokeCount","handleHookResult","isTargetState","_disposed","_aborted","HANDLE_RESULT","LOG_REJECTED_RESULT","LOG_ERROR","REJECT_ERROR","THROW_ERROR","matchState","criterion","toMatch","globStrings","hookRegistry_RegisteredHook","RegisteredHook","tranSvc","matchCriteria","removeHookFromRegistry","_matchingNodes","nodes","_getDefaultMatchCriteria","_pluginapi","_getPathTypes","_getMatchingNodes","criteria","mn","pathtype","isStateHook","scope","STATE","every","makeEvent","transitionService","_registeredHooks","removeHookFn","hookRegistrationFn","matchObject","hookBuilder_HookBuilder","HookBuilder","buildHooksForPhase","phase","_getEvents","buildHooks","hookType","matchingHooks","getMatchingHooks","baseHookOptions","criteriaMatchPath","transitionHook","reverseDepthSort","factor","depthDelta","tupleSort","reverseSort","isCreate","CREATE","$transitions","reg","getHooks","stateSelf","transition_Transition","Transition","_deferred","_hookBuilder","globals","_targetState","_transitionCount","_treeChanges","createTransitionHookRegFns","onCreateHooks","onBefore","onStart","onExit","onRetain","onEnter","onFinish","onSuccess","onError","hookName","enteringStates","$from","compare","pathname","freeze","paramsChanged","fromParams","allParamDescriptors","pathNode","changedValues","descriptor","pathName","getResolveTokens","addResolvable","topath","targetNode","redirectedFrom","originalTransition","rf","redirect","redirects","redirectOpts","newOptions","newTransition","originalEnteringNodes","redirectEnteringNodes","_changedParams","tc","reload","nodeSchemas","toValues","fromValues","schema","toVals","fromVals","changes","_ignoredReason","same","newTC","pendTC","run","getHooksFor","allBeforeHooks","BEFORE","lastStartedTransitionId","transitionHistory","allRunHooks","success","SUCCESS","_error","abort","paramDefs","invalidParams","invalidValues","fromStateOrName","toStateOrName","avoidEmptyHash","diToken","quoteRegExp","surroundPattern","splitOnSlash","urlMatcher_defaultConfig","strict","caseInsensitive","urlMatcher_UrlMatcher","UrlMatcher","_cache","_segments","_compiled","matchArray","details","segment","placeholder","searchPlaceholder","patterns","last","checkParamErrors","nameValidator","matchDetails","index","lastIndex","search","fromSearch","_pattern","encodeDashes","encodeURIComponent","c","pathSegmentsAndParams","staticSegments","pathParams","queryParams","weights","weightsA","weightsB","padVal","padArrays","cmp","_pairs","reverseString","allReversed","allParams","searchParams","nPathSegments","urlm","findParam","urlMatchers","getDetails","isValid","pathString","queryString","paramDetails","__assign","urlMatcherFactory_ParamFactory","ParamFactory","urlMatcherFactory_UrlMatcherFactory","UrlMatcherFactory","strictMode","globalConfig","_isStrictMode","_isCaseInsensitive","object","urlRule_UrlRuleFactory","UrlRuleFactory","what","handler","makeRule","_what","fromUrlMatcher","fromState","fromRegExp","urlRule_BaseUrlRule","urlMatcher","_handler","matchPriority","optional","transitionTo","sticky","Number","isUrlRule","defaultRuleSortFn","urlRouter_UrlRouter","UrlRouter","sync","evt","listen","deferIntercept","urlParts","otherwise","compareFn","update","read","$url","locationService","absolute","isHtml5","html5Mode","hashPrefix","baseHref","appendBasePath","slash","cfgPort","port","protocol","host","defineProperty","interceptDeferred","enumerable","configurable","view_ViewService","ViewService","_uiViews","_viewConfigs","_viewConfigFactories","_listeners","_rootViewContext","_viewConfigFactory","_registeredUIView","_registeredUIViews","_activeViewConfigs","_onSync","normalizeUIViewTarget","rawViewName","viewAtContext","uiViewName","uiViewContextAnchor","relativeViewNameSugar","anchorState","_rootContext","viewType","factory","cfgFactory","cfgs","deactivateViewConfig","activateViewConfig","uiViewsByFqn","viewConfigDepth","count","depthCompare","depthFn","posNeg","uiViewTuples","stateDepth","matchingConfigs","matchedViewConfigs","unmatchedConfigTuples","configUpdated","allTuples","registerUIView","uiViews","available","active","vc","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","globals_UIRouterGlobals","UIRouterGlobals","successfulTransitions","getHandlerFn","prioritySort","URLMATCHER","REGEXP","RAW","OTHER","typeSort","urlMatcherSort","useMatchPriority","idSort","urlRules_UrlRules","UrlRules","_sortFn","_rules","_id","_otherwiseFn","handlerFn","_sorted","ensureSorted","sorted","stableSort","group","_group","arrOfWrapper","wrapperA","wrapperB","cmpDiff","wrapper","urlConfig_UrlConfig","UrlConfig","_defaultSquashPolicy","locationConfig","newprefix","urlService_UrlService","UrlService","newurl","onChange","parts","defaultPrevented","best","go","applyResult","_stopListeningFn","weight","_routerInstance","locationServiceStub","locationConfigStub","router_UIRouter","UIRouter","_disposables","viewService","transitionService_TransitionService","urlRouter","stateService_StateService","_plugins","disposable","plugin","pluginInstance","getPlugin","pluginName","addCoreResolvables","TRANSITION_TOKENS","isTransition","treeChangesCleanup","replaceTransitionWithNull","redirectToHook","redirectTo","makeEnterExitRetainHook","hookFn","onExitHook","onRetainHook","onEnterHook","eagerResolvePath","lazyResolveState","resolveRemaining","loadEnteringViews","enteringViews","activateViews","exitingViews","updateGlobalState","clearCurrentTransition","updateUrl","$urlRouter","urlOptions","lazyLoadHook","lazyLoad","lazyLoadState","orig","lazyLoadFn","transitionEventType_TransitionEventType","hookOrder","ignoredHook","ignoredReason","invalidTransitionHook","defaultTransOpts","notify","custom","TransitionService","_router","_eventTypes","_criteriaPaths","_deregisterHookFns","_defineCorePaths","_defineCoreEvents","_registerCoreTransitionHooks","onCreate","hooksArray","Phase","TH","_defineEvent","_definePathType","cmpByPhase","hookScope","fns","addCoreResolves","registerIgnoredTransitionHook","registerInvalidTransitionHook","registerRedirectToHook","registerOnExitHook","registerOnRetainHook","registerOnEnterHook","eagerResolve","registerEagerResolvePath","lazyResolve","registerLazyResolveState","resolveAll","registerResolveRemaining","loadViews","registerLoadEnteringViews","registerActivateViews","updateGlobals","registerUpdateGlobalState","registerUpdateUrl","registerLazyLoadHook","StateService","invalidCallbacks","_defaultErrorHandler","$error$","stack","boundFns","_handleInvalidTargetState","toState","latestThing","latest","callbackQueue","checkForRedirect","invokeNextCallback","nextCallback","onInvalid","defautGoOpts","transOpts","getCurrentPath","latestSuccess","currentPath","rejectedTransitionHandler","isLatest","errorHandler","transitionToPromise","include","defaultHrefOpts","lossy","nav","q_$q","Promise","injector_globals","STRIP_COMMENTS","ARGUMENT_NAMES","injector_$injector","has","locals","ensureExist","$inject","keyValsToObjectR","accum","getParams","utils_parseUrl","orEmptyString","beforehash","buildUrl","loc","searchObject","locationPluginFactory","serviceClass","configurationClass","uiRouter","configuration","extendStatics","baseLocationService_BaseLocationServices","BaseLocationServices","fireAfterUpdate","_listener","_get","_location","_history","history","__extends","setPrototypeOf","__proto__","__","hashLocationService_HashLocationService","_super","HashLocationService","addEventListener","title","removeEventListener","memoryLocationService_extends","MemoryLocationService","_url","pushStateLocationService_extends","pushStateLocationService_PushStateLocationService","PushStateLocationService","_config","_getBasePrefix","basePrefix","exactBaseHrefMatch","startsWithBase","fullUrl","replaceState","pushState","memoryLocationConfig_MemoryLocationConfig","_baseHref","_port","_protocol","_host","_hashPrefix","newval","browserLocationConfig_BrowserLocationConfig","BrowserLocationConfig","_isHtml5","hostname","getBaseHref","baseTag","servicesPlugin","hashLocationPlugin","pushStateLocationPlugin","memoryLocationPlugin","UIRouterPluginBase","getNg1ViewConfigFactory","templateFactory","views_Ng1ViewConfig","hasAnyKey","ng1ViewsBuilder","compKeys","nonCompKeys","allViewKeys","viewsObject","$default","component","resolveAs","views_id","Ng1ViewConfig","getTemplate","makeComponentTemplate","bindings","controller","getController","results","controllerProvider","providerFn","templateFactory_TemplateFactory","TemplateFactory","_useHttp","minor","$templateRequest","useHttpService","asTemplate","asComponent","templateUrl","fromUrl","templateProvider","fromProvider","componentProvider","fromComponentProvider","headers","Accept","prefix","kebob","kebobed","cmpDefs","getBindings","getComponentBindings","attrName","resolveName","kebobName","bindToController","scopeBindings","bindingsObj","stateProvider_StateProvider","StateProvider","getStateHookBuilder","getLocals","$state$","$transition$","locationServices_Ng1LocationServices","Ng1LocationServices","$locationProvider","_urlListeners","_lp","monkeyPatchPathParameterType","pathType","~","/","~~","~2F","$sniffer","$browser","newUrl","$location","_runtimeServices","$on","_loc","urlRouterProvider_UrlRouterProvider","UrlRouterProvider","injectableHandler","$match","$stateParams","ruleFn","urlRules","mod_init","mod_util","mod_rtr","mod_state","mod_main","services_router","$uiRouterProvider","stateProvider","ng1LocationService","getProviderFor","serviceName","$urp","runBlock","$uiRouter","checkStrictDi","watchDigests","urlRouterProvider","$urlMatcherFactory","uiSrefDirective","uiStateDirective","uiSrefActiveDirective","viewDirective_uiView","ctx","parseStateRef","paramsOnly","paramExpr","stateDirectives_stateContext","$uiView","inheritedData","processedDef","uiState","uiStateOpts","defaultOpts","uiStateParams","getTypeInfo","isSvg","isForm","isAnchor","clickable","clickHook","getDef","button","which","ctrlKey","metaKey","shiftKey","transition_1","preventDefault","ignorePreventDefaultCount_1","bindEvents","on","events_1","event_1","off","events_2","event_2","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","$ViewDirectiveFill","$controller","getControllerAs","getResolveAs","tElement","empty","$cfg","resolveCtx","link","controllerAs","controllerInstance","registerControllerCallbacks","tagRegexp_1","deregisterWatch_1","directiveEl","tagName","ctrlInstance","require","uiSrefActive","unlinkInfoFn","rawDef","uiSref","$$addStateInfo","$set","uiSrefOpts","$eval","inputAttrs","watchDeregFns","field","$observe","expr","$interpolate","$attrs","activeEqClass","deregisterStatesChangedListener","deregisterOnStartListener","deregisterStateChangeSuccessListener","uiSrefActiveEq","updateAfterTransition","handleStatesChanged","setStatesFromDefinitionObject","statesDefinition","activeClass","addStateForClass","addState","stateParams","stateInfo","splitClasses","getClasses","stateList","allClasses","fuzzyClasses","exactClasses","addClasses","removeClasses","cls","$evalAsync","newState","$uiViewScroll","rootData","transclude","tAttrs","$transclude","previousEl","currentEl","currentScope","unregister","onloadExp","autoScrollExp","renderer","leave","activeUIView","config1","config2","updateView","fromParentTagConfig","fromParentTag","newScope","$new","animEnter","animLeave","$uiViewData","$uiViewAnim","$animEnter","$animLeave","$$animLeave","$emit","$destroy","_viewData_1","cleanupLastView","hasComponentImpl","_uiCanExitId","$onInit","viewState","hookOptions","uiOnParamsChanged","viewCreationTrans_1","getNodeSchema","toSchema","fromSchema","changedToParams","changedKeys_1","newValues","uiCanExit","id_1","prevTruthyAnswer_1","ids","useAnchorScroll","$anchorScroll","scrollIntoView","lib_esm_namespaceObject","g"],"mappings":"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","file":"js/chunk-vendors.0aecbbf3.js","sourcesContent":["/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred @publicapi @module common\n */ /** */\nimport { isFunction, isString, isArray, isRegExp, isDate } from './predicates';\nimport { all, any, prop, curry, not } from './hof';\nimport { services } from './coreservices';\nexport var root = (typeof self === 'object' && self.self === self && self) ||\n    (typeof global === 'object' && global.global === global && global) ||\n    this;\nvar angular = root.angular || {};\nexport var fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexport var toJson = angular.toJson || JSON.stringify.bind(JSON);\nexport var forEach = angular.forEach || _forEach;\nexport var extend = Object.assign || _extend;\nexport var equals = angular.equals || _equals;\nexport function identity(x) {\n    return x;\n}\nexport function noop() { }\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nexport function createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) { return source()[fnName].bind(bind()); };\n    var makeLateRebindFn = function (fnName) {\n        return function lateRebindFunction() {\n            target[fnName] = bindFunction(fnName);\n            return target[fnName].apply(null, arguments);\n        };\n    };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexport var inherit = function (parent, extra) { return extend(Object.create(parent), extra); };\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexport var inArray = curry(_inArray);\nexport function _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nexport var removeFrom = curry(_removeFrom);\nexport function _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\n/** pushes a values to an array and returns the value */\nexport var pushTo = curry(_pushTo);\nexport function _pushTo(arr, val) {\n    return arr.push(val), val;\n}\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nexport var deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nexport function defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var defaultVals = extend.apply(void 0, [{}].concat(defaultsList.reverse()));\n    return extend(defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\n/** Reduce function that merges each element of the list into a single object, using extend */\nexport var mergeR = function (memo, item) { return extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nexport function ancestors(first, second) {\n    var path = [];\n    // tslint:disable-next-line:forin\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nexport function pick(obj, propNames) {\n    var objCopy = {};\n    for (var _prop in obj) {\n        if (propNames.indexOf(_prop) !== -1) {\n            objCopy[_prop] = obj[_prop];\n        }\n    }\n    return objCopy;\n}\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nexport function omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(not(inArray(propNames)))\n        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});\n}\n/**\n * Maps an array, or object to a property (by name)\n */\nexport function pluck(collection, propName) {\n    return map(collection, prop(propName));\n}\n/** Filters an Array or an Object's properties based on a predicate */\nexport function filter(collection, callback) {\n    var arr = isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return (result[key] = x); };\n    forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nexport function find(collection, callback) {\n    var result;\n    forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexport var mapObj = map;\n/** Maps an array or object properties using a callback function */\nexport function map(collection, callback, target) {\n    target = target || (isArray(collection) ? [] : {});\n    forEach(collection, function (item, i) { return (target[i] = callback(item, i)); });\n    return target;\n}\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexport var values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexport var allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexport var anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flattenR = function (memo, elem) {\n    return isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nexport function pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\n/** Reduce function that filters out duplicates */\nexport var uniqR = function (acc, token) { return (inArray(acc, token) ? acc : pushR(acc, token)); };\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnest = function (arr) { return arr.reduce(unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flatten = function (arr) { return arr.reduce(flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexport var assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nexport var assertMap = assertFn;\nexport function assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = 'assert failure'; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexport var pairs = function (obj) { return Object.keys(obj).map(function (key) { return [key, obj[key]]; }); };\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nexport function arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var result = [];\n    var _loop_1 = function (i) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    };\n    for (var i = 0; i < maxArrayLen; i++) {\n        _loop_1(i);\n    }\n    return result;\n}\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nexport function applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!isString(key))\n        throw new Error('invalid parameters to applyPairs');\n    memo[key] = value;\n    return memo;\n}\n/** Get the last element of an array */\nexport function tail(arr) {\n    return (arr.length && arr[arr.length - 1]) || undefined;\n}\n/**\n * shallow copy from src to dest\n */\nexport function copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nexport function _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (all(isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (all(isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (all(isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (all(isFunction)(tup))\n        return true; // meh\n    var predicates = [isFunction, isArray, isDate, isRegExp];\n    if (predicates.map(any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var keys = {};\n    // tslint:disable-next-line:forin\n    for (var key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (var key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nexport var silenceUncaughtInPromise = function (promise) { return promise.catch(function (e) { return 0; }) && promise; };\nexport var silentRejection = function (error) { return silenceUncaughtInPromise(services.$q.reject(error)); };\n//# sourceMappingURL=common.js.map","/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */ /** */\nimport { and, not, pipe, prop, or } from './hof';\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof x === t; }; };\nexport var isUndefined = tis('undefined');\nexport var isDefined = not(isUndefined);\nexport var isNull = function (o) { return o === null; };\nexport var isNullOrUndefined = or(isNull, isUndefined);\nexport var isFunction = tis('function');\nexport var isNumber = tis('number');\nexport var isString = tis('string');\nexport var isObject = function (x) { return x !== null && typeof x === 'object'; };\nexport var isArray = Array.isArray;\nexport var isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexport var isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nexport function isInjectable(val) {\n    if (isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n    }\n    return isFunction(val);\n}\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexport var isPromise = and(isObject, pipe(prop('then'), isFunction));\n//# sourceMappingURL=predicates.js.map","/**\n * oclazyload - Load modules on demand (lazy load) with angularJS\n * @version v1.0.10\n * @link https://github.com/ocombe/ocLazyLoad\n * @license MIT\n * @author Olivier Combe <olivier.combe@gmail.com>\n */\n(function (angular, window) {\n    'use strict';\n\n    var regModules = ['ng', 'oc.lazyLoad'],\n        regInvokes = {},\n        regConfigs = [],\n        modulesToLoad = [],\n        // modules to load from angular.module or other sources\n    realModules = [],\n        // real modules called from angular.module\n    recordDeclarations = [],\n        broadcast = angular.noop,\n        runBlocks = {},\n        justLoaded = [];\n\n    var ocLazyLoad = angular.module('oc.lazyLoad', ['ng']);\n\n    ocLazyLoad.provider('$ocLazyLoad', [\"$controllerProvider\", \"$provide\", \"$compileProvider\", \"$filterProvider\", \"$injector\", \"$animateProvider\", function ($controllerProvider, $provide, $compileProvider, $filterProvider, $injector, $animateProvider) {\n        var modules = {},\n            providers = {\n            $controllerProvider: $controllerProvider,\n            $compileProvider: $compileProvider,\n            $filterProvider: $filterProvider,\n            $provide: $provide, // other things (constant, decorator, provider, factory, service)\n            $injector: $injector,\n            $animateProvider: $animateProvider\n        },\n            debug = false,\n            events = false,\n            moduleCache = [],\n            modulePromises = {};\n\n        moduleCache.push = function (value) {\n            if (this.indexOf(value) === -1) {\n                Array.prototype.push.apply(this, arguments);\n            }\n        };\n\n        this.config = function (config) {\n            // If we want to define modules configs\n            if (angular.isDefined(config.modules)) {\n                if (angular.isArray(config.modules)) {\n                    angular.forEach(config.modules, function (moduleConfig) {\n                        modules[moduleConfig.name] = moduleConfig;\n                    });\n                } else {\n                    modules[config.modules.name] = config.modules;\n                }\n            }\n\n            if (angular.isDefined(config.debug)) {\n                debug = config.debug;\n            }\n\n            if (angular.isDefined(config.events)) {\n                events = config.events;\n            }\n        };\n\n        /**\r\n         * Get the list of existing registered modules\r\n         * @param element\r\n         */\n        this._init = function _init(element) {\n            // this is probably useless now because we override angular.bootstrap\n            if (modulesToLoad.length === 0) {\n                var elements = [element],\n                    names = ['ng:app', 'ng-app', 'x-ng-app', 'data-ng-app'],\n                    NG_APP_CLASS_REGEXP = /\\sng[:\\-]app(:\\s*([\\w\\d_]+);?)?\\s/,\n                    append = function append(elm) {\n                    return elm && elements.push(elm);\n                };\n\n                angular.forEach(names, function (name) {\n                    names[name] = true;\n                    append(document.getElementById(name));\n                    name = name.replace(':', '\\\\:');\n                    if (typeof element[0] !== 'undefined' && element[0].querySelectorAll) {\n                        angular.forEach(element[0].querySelectorAll('.' + name), append);\n                        angular.forEach(element[0].querySelectorAll('.' + name + '\\\\:'), append);\n                        angular.forEach(element[0].querySelectorAll('[' + name + ']'), append);\n                    }\n                });\n\n                angular.forEach(elements, function (elm) {\n                    if (modulesToLoad.length === 0) {\n                        var className = ' ' + element.className + ' ';\n                        var match = NG_APP_CLASS_REGEXP.exec(className);\n                        if (match) {\n                            modulesToLoad.push((match[2] || '').replace(/\\s+/g, ','));\n                        } else {\n                            angular.forEach(elm.attributes, function (attr) {\n                                if (modulesToLoad.length === 0 && names[attr.name]) {\n                                    modulesToLoad.push(attr.value);\n                                }\n                            });\n                        }\n                    }\n                });\n            }\n\n            if (modulesToLoad.length === 0 && !((window.jasmine || window.mocha) && angular.isDefined(angular.mock))) {\n                console.error('No module found during bootstrap, unable to init ocLazyLoad. You should always use the ng-app directive or angular.boostrap when you use ocLazyLoad.');\n            }\n\n            var addReg = function addReg(moduleName) {\n                if (regModules.indexOf(moduleName) === -1) {\n                    // register existing modules\n                    regModules.push(moduleName);\n                    var mainModule = angular.module(moduleName);\n\n                    // register existing components (directives, services, ...)\n                    _invokeQueue(null, mainModule._invokeQueue, moduleName);\n                    _invokeQueue(null, mainModule._configBlocks, moduleName); // angular 1.3+\n\n                    angular.forEach(mainModule.requires, addReg);\n                }\n            };\n\n            angular.forEach(modulesToLoad, function (moduleName) {\n                addReg(moduleName);\n            });\n\n            modulesToLoad = []; // reset for next bootstrap\n            recordDeclarations.pop(); // wait for the next lazy load\n        };\n\n        /**\r\n         * Like JSON.stringify but that doesn't throw on circular references\r\n         * @param obj\r\n         */\n        var stringify = function stringify(obj) {\n            try {\n                return JSON.stringify(obj);\n            } catch (e) {\n                var cache = [];\n                return JSON.stringify(obj, function (key, value) {\n                    if (angular.isObject(value) && value !== null) {\n                        if (cache.indexOf(value) !== -1) {\n                            // Circular reference found, discard key\n                            return;\n                        }\n                        // Store value in our collection\n                        cache.push(value);\n                    }\n                    return value;\n                });\n            }\n        };\n\n        var hashCode = function hashCode(str) {\n            var hash = 0,\n                i,\n                chr,\n                len;\n            if (str.length == 0) {\n                return hash;\n            }\n            for (i = 0, len = str.length; i < len; i++) {\n                chr = str.charCodeAt(i);\n                hash = (hash << 5) - hash + chr;\n                hash |= 0; // Convert to 32bit integer\n            }\n            return hash;\n        };\n\n        function _register(providers, registerModules, params) {\n            if (registerModules) {\n                var k,\n                    moduleName,\n                    moduleFn,\n                    tempRunBlocks = [];\n                for (k = registerModules.length - 1; k >= 0; k--) {\n                    moduleName = registerModules[k];\n                    if (!angular.isString(moduleName)) {\n                        moduleName = getModuleName(moduleName);\n                    }\n                    if (!moduleName || justLoaded.indexOf(moduleName) !== -1 || modules[moduleName] && realModules.indexOf(moduleName) === -1) {\n                        continue;\n                    }\n                    // new if not registered\n                    var newModule = regModules.indexOf(moduleName) === -1;\n                    moduleFn = ngModuleFct(moduleName);\n                    if (newModule) {\n                        regModules.push(moduleName);\n                        _register(providers, moduleFn.requires, params);\n                    }\n                    if (moduleFn._runBlocks.length > 0) {\n                        // new run blocks detected! Replace the old ones (if existing)\n                        runBlocks[moduleName] = [];\n                        while (moduleFn._runBlocks.length > 0) {\n                            runBlocks[moduleName].push(moduleFn._runBlocks.shift());\n                        }\n                    }\n                    if (angular.isDefined(runBlocks[moduleName]) && (newModule || params.rerun)) {\n                        tempRunBlocks = tempRunBlocks.concat(runBlocks[moduleName]);\n                    }\n                    _invokeQueue(providers, moduleFn._invokeQueue, moduleName, params.reconfig);\n                    _invokeQueue(providers, moduleFn._configBlocks, moduleName, params.reconfig); // angular 1.3+\n                    broadcast(newModule ? 'ocLazyLoad.moduleLoaded' : 'ocLazyLoad.moduleReloaded', moduleName);\n                    registerModules.pop();\n                    justLoaded.push(moduleName);\n                }\n                // execute the run blocks at the end\n                var instanceInjector = providers.getInstanceInjector();\n                angular.forEach(tempRunBlocks, function (fn) {\n                    instanceInjector.invoke(fn);\n                });\n            }\n        }\n\n        function _registerInvokeList(args, moduleName) {\n            var invokeList = args[2][0],\n                type = args[1],\n                newInvoke = false;\n            if (angular.isUndefined(regInvokes[moduleName])) {\n                regInvokes[moduleName] = {};\n            }\n            if (angular.isUndefined(regInvokes[moduleName][type])) {\n                regInvokes[moduleName][type] = {};\n            }\n            var onInvoke = function onInvoke(invokeName, invoke) {\n                if (!regInvokes[moduleName][type].hasOwnProperty(invokeName)) {\n                    regInvokes[moduleName][type][invokeName] = [];\n                }\n                if (checkHashes(invoke, regInvokes[moduleName][type][invokeName])) {\n                    newInvoke = true;\n                    regInvokes[moduleName][type][invokeName].push(invoke);\n                    broadcast('ocLazyLoad.componentLoaded', [moduleName, type, invokeName]);\n                }\n            };\n\n            function checkHashes(potentialNew, invokes) {\n                var isNew = true,\n                    newHash;\n                if (invokes.length) {\n                    newHash = signature(potentialNew);\n                    angular.forEach(invokes, function (invoke) {\n                        isNew = isNew && signature(invoke) !== newHash;\n                    });\n                }\n                return isNew;\n            }\n\n            function signature(data) {\n                if (angular.isArray(data)) {\n                    // arrays are objects, we need to test for it first\n                    return hashCode(data.toString());\n                } else if (angular.isObject(data)) {\n                    // constants & values for example\n                    return hashCode(stringify(data));\n                } else {\n                    if (angular.isDefined(data) && data !== null) {\n                        return hashCode(data.toString());\n                    } else {\n                        // null & undefined constants\n                        return data;\n                    }\n                }\n            }\n\n            if (angular.isString(invokeList)) {\n                onInvoke(invokeList, args[2][1]);\n            } else if (angular.isObject(invokeList)) {\n                angular.forEach(invokeList, function (invoke, key) {\n                    if (angular.isString(invoke)) {\n                        // decorators for example\n                        onInvoke(invoke, invokeList[1]);\n                    } else {\n                        // components registered as object lists {\"componentName\": function() {}}\n                        onInvoke(key, invoke);\n                    }\n                });\n            } else {\n                return false;\n            }\n            return newInvoke;\n        }\n\n        function _invokeQueue(providers, queue, moduleName, reconfig) {\n            if (!queue) {\n                return;\n            }\n\n            var i, len, args, provider;\n            for (i = 0, len = queue.length; i < len; i++) {\n                args = queue[i];\n                if (angular.isArray(args)) {\n                    if (providers !== null) {\n                        if (providers.hasOwnProperty(args[0])) {\n                            provider = providers[args[0]];\n                        } else {\n                            throw new Error('unsupported provider ' + args[0]);\n                        }\n                    }\n                    var isNew = _registerInvokeList(args, moduleName);\n                    if (args[1] !== 'invoke') {\n                        if (isNew && angular.isDefined(provider)) {\n                            provider[args[1]].apply(provider, args[2]);\n                        }\n                    } else {\n                        // config block\n                        var callInvoke = function callInvoke(fct) {\n                            var invoked = regConfigs.indexOf(moduleName + '-' + fct);\n                            if (invoked === -1 || reconfig) {\n                                if (invoked === -1) {\n                                    regConfigs.push(moduleName + '-' + fct);\n                                }\n                                if (angular.isDefined(provider)) {\n                                    provider[args[1]].apply(provider, args[2]);\n                                }\n                            }\n                        };\n                        if (angular.isFunction(args[2][0])) {\n                            callInvoke(args[2][0]);\n                        } else if (angular.isArray(args[2][0])) {\n                            for (var j = 0, jlen = args[2][0].length; j < jlen; j++) {\n                                if (angular.isFunction(args[2][0][j])) {\n                                    callInvoke(args[2][0][j]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        function getModuleName(module) {\n            var moduleName = null;\n            if (angular.isString(module)) {\n                moduleName = module;\n            } else if (angular.isObject(module) && module.hasOwnProperty('name') && angular.isString(module.name)) {\n                moduleName = module.name;\n            }\n            return moduleName;\n        }\n\n        function moduleExists(moduleName) {\n            if (!angular.isString(moduleName)) {\n                return false;\n            }\n            try {\n                return ngModuleFct(moduleName);\n            } catch (e) {\n                if (/No module/.test(e) || e.message.indexOf('$injector:nomod') > -1) {\n                    return false;\n                }\n            }\n        }\n\n        this.$get = [\"$log\", \"$rootElement\", \"$rootScope\", \"$cacheFactory\", \"$q\", function ($log, $rootElement, $rootScope, $cacheFactory, $q) {\n            var instanceInjector,\n                filesCache = $cacheFactory('ocLazyLoad');\n\n            if (!debug) {\n                $log = {};\n                $log['error'] = angular.noop;\n                $log['warn'] = angular.noop;\n                $log['info'] = angular.noop;\n            }\n\n            // Make this lazy because when $get() is called the instance injector hasn't been assigned to the rootElement yet\n            providers.getInstanceInjector = function () {\n                return instanceInjector ? instanceInjector : instanceInjector = $rootElement.data('$injector') || angular.injector();\n            };\n\n            broadcast = function broadcast(eventName, params) {\n                if (events) {\n                    $rootScope.$broadcast(eventName, params);\n                }\n                if (debug) {\n                    $log.info(eventName, params);\n                }\n            };\n\n            function reject(e) {\n                var deferred = $q.defer();\n                $log.error(e.message);\n                deferred.reject(e);\n                return deferred.promise;\n            }\n\n            return {\n                _broadcast: broadcast,\n\n                _$log: $log,\n\n                /**\r\n                 * Returns the files cache used by the loaders to store the files currently loading\r\n                 * @returns {*}\r\n                 */\n                _getFilesCache: function getFilesCache() {\n                    return filesCache;\n                },\n\n                /**\r\n                 * Let the service know that it should monitor angular.module because files are loading\r\n                 * @param watch boolean\r\n                 */\n                toggleWatch: function toggleWatch(watch) {\n                    if (watch) {\n                        recordDeclarations.push(true);\n                    } else {\n                        recordDeclarations.pop();\n                    }\n                },\n\n                /**\r\n                 * Let you get a module config object\r\n                 * @param moduleName String the name of the module\r\n                 * @returns {*}\r\n                 */\n                getModuleConfig: function getModuleConfig(moduleName) {\n                    if (!angular.isString(moduleName)) {\n                        throw new Error('You need to give the name of the module to get');\n                    }\n                    if (!modules[moduleName]) {\n                        return null;\n                    }\n                    return angular.copy(modules[moduleName]);\n                },\n\n                /**\r\n                 * Let you define a module config object\r\n                 * @param moduleConfig Object the module config object\r\n                 * @returns {*}\r\n                 */\n                setModuleConfig: function setModuleConfig(moduleConfig) {\n                    if (!angular.isObject(moduleConfig)) {\n                        throw new Error('You need to give the module config object to set');\n                    }\n                    modules[moduleConfig.name] = moduleConfig;\n                    return moduleConfig;\n                },\n\n                /**\r\n                 * Returns the list of loaded modules\r\n                 * @returns {string[]}\r\n                 */\n                getModules: function getModules() {\n                    return regModules;\n                },\n\n                /**\r\n                 * Let you check if a module has been loaded into Angular or not\r\n                 * @param modulesNames String/Object a module name, or a list of module names\r\n                 * @returns {boolean}\r\n                 */\n                isLoaded: function isLoaded(modulesNames) {\n                    var moduleLoaded = function moduleLoaded(module) {\n                        var isLoaded = regModules.indexOf(module) > -1;\n                        if (!isLoaded) {\n                            isLoaded = !!moduleExists(module);\n                        }\n                        return isLoaded;\n                    };\n                    if (angular.isString(modulesNames)) {\n                        modulesNames = [modulesNames];\n                    }\n                    if (angular.isArray(modulesNames)) {\n                        var i, len;\n                        for (i = 0, len = modulesNames.length; i < len; i++) {\n                            if (!moduleLoaded(modulesNames[i])) {\n                                return false;\n                            }\n                        }\n                        return true;\n                    } else {\n                        throw new Error('You need to define the module(s) name(s)');\n                    }\n                },\n\n                /**\r\n                 * Given a module, return its name\r\n                 * @param module\r\n                 * @returns {String}\r\n                 */\n                _getModuleName: getModuleName,\n\n                /**\r\n                 * Returns a module if it exists\r\n                 * @param moduleName\r\n                 * @returns {module}\r\n                 */\n                _getModule: function getModule(moduleName) {\n                    try {\n                        return ngModuleFct(moduleName);\n                    } catch (e) {\n                        // this error message really suxx\n                        if (/No module/.test(e) || e.message.indexOf('$injector:nomod') > -1) {\n                            e.message = 'The module \"' + stringify(moduleName) + '\" that you are trying to load does not exist. ' + e.message;\n                        }\n                        throw e;\n                    }\n                },\n\n                /**\r\n                 * Check if a module exists and returns it if it does\r\n                 * @param moduleName\r\n                 * @returns {boolean}\r\n                 */\n                moduleExists: moduleExists,\n\n                /**\r\n                 * Load the dependencies, and might try to load new files depending on the config\r\n                 * @param moduleName (String or Array of Strings)\r\n                 * @param localParams\r\n                 * @returns {*}\r\n                 * @private\r\n                 */\n                _loadDependencies: function _loadDependencies(moduleName, localParams) {\n                    var loadedModule,\n                        requires,\n                        diff,\n                        promisesList = [],\n                        self = this;\n\n                    moduleName = self._getModuleName(moduleName);\n\n                    if (moduleName === null) {\n                        return $q.when();\n                    } else {\n                        try {\n                            loadedModule = self._getModule(moduleName);\n                        } catch (e) {\n                            return reject(e);\n                        }\n                        // get unloaded requires\n                        requires = self.getRequires(loadedModule);\n                    }\n\n                    angular.forEach(requires, function (requireEntry) {\n                        // If no configuration is provided, try and find one from a previous load.\n                        // If there isn't one, bail and let the normal flow run\n                        if (angular.isString(requireEntry)) {\n                            var config = self.getModuleConfig(requireEntry);\n                            if (config === null) {\n                                moduleCache.push(requireEntry); // We don't know about this module, but something else might, so push it anyway.\n                                return;\n                            }\n                            requireEntry = config;\n                            // ignore the name because it's probably not a real module name\n                            config.name = undefined;\n                        }\n\n                        // Check if this dependency has been loaded previously\n                        if (self.moduleExists(requireEntry.name)) {\n                            // compare against the already loaded module to see if the new definition adds any new files\n                            diff = requireEntry.files.filter(function (n) {\n                                return self.getModuleConfig(requireEntry.name).files.indexOf(n) < 0;\n                            });\n\n                            // If the module was redefined, advise via the console\n                            if (diff.length !== 0) {\n                                self._$log.warn('Module \"', moduleName, '\" attempted to redefine configuration for dependency. \"', requireEntry.name, '\"\\n Additional Files Loaded:', diff);\n                            }\n\n                            // Push everything to the file loader, it will weed out the duplicates.\n                            if (angular.isDefined(self.filesLoader)) {\n                                // if a files loader is defined\n                                promisesList.push(self.filesLoader(requireEntry, localParams).then(function () {\n                                    return self._loadDependencies(requireEntry);\n                                }));\n                            } else {\n                                return reject(new Error('Error: New dependencies need to be loaded from external files (' + requireEntry.files + '), but no loader has been defined.'));\n                            }\n                            return;\n                        } else if (angular.isArray(requireEntry)) {\n                            var files = [];\n                            angular.forEach(requireEntry, function (entry) {\n                                // let's check if the entry is a file name or a config name\n                                var config = self.getModuleConfig(entry);\n                                if (config === null) {\n                                    files.push(entry);\n                                } else if (config.files) {\n                                    files = files.concat(config.files);\n                                }\n                            });\n                            if (files.length > 0) {\n                                requireEntry = {\n                                    files: files\n                                };\n                            }\n                        } else if (angular.isObject(requireEntry)) {\n                            if (requireEntry.hasOwnProperty('name') && requireEntry['name']) {\n                                // The dependency doesn't exist in the module cache and is a new configuration, so store and push it.\n                                self.setModuleConfig(requireEntry);\n                                moduleCache.push(requireEntry['name']);\n                            }\n                        }\n\n                        // Check if the dependency has any files that need to be loaded. If there are, push a new promise to the promise list.\n                        if (angular.isDefined(requireEntry.files) && requireEntry.files.length !== 0) {\n                            if (angular.isDefined(self.filesLoader)) {\n                                // if a files loader is defined\n                                promisesList.push(self.filesLoader(requireEntry, localParams).then(function () {\n                                    return self._loadDependencies(requireEntry);\n                                }));\n                            } else {\n                                return reject(new Error('Error: the module \"' + requireEntry.name + '\" is defined in external files (' + requireEntry.files + '), but no loader has been defined.'));\n                            }\n                        }\n                    });\n\n                    // Create a wrapper promise to watch the promise list and resolve it once everything is done.\n                    return $q.all(promisesList);\n                },\n\n                /**\r\n                 * Inject new modules into Angular\r\n                 * @param moduleName\r\n                 * @param localParams\r\n                 * @param real\r\n                 */\n                inject: function inject(moduleName) {\n                    var localParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n                    var real = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n                    var self = this,\n                        deferred = $q.defer();\n                    if (angular.isDefined(moduleName) && moduleName !== null) {\n                        if (angular.isArray(moduleName)) {\n                            var promisesList = [];\n                            angular.forEach(moduleName, function (module) {\n                                promisesList.push(self.inject(module, localParams, real));\n                            });\n                            return $q.all(promisesList);\n                        } else {\n                            self._addToLoadList(self._getModuleName(moduleName), true, real);\n                        }\n                    }\n                    if (modulesToLoad.length > 0) {\n                        var res = modulesToLoad.slice(); // clean copy\n                        var loadNext = function loadNext(moduleName) {\n                            moduleCache.push(moduleName);\n                            modulePromises[moduleName] = deferred.promise;\n                            self._loadDependencies(moduleName, localParams).then(function success() {\n                                try {\n                                    justLoaded = [];\n                                    _register(providers, moduleCache, localParams);\n                                } catch (e) {\n                                    self._$log.error(e.message);\n                                    deferred.reject(e);\n                                    return;\n                                }\n\n                                if (modulesToLoad.length > 0) {\n                                    loadNext(modulesToLoad.shift()); // load the next in list\n                                } else {\n                                        deferred.resolve(res); // everything has been loaded, resolve\n                                    }\n                            }, function error(err) {\n                                deferred.reject(err);\n                            });\n                        };\n\n                        // load the first in list\n                        loadNext(modulesToLoad.shift());\n                    } else if (localParams && localParams.name && modulePromises[localParams.name]) {\n                        return modulePromises[localParams.name];\n                    } else {\n                        deferred.resolve();\n                    }\n                    return deferred.promise;\n                },\n\n                /**\r\n                 * Get the list of required modules/services/... for this module\r\n                 * @param module\r\n                 * @returns {Array}\r\n                 */\n                getRequires: function getRequires(module) {\n                    var requires = [];\n                    angular.forEach(module.requires, function (requireModule) {\n                        if (regModules.indexOf(requireModule) === -1) {\n                            requires.push(requireModule);\n                        }\n                    });\n                    return requires;\n                },\n\n                /**\r\n                 * Invoke the new modules & component by their providers\r\n                 * @param providers\r\n                 * @param queue\r\n                 * @param moduleName\r\n                 * @param reconfig\r\n                 * @private\r\n                 */\n                _invokeQueue: _invokeQueue,\n\n                /**\r\n                 * Check if a module has been invoked and registers it if not\r\n                 * @param args\r\n                 * @param moduleName\r\n                 * @returns {boolean} is new\r\n                 */\n                _registerInvokeList: _registerInvokeList,\n\n                /**\r\n                 * Register a new module and loads it, executing the run/config blocks if needed\r\n                 * @param providers\r\n                 * @param registerModules\r\n                 * @param params\r\n                 * @private\r\n                 */\n                _register: _register,\n\n                /**\r\n                 * Add a module name to the list of modules that will be loaded in the next inject\r\n                 * @param name\r\n                 * @param force\r\n                 * @private\r\n                 */\n                _addToLoadList: _addToLoadList,\n\n                /**\r\n                 * Unregister modules (you shouldn't have to use this)\r\n                 * @param modules\r\n                 */\n                _unregister: function _unregister(modules) {\n                    if (angular.isDefined(modules)) {\n                        if (angular.isArray(modules)) {\n                            angular.forEach(modules, function (module) {\n                                regInvokes[module] = undefined;\n                            });\n                        }\n                    }\n                }\n            };\n        }];\n\n        // Let's get the list of loaded modules & components\n        this._init(angular.element(window.document));\n    }]);\n\n    var bootstrapFct = angular.bootstrap;\n    angular.bootstrap = function (element, modules, config) {\n        // Clean state from previous bootstrap\n        regModules = ['ng', 'oc.lazyLoad'];\n        regInvokes = {};\n        regConfigs = [];\n        modulesToLoad = [];\n        realModules = [];\n        recordDeclarations = [];\n        broadcast = angular.noop;\n        runBlocks = {};\n        justLoaded = [];\n        // we use slice to make a clean copy\n        angular.forEach(modules.slice(), function (module) {\n            _addToLoadList(module, true, true);\n        });\n        return bootstrapFct(element, modules, config);\n    };\n\n    var _addToLoadList = function _addToLoadList(name, force, real) {\n        if ((recordDeclarations.length > 0 || force) && angular.isString(name) && modulesToLoad.indexOf(name) === -1) {\n            modulesToLoad.push(name);\n            if (real) {\n                realModules.push(name);\n            }\n        }\n    };\n\n    var ngModuleFct = angular.module;\n    angular.module = function (name, requires, configFn) {\n        _addToLoadList(name, false, true);\n        return ngModuleFct(name, requires, configFn);\n    };\n\n    // CommonJS package manager support:\n    if (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports === exports) {\n        module.exports = 'oc.lazyLoad';\n    }\n})(angular, window);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').directive('ocLazyLoad', [\"$ocLazyLoad\", \"$compile\", \"$animate\", \"$parse\", \"$timeout\", function ($ocLazyLoad, $compile, $animate, $parse, $timeout) {\n        return {\n            restrict: 'A',\n            terminal: true,\n            priority: 1000,\n            compile: function compile(element, attrs) {\n                // we store the content and remove it before compilation\n                var content = element[0].innerHTML;\n                element.html('');\n\n                return function ($scope, $element, $attr) {\n                    var model = $parse($attr.ocLazyLoad);\n                    $scope.$watch(function () {\n                        return model($scope) || $attr.ocLazyLoad; // it can be a module name (string), an object, an array, or a scope reference to any of this\n                    }, function (moduleName) {\n                        if (angular.isDefined(moduleName)) {\n                            $ocLazyLoad.load(moduleName).then(function () {\n                                // Attach element contents to DOM and then compile them.\n                                // This prevents an issue where IE invalidates saved element objects (HTMLCollections)\n                                // of the compiled contents when attaching to the parent DOM.\n                                $animate.enter(content, $element);\n                                // get the new content & compile it\n                                $compile($element.contents())($scope);\n                            });\n                        }\n                    }, true);\n                };\n            }\n        };\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$q\", \"$window\", \"$interval\", function ($delegate, $q, $window, $interval) {\n            var uaCssChecked = false,\n                useCssLoadPatch = false,\n                anchor = $window.document.getElementsByTagName('head')[0] || $window.document.getElementsByTagName('body')[0];\n\n            /**\r\n             * Load a js/css file\r\n             * @param type\r\n             * @param path\r\n             * @param params\r\n             * @returns promise\r\n             */\n            $delegate.buildElement = function buildElement(type, path, params) {\n                var deferred = $q.defer(),\n                    el,\n                    loaded,\n                    filesCache = $delegate._getFilesCache(),\n                    cacheBuster = function cacheBuster(url) {\n                    var dc = new Date().getTime();\n                    if (url.indexOf('?') >= 0) {\n                        if (url.substring(0, url.length - 1) === '&') {\n                            return url + '_dc=' + dc;\n                        }\n                        return url + '&_dc=' + dc;\n                    } else {\n                        return url + '?_dc=' + dc;\n                    }\n                };\n\n                // Store the promise early so the file load can be detected by other parallel lazy loads\n                // (ie: multiple routes on one page) a 'true' value isn't sufficient\n                // as it causes false positive load results.\n                if (angular.isUndefined(filesCache.get(path))) {\n                    filesCache.put(path, deferred.promise);\n                }\n\n                // Switch in case more content types are added later\n                switch (type) {\n                    case 'css':\n                        el = $window.document.createElement('link');\n                        el.type = 'text/css';\n                        el.rel = 'stylesheet';\n                        el.href = params.cache === false ? cacheBuster(path) : path;\n                        break;\n                    case 'js':\n                        el = $window.document.createElement('script');\n                        el.src = params.cache === false ? cacheBuster(path) : path;\n                        break;\n                    default:\n                        filesCache.remove(path);\n                        deferred.reject(new Error('Requested type \"' + type + '\" is not known. Could not inject \"' + path + '\"'));\n                        break;\n                }\n                el.onload = el['onreadystatechange'] = function (e) {\n                    if (el['readyState'] && !/^c|loade/.test(el['readyState']) || loaded) return;\n                    el.onload = el['onreadystatechange'] = null;\n                    loaded = 1;\n                    $delegate._broadcast('ocLazyLoad.fileLoaded', path);\n                    deferred.resolve(el);\n                };\n                el.onerror = function () {\n                    filesCache.remove(path);\n                    deferred.reject(new Error('Unable to load ' + path));\n                };\n                el.async = params.serie ? 0 : 1;\n\n                var insertBeforeElem = anchor.lastChild;\n                if (params.insertBefore) {\n                    var element = angular.element(angular.isDefined(window.jQuery) ? params.insertBefore : document.querySelector(params.insertBefore));\n                    if (element && element.length > 0) {\n                        insertBeforeElem = element[0];\n                    }\n                }\n                insertBeforeElem.parentNode.insertBefore(el, insertBeforeElem);\n\n                /*\r\n                 The event load or readystatechange doesn't fire in:\r\n                 - PhantomJS 1.9 (headless webkit browser)\r\n                 - iOS < 6       (default mobile browser)\r\n                 - Android < 4.4 (default mobile browser)\r\n                 - Safari < 6    (desktop browser)\r\n                 */\n                if (type == 'css') {\n                    if (!uaCssChecked) {\n                        var ua = $window.navigator.userAgent.toLowerCase();\n\n                        if (ua.indexOf('phantomjs/1.9') > -1) {\n                            // PhantomJS ~1.9\n                            useCssLoadPatch = true;\n                        } else if (/iP(hone|od|ad)/.test($window.navigator.platform)) {\n                            // iOS < 6\n                            var v = $window.navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n                            var iOSVersion = parseFloat([parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)].join('.'));\n                            useCssLoadPatch = iOSVersion < 6;\n                        } else if (ua.indexOf('android') > -1) {\n                            // Android < 4.4\n                            var androidVersion = parseFloat(ua.slice(ua.indexOf('android') + 8));\n                            useCssLoadPatch = androidVersion < 4.4;\n                        } else if (ua.indexOf('safari') > -1) {\n                            // Safari < 6\n                            var versionMatch = ua.match(/version\\/([\\.\\d]+)/i);\n                            useCssLoadPatch = versionMatch && versionMatch[1] && parseFloat(versionMatch[1]) < 6;\n                        }\n                    }\n\n                    if (useCssLoadPatch) {\n                        var tries = 1000; // * 20 = 20000 miliseconds\n                        var interval = $interval(function () {\n                            try {\n                                el.sheet.cssRules;\n                                $interval.cancel(interval);\n                                el.onload();\n                            } catch (e) {\n                                if (--tries <= 0) {\n                                    el.onerror();\n                                }\n                            }\n                        }, 20);\n                    }\n                }\n\n                return deferred.promise;\n            };\n\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$q\", function ($delegate, $q) {\n            /**\r\n             * The function that loads new files\r\n             * @param config\r\n             * @param params\r\n             * @returns {*}\r\n             */\n            $delegate.filesLoader = function filesLoader(config) {\n                var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n                var cssFiles = [],\n                    templatesFiles = [],\n                    jsFiles = [],\n                    promises = [],\n                    cachePromise = null,\n                    filesCache = $delegate._getFilesCache();\n\n                $delegate.toggleWatch(true); // start watching angular.module calls\n\n                angular.extend(params, config);\n\n                var pushFile = function pushFile(path) {\n                    var file_type = null,\n                        m;\n                    if (angular.isObject(path)) {\n                        file_type = path.type;\n                        path = path.path;\n                    }\n                    cachePromise = filesCache.get(path);\n                    if (angular.isUndefined(cachePromise) || params.cache === false) {\n\n                        // always check for requirejs syntax just in case\n                        if ((m = /^(css|less|html|htm|js)?(?=!)/.exec(path)) !== null) {\n                            // Detect file type using preceding type declaration (ala requireJS)\n                            file_type = m[1];\n                            path = path.substr(m[1].length + 1, path.length); // Strip the type from the path\n                        }\n\n                        if (!file_type) {\n                            if ((m = /[.](css|less|html|htm|js)?((\\?|#).*)?$/.exec(path)) !== null) {\n                                // Detect file type via file extension\n                                file_type = m[1];\n                            } else if (!$delegate.jsLoader.hasOwnProperty('ocLazyLoadLoader') && $delegate.jsLoader.hasOwnProperty('requirejs')) {\n                                // requirejs\n                                file_type = 'js';\n                            } else {\n                                $delegate._$log.error('File type could not be determined. ' + path);\n                                return;\n                            }\n                        }\n\n                        if ((file_type === 'css' || file_type === 'less') && cssFiles.indexOf(path) === -1) {\n                            cssFiles.push(path);\n                        } else if ((file_type === 'html' || file_type === 'htm') && templatesFiles.indexOf(path) === -1) {\n                            templatesFiles.push(path);\n                        } else if (file_type === 'js' || jsFiles.indexOf(path) === -1) {\n                            jsFiles.push(path);\n                        } else {\n                            $delegate._$log.error('File type is not valid. ' + path);\n                        }\n                    } else if (cachePromise) {\n                        promises.push(cachePromise);\n                    }\n                };\n\n                if (params.serie) {\n                    pushFile(params.files.shift());\n                } else {\n                    angular.forEach(params.files, function (path) {\n                        pushFile(path);\n                    });\n                }\n\n                if (cssFiles.length > 0) {\n                    var cssDeferred = $q.defer();\n                    $delegate.cssLoader(cssFiles, function (err) {\n                        if (angular.isDefined(err) && $delegate.cssLoader.hasOwnProperty('ocLazyLoadLoader')) {\n                            $delegate._$log.error(err);\n                            cssDeferred.reject(err);\n                        } else {\n                            cssDeferred.resolve();\n                        }\n                    }, params);\n                    promises.push(cssDeferred.promise);\n                }\n\n                if (templatesFiles.length > 0) {\n                    var templatesDeferred = $q.defer();\n                    $delegate.templatesLoader(templatesFiles, function (err) {\n                        if (angular.isDefined(err) && $delegate.templatesLoader.hasOwnProperty('ocLazyLoadLoader')) {\n                            $delegate._$log.error(err);\n                            templatesDeferred.reject(err);\n                        } else {\n                            templatesDeferred.resolve();\n                        }\n                    }, params);\n                    promises.push(templatesDeferred.promise);\n                }\n\n                if (jsFiles.length > 0) {\n                    var jsDeferred = $q.defer();\n                    $delegate.jsLoader(jsFiles, function (err) {\n                        if (angular.isDefined(err) && ($delegate.jsLoader.hasOwnProperty(\"ocLazyLoadLoader\") || $delegate.jsLoader.hasOwnProperty(\"requirejs\"))) {\n                            $delegate._$log.error(err);\n                            jsDeferred.reject(err);\n                        } else {\n                            jsDeferred.resolve();\n                        }\n                    }, params);\n                    promises.push(jsDeferred.promise);\n                }\n\n                if (promises.length === 0) {\n                    var deferred = $q.defer(),\n                        err = \"Error: no file to load has been found, if you're trying to load an existing module you should use the 'inject' method instead of 'load'.\";\n                    $delegate._$log.error(err);\n                    deferred.reject(err);\n                    return deferred.promise;\n                } else if (params.serie && params.files.length > 0) {\n                    return $q.all(promises).then(function () {\n                        return $delegate.filesLoader(config, params);\n                    });\n                } else {\n                    return $q.all(promises)['finally'](function (res) {\n                        $delegate.toggleWatch(false); // stop watching angular.module calls\n                        return res;\n                    });\n                }\n            };\n\n            /**\r\n             * Load a module or a list of modules into Angular\r\n             * @param module Mixed the name of a predefined module config object, or a module config object, or an array of either\r\n             * @param params Object optional parameters\r\n             * @returns promise\r\n             */\n            $delegate.load = function (originalModule) {\n                var originalParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n                var self = this,\n                    config = null,\n                    deferredList = [],\n                    deferred = $q.defer(),\n                    errText;\n\n                // clean copy\n                var module = angular.copy(originalModule);\n                var params = angular.copy(originalParams);\n\n                // If module is an array, break it down\n                if (angular.isArray(module)) {\n                    // Resubmit each entry as a single module\n                    angular.forEach(module, function (m) {\n                        deferredList.push(self.load(m, params));\n                    });\n\n                    // Resolve the promise once everything has loaded\n                    $q.all(deferredList).then(function (res) {\n                        deferred.resolve(res);\n                    }, function (err) {\n                        deferred.reject(err);\n                    });\n\n                    return deferred.promise;\n                }\n\n                // Get or Set a configuration depending on what was passed in\n                if (angular.isString(module)) {\n                    config = self.getModuleConfig(module);\n                    if (!config) {\n                        config = {\n                            files: [module]\n                        };\n                    }\n                } else if (angular.isObject(module)) {\n                    // case {type: 'js', path: lazyLoadUrl + 'testModule.fakejs'}\n                    if (angular.isDefined(module.path) && angular.isDefined(module.type)) {\n                        config = {\n                            files: [module]\n                        };\n                    } else {\n                        config = self.setModuleConfig(module);\n                    }\n                }\n\n                if (config === null) {\n                    var moduleName = self._getModuleName(module);\n                    errText = 'Module \"' + (moduleName || 'unknown') + '\" is not configured, cannot load.';\n                    $delegate._$log.error(errText);\n                    deferred.reject(new Error(errText));\n                    return deferred.promise;\n                } else {\n                    // deprecated\n                    if (angular.isDefined(config.template)) {\n                        if (angular.isUndefined(config.files)) {\n                            config.files = [];\n                        }\n                        if (angular.isString(config.template)) {\n                            config.files.push(config.template);\n                        } else if (angular.isArray(config.template)) {\n                            config.files.concat(config.template);\n                        }\n                    }\n                }\n\n                var localParams = angular.extend({}, params, config);\n\n                // if someone used an external loader and called the load function with just the module name\n                if (angular.isUndefined(config.files) && angular.isDefined(config.name) && $delegate.moduleExists(config.name)) {\n                    return $delegate.inject(config.name, localParams, true);\n                }\n\n                $delegate.filesLoader(config, localParams).then(function () {\n                    $delegate.inject(null, localParams).then(function (res) {\n                        deferred.resolve(res);\n                    }, function (err) {\n                        deferred.reject(err);\n                    });\n                }, function (err) {\n                    deferred.reject(err);\n                });\n\n                return deferred.promise;\n            };\n\n            // return the patched service\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$q\", function ($delegate, $q) {\n            /**\r\n             * cssLoader function\r\n             * @type Function\r\n             * @param paths array list of css files to load\r\n             * @param callback to call when everything is loaded. We use a callback and not a promise\r\n             * @param params object config parameters\r\n             * because the user can overwrite cssLoader and it will probably not use promises :(\r\n             */\n            $delegate.cssLoader = function (paths, callback, params) {\n                var promises = [];\n                angular.forEach(paths, function (path) {\n                    promises.push($delegate.buildElement('css', path, params));\n                });\n                $q.all(promises).then(function () {\n                    callback();\n                }, function (err) {\n                    callback(err);\n                });\n            };\n            $delegate.cssLoader.ocLazyLoadLoader = true;\n\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$q\", function ($delegate, $q) {\n            /**\r\n             * jsLoader function\r\n             * @type Function\r\n             * @param paths array list of js files to load\r\n             * @param callback to call when everything is loaded. We use a callback and not a promise\r\n             * @param params object config parameters\r\n             * because the user can overwrite jsLoader and it will probably not use promises :(\r\n             */\n            $delegate.jsLoader = function (paths, callback, params) {\n                var promises = [];\n                angular.forEach(paths, function (path) {\n                    promises.push($delegate.buildElement('js', path, params));\n                });\n                $q.all(promises).then(function () {\n                    callback();\n                }, function (err) {\n                    callback(err);\n                });\n            };\n            $delegate.jsLoader.ocLazyLoadLoader = true;\n\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$templateCache\", \"$q\", \"$http\", function ($delegate, $templateCache, $q, $http) {\n            /**\r\n             * templatesLoader function\r\n             * @type Function\r\n             * @param paths array list of css files to load\r\n             * @param callback to call when everything is loaded. We use a callback and not a promise\r\n             * @param params object config parameters for $http\r\n             * because the user can overwrite templatesLoader and it will probably not use promises :(\r\n             */\n            $delegate.templatesLoader = function (paths, callback, params) {\n                var promises = [],\n                    filesCache = $delegate._getFilesCache();\n\n                angular.forEach(paths, function (url) {\n                    var deferred = $q.defer();\n                    promises.push(deferred.promise);\n                    $http.get(url, params).then(function (response) {\n                        var data = response.data;\n                        if (angular.isString(data) && data.length > 0) {\n                            angular.forEach(angular.element(data), function (node) {\n                                if (node.nodeName === 'SCRIPT' && node.type === 'text/ng-template') {\n                                    $templateCache.put(node.id, node.innerHTML);\n                                }\n                            });\n                        }\n                        if (angular.isUndefined(filesCache.get(url))) {\n                            filesCache.put(url, true);\n                        }\n                        deferred.resolve();\n                    })['catch'](function (response) {\n                        deferred.reject(new Error('Unable to load template file \"' + url + '\": ' + response.data));\n                    });\n                });\n                return $q.all(promises).then(function () {\n                    callback();\n                }, function (err) {\n                    callback(err);\n                });\n            };\n            $delegate.templatesLoader.ocLazyLoadLoader = true;\n\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n// Array.indexOf polyfill for IE8\nif (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function (searchElement, fromIndex) {\n                var k;\n\n                // 1. Let O be the result of calling ToObject passing\n                //    the this value as the argument.\n                if (this == null) {\n                        throw new TypeError('\"this\" is null or not defined');\n                }\n\n                var O = Object(this);\n\n                // 2. Let lenValue be the result of calling the Get\n                //    internal method of O with the argument \"length\".\n                // 3. Let len be ToUint32(lenValue).\n                var len = O.length >>> 0;\n\n                // 4. If len is 0, return -1.\n                if (len === 0) {\n                        return -1;\n                }\n\n                // 5. If argument fromIndex was passed let n be\n                //    ToInteger(fromIndex); else let n be 0.\n                var n = +fromIndex || 0;\n\n                if (Math.abs(n) === Infinity) {\n                        n = 0;\n                }\n\n                // 6. If n >= len, return -1.\n                if (n >= len) {\n                        return -1;\n                }\n\n                // 7. If n >= 0, then Let k be n.\n                // 8. Else, n<0, Let k be len - abs(n).\n                //    If k is less than 0, then let k be 0.\n                k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n                // 9. Repeat, while k < len\n                while (k < len) {\n                        // a. Let Pk be ToString(k).\n                        //   This is implicit for LHS operands of the in operator\n                        // b. Let kPresent be the result of calling the\n                        //    HasProperty internal method of O with argument Pk.\n                        //   This step can be combined with c\n                        // c. If kPresent is true, then\n                        //    i.  Let elementK be the result of calling the Get\n                        //        internal method of O with the argument ToString(k).\n                        //   ii.  Let same be the result of applying the\n                        //        Strict Equality Comparison Algorithm to\n                        //        searchElement and elementK.\n                        //  iii.  If same is true, return k.\n                        if (k in O && O[k] === searchElement) {\n                                return k;\n                        }\n                        k++;\n                }\n                return -1;\n        };\n}","/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n * @license MIT */\n\n;(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.NProgress = factory();\n  }\n\n})(this, function() {\n  var NProgress = {};\n\n  NProgress.version = '0.2.0';\n\n  var Settings = NProgress.settings = {\n    minimum: 0.08,\n    easing: 'ease',\n    positionUsing: '',\n    speed: 200,\n    trickle: true,\n    trickleRate: 0.02,\n    trickleSpeed: 800,\n    showSpinner: true,\n    barSelector: '[role=\"bar\"]',\n    spinnerSelector: '[role=\"spinner\"]',\n    parent: 'body',\n    template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n  };\n\n  /**\n   * Updates configuration.\n   *\n   *     NProgress.configure({\n   *       minimum: 0.1\n   *     });\n   */\n  NProgress.configure = function(options) {\n    var key, value;\n    for (key in options) {\n      value = options[key];\n      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n    }\n\n    return this;\n  };\n\n  /**\n   * Last number.\n   */\n\n  NProgress.status = null;\n\n  /**\n   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n   *\n   *     NProgress.set(0.4);\n   *     NProgress.set(1.0);\n   */\n\n  NProgress.set = function(n) {\n    var started = NProgress.isStarted();\n\n    n = clamp(n, Settings.minimum, 1);\n    NProgress.status = (n === 1 ? null : n);\n\n    var progress = NProgress.render(!started),\n        bar      = progress.querySelector(Settings.barSelector),\n        speed    = Settings.speed,\n        ease     = Settings.easing;\n\n    progress.offsetWidth; /* Repaint */\n\n    queue(function(next) {\n      // Set positionUsing if it hasn't already been set\n      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\n      // Add transition\n      css(bar, barPositionCSS(n, speed, ease));\n\n      if (n === 1) {\n        // Fade out\n        css(progress, { \n          transition: 'none', \n          opacity: 1 \n        });\n        progress.offsetWidth; /* Repaint */\n\n        setTimeout(function() {\n          css(progress, { \n            transition: 'all ' + speed + 'ms linear', \n            opacity: 0 \n          });\n          setTimeout(function() {\n            NProgress.remove();\n            next();\n          }, speed);\n        }, speed);\n      } else {\n        setTimeout(next, speed);\n      }\n    });\n\n    return this;\n  };\n\n  NProgress.isStarted = function() {\n    return typeof NProgress.status === 'number';\n  };\n\n  /**\n   * Shows the progress bar.\n   * This is the same as setting the status to 0%, except that it doesn't go backwards.\n   *\n   *     NProgress.start();\n   *\n   */\n  NProgress.start = function() {\n    if (!NProgress.status) NProgress.set(0);\n\n    var work = function() {\n      setTimeout(function() {\n        if (!NProgress.status) return;\n        NProgress.trickle();\n        work();\n      }, Settings.trickleSpeed);\n    };\n\n    if (Settings.trickle) work();\n\n    return this;\n  };\n\n  /**\n   * Hides the progress bar.\n   * This is the *sort of* the same as setting the status to 100%, with the\n   * difference being `done()` makes some placebo effect of some realistic motion.\n   *\n   *     NProgress.done();\n   *\n   * If `true` is passed, it will show the progress bar even if its hidden.\n   *\n   *     NProgress.done(true);\n   */\n\n  NProgress.done = function(force) {\n    if (!force && !NProgress.status) return this;\n\n    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n  };\n\n  /**\n   * Increments by a random amount.\n   */\n\n  NProgress.inc = function(amount) {\n    var n = NProgress.status;\n\n    if (!n) {\n      return NProgress.start();\n    } else {\n      if (typeof amount !== 'number') {\n        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n      }\n\n      n = clamp(n + amount, 0, 0.994);\n      return NProgress.set(n);\n    }\n  };\n\n  NProgress.trickle = function() {\n    return NProgress.inc(Math.random() * Settings.trickleRate);\n  };\n\n  /**\n   * Waits for all supplied jQuery promises and\n   * increases the progress as the promises resolve.\n   *\n   * @param $promise jQUery Promise\n   */\n  (function() {\n    var initial = 0, current = 0;\n\n    NProgress.promise = function($promise) {\n      if (!$promise || $promise.state() === \"resolved\") {\n        return this;\n      }\n\n      if (current === 0) {\n        NProgress.start();\n      }\n\n      initial++;\n      current++;\n\n      $promise.always(function() {\n        current--;\n        if (current === 0) {\n            initial = 0;\n            NProgress.done();\n        } else {\n            NProgress.set((initial - current) / initial);\n        }\n      });\n\n      return this;\n    };\n\n  })();\n\n  /**\n   * (Internal) renders the progress bar markup based on the `template`\n   * setting.\n   */\n\n  NProgress.render = function(fromStart) {\n    if (NProgress.isRendered()) return document.getElementById('nprogress');\n\n    addClass(document.documentElement, 'nprogress-busy');\n    \n    var progress = document.createElement('div');\n    progress.id = 'nprogress';\n    progress.innerHTML = Settings.template;\n\n    var bar      = progress.querySelector(Settings.barSelector),\n        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n        parent   = document.querySelector(Settings.parent),\n        spinner;\n    \n    css(bar, {\n      transition: 'all 0 linear',\n      transform: 'translate3d(' + perc + '%,0,0)'\n    });\n\n    if (!Settings.showSpinner) {\n      spinner = progress.querySelector(Settings.spinnerSelector);\n      spinner && removeElement(spinner);\n    }\n\n    if (parent != document.body) {\n      addClass(parent, 'nprogress-custom-parent');\n    }\n\n    parent.appendChild(progress);\n    return progress;\n  };\n\n  /**\n   * Removes the element. Opposite of render().\n   */\n\n  NProgress.remove = function() {\n    removeClass(document.documentElement, 'nprogress-busy');\n    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n    var progress = document.getElementById('nprogress');\n    progress && removeElement(progress);\n  };\n\n  /**\n   * Checks if the progress bar is rendered.\n   */\n\n  NProgress.isRendered = function() {\n    return !!document.getElementById('nprogress');\n  };\n\n  /**\n   * Determine which positioning CSS rule to use.\n   */\n\n  NProgress.getPositioningCSS = function() {\n    // Sniff on document.body.style\n    var bodyStyle = document.body.style;\n\n    // Sniff prefixes\n    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n                       ('MozTransform' in bodyStyle) ? 'Moz' :\n                       ('msTransform' in bodyStyle) ? 'ms' :\n                       ('OTransform' in bodyStyle) ? 'O' : '';\n\n    if (vendorPrefix + 'Perspective' in bodyStyle) {\n      // Modern browsers with 3D support, e.g. Webkit, IE10\n      return 'translate3d';\n    } else if (vendorPrefix + 'Transform' in bodyStyle) {\n      // Browsers without 3D support, e.g. IE9\n      return 'translate';\n    } else {\n      // Browsers without translate() support, e.g. IE7-8\n      return 'margin';\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function clamp(n, min, max) {\n    if (n < min) return min;\n    if (n > max) return max;\n    return n;\n  }\n\n  /**\n   * (Internal) converts a percentage (`0..1`) to a bar translateX\n   * percentage (`-100%..0%`).\n   */\n\n  function toBarPerc(n) {\n    return (-1 + n) * 100;\n  }\n\n\n  /**\n   * (Internal) returns the correct CSS for changing the bar's\n   * position given an n percentage, and speed and ease from Settings\n   */\n\n  function barPositionCSS(n, speed, ease) {\n    var barCSS;\n\n    if (Settings.positionUsing === 'translate3d') {\n      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\n    } else if (Settings.positionUsing === 'translate') {\n      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\n    } else {\n      barCSS = { 'margin-left': toBarPerc(n)+'%' };\n    }\n\n    barCSS.transition = 'all '+speed+'ms '+ease;\n\n    return barCSS;\n  }\n\n  /**\n   * (Internal) Queues a function to be executed.\n   */\n\n  var queue = (function() {\n    var pending = [];\n    \n    function next() {\n      var fn = pending.shift();\n      if (fn) {\n        fn(next);\n      }\n    }\n\n    return function(fn) {\n      pending.push(fn);\n      if (pending.length == 1) next();\n    };\n  })();\n\n  /**\n   * (Internal) Applies css properties to an element, similar to the jQuery \n   * css method.\n   *\n   * While this helper does assist with vendor prefixed property names, it \n   * does not perform any manipulation of values prior to setting styles.\n   */\n\n  var css = (function() {\n    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\n        cssProps    = {};\n\n    function camelCase(string) {\n      return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\n        return letter.toUpperCase();\n      });\n    }\n\n    function getVendorProp(name) {\n      var style = document.body.style;\n      if (name in style) return name;\n\n      var i = cssPrefixes.length,\n          capName = name.charAt(0).toUpperCase() + name.slice(1),\n          vendorName;\n      while (i--) {\n        vendorName = cssPrefixes[i] + capName;\n        if (vendorName in style) return vendorName;\n      }\n\n      return name;\n    }\n\n    function getStyleProp(name) {\n      name = camelCase(name);\n      return cssProps[name] || (cssProps[name] = getVendorProp(name));\n    }\n\n    function applyCss(element, prop, value) {\n      prop = getStyleProp(prop);\n      element.style[prop] = value;\n    }\n\n    return function(element, properties) {\n      var args = arguments,\n          prop, \n          value;\n\n      if (args.length == 2) {\n        for (prop in properties) {\n          value = properties[prop];\n          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n        }\n      } else {\n        applyCss(element, args[1], args[2]);\n      }\n    }\n  })();\n\n  /**\n   * (Internal) Determines if an element or space separated list of class names contains a class name.\n   */\n\n  function hasClass(element, name) {\n    var list = typeof element == 'string' ? element : classList(element);\n    return list.indexOf(' ' + name + ' ') >= 0;\n  }\n\n  /**\n   * (Internal) Adds a class to an element.\n   */\n\n  function addClass(element, name) {\n    var oldList = classList(element),\n        newList = oldList + name;\n\n    if (hasClass(oldList, name)) return; \n\n    // Trim the opening space.\n    element.className = newList.substring(1);\n  }\n\n  /**\n   * (Internal) Removes a class from an element.\n   */\n\n  function removeClass(element, name) {\n    var oldList = classList(element),\n        newList;\n\n    if (!hasClass(element, name)) return;\n\n    // Replace the class name.\n    newList = oldList.replace(' ' + name + ' ', ' ');\n\n    // Trim the opening and closing spaces.\n    element.className = newList.substring(1, newList.length - 1);\n  }\n\n  /**\n   * (Internal) Gets a space separated list of the class names on the element. \n   * The list is wrapped with a single space on each end to facilitate finding \n   * matches within the list.\n   */\n\n  function classList(element) {\n    return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n  }\n\n  /**\n   * (Internal) Removes an element from the DOM.\n   */\n\n  function removeElement(element) {\n    element && element.parentNode && element.parentNode.removeChild(element);\n  }\n\n  return NProgress;\n});\n\n","/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nexport function curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nexport function compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nexport function pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexport var prop = function (name) { return function (obj) { return obj && obj[name]; }; };\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexport var propEq = curry(function (name, _val, obj) { return obj && obj[name] === _val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexport var parse = function (name) { return pipe.apply(null, name.split('.').map(prop)); };\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexport var not = function (fn) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return !fn.apply(null, args);\n}; };\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nexport function and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nexport function or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexport var all = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); }; };\n// tslint:disable-next-line:variable-name\nexport var any = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); }; };\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexport var is = function (ctor) { return function (obj) {\n    return (obj != null && obj.constructor === ctor) || obj instanceof ctor;\n}; };\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexport var eq = function (value) { return function (other) { return value === other; }; };\n/** Given a value, returns a function which returns the value */\nexport var val = function (v) { return function () { return v; }; };\nexport function invoke(fnName, args) {\n    return function (obj) { return obj[fnName].apply(obj, args); };\n}\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nexport function pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\n//# sourceMappingURL=hof.js.map","var noImpl = function (fnname) { return function () {\n    throw new Error(\"No implementation for \" + fnname + \". The framework specific code did not implement this method.\");\n}; };\nexport var makeStub = function (service, methods) {\n    return methods.reduce(function (acc, key) { return ((acc[key] = noImpl(service + \".\" + key + \"()\")), acc); }, {});\n};\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\nexport { services };\n//# sourceMappingURL=coreservices.js.map","/** @publicapi @module transition */ /** */\n'use strict';\nimport { extend, silentRejection } from '../common/common';\nimport { stringify } from '../common/strings';\nimport { is } from '../common/hof';\nvar RejectType;\n(function (RejectType) {\n    /**\n     * A new transition superseded this one.\n     *\n     * While this transition was running, a new transition started.\n     * This transition is cancelled because it was superseded by new transition.\n     */\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    /**\n     * The transition was aborted\n     *\n     * The transition was aborted by a hook which returned `false`\n     */\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    /**\n     * The transition was invalid\n     *\n     * The transition was never started because it was invalid\n     */\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    /**\n     * The transition was ignored\n     *\n     * The transition was ignored because it would have no effect.\n     *\n     * Either:\n     *\n     * - The transition is targeting the current state and parameter values\n     * - The transition is targeting the same state and parameter values as the currently running transition.\n     */\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    /**\n     * The transition errored.\n     *\n     * This generally means a hook threw an error or returned a rejected promise\n     */\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(RejectType || (RejectType = {}));\nexport { RejectType };\n/** @hidden */\nvar id = 0;\nvar Rejection = /** @class */ (function () {\n    function Rejection(type, message, detail) {\n        /** @hidden */\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && typeof obj.then === 'function' && is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = 'The transition has been superseded by a different transition';\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = 'This transition is invalid';\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = 'The transition was ignored';\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = 'The transition has been aborted';\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = 'The transition errored';\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) { return (d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d)); };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return extend(silentRejection(this), { _transitionRejection: this });\n    };\n    return Rejection;\n}());\nexport { Rejection };\n//# sourceMappingURL=rejectFactory.js.map","/** @publicapi @module ng1 */ /** */\nimport * as ng_from_import from 'angular';\n/** @hidden */ var ng_from_global = angular;\n/** @hidden */ export var ng = ng_from_import && ng_from_import.module ? ng_from_import : ng_from_global;\n//# sourceMappingURL=angular.js.map","/** @publicapi @module core */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = /** @class */ (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text\n            .split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        })\n            .join('');\n        this.regexp = new RegExp('^' + regexpString + '$');\n    }\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    return Glob;\n}());\nexport { Glob };\n//# sourceMappingURL=glob.js.map","/** @publicapi @module common */ /** */\nimport { pushTo } from './common';\nvar Queue = /** @class */ (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n        this._evictListeners = [];\n        this.onEvict = pushTo(this._evictListeners);\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            this.evict();\n        return item;\n    };\n    Queue.prototype.evict = function () {\n        var item = this._items.shift();\n        this._evictListeners.forEach(function (fn) { return fn(item); });\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexport { Queue };\n//# sourceMappingURL=queue.js.map","/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\nimport { isArray, isFunction, isInjectable, isNull, isObject, isPromise, isString, isUndefined } from './predicates';\nimport { Rejection } from '../transition/rejectFactory';\nimport { identity, pushR, tail } from './common';\nimport { pattern, val } from './hof';\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nexport function maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + '...';\n}\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nexport function padString(length, str) {\n    while (str.length < length)\n        str += ' ';\n    return str;\n}\nexport function kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return '-' + $1.toLowerCase(); }); // replace rest\n}\nexport function functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || '';\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexport function fnToString(fn) {\n    var _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n    return (_fn && _fn.toString()) || 'undefined';\n}\nvar isRejection = Rejection.isRejectionPromise;\nvar hasToString = function (obj) {\n    return isObject(obj) && !isArray(obj) && obj.constructor !== Object && isFunction(obj.toString);\n};\nvar stringifyPattern = pattern([\n    [isUndefined, val('undefined')],\n    [isNull, val('null')],\n    [isPromise, val('[Promise]')],\n    [isRejection, function (x) { return x._transitionRejection.toString(); }],\n    [hasToString, function (x) { return x.toString(); }],\n    [isInjectable, functionToString],\n    [val(true), identity],\n]);\nexport function stringify(o) {\n    var seen = [];\n    function format(value) {\n        if (isObject(value)) {\n            if (seen.indexOf(value) !== -1)\n                return '[circular ref]';\n            seen.push(value);\n        }\n        return stringifyPattern(value);\n    }\n    if (isUndefined(o)) {\n        // Workaround for IE & Edge Spec incompatibility where replacer function would not be called when JSON.stringify\n        // is given `undefined` as value. To work around that, we simply detect `undefined` and bail out early by\n        // manually stringifying it.\n        return format(o);\n    }\n    return JSON.stringify(o, function (key, value) { return format(value); }).replace(/\\\\\"/g, '\"');\n}\n/** Returns a function that splits a string on a character or substring */\nexport var beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return ['', ''];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, ''];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nexport var hostRegex = new RegExp('^(?:[a-z]+:)?//[^/]+/');\nexport var stripLastPathElement = function (str) { return str.replace(/\\/[^/]*$/, ''); };\nexport var splitHash = beforeAfterSubstr('#');\nexport var splitQuery = beforeAfterSubstr('?');\nexport var splitEqual = beforeAfterSubstr('=');\nexport var trimHashVal = function (str) { return (str ? str.replace(/^#/, '') : ''); };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nexport function splitOnDelim(delim) {\n    var re = new RegExp('(' + delim + ')', 'g');\n    return function (str) { return str.split(re).filter(identity); };\n}\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nexport function joinNeighborsR(acc, x) {\n    if (isString(tail(acc)) && isString(x))\n        return acc.slice(0, -1).concat(tail(acc) + x);\n    return pushR(acc, x);\n}\n//# sourceMappingURL=strings.js.map","/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @publicapi @module trace\n */\n/* tslint:disable:no-console */\nimport { parse } from '../common/hof';\nimport { isFunction, isNumber } from '../common/predicates';\nimport { stringify, functionToString, maxLength, padString } from './strings';\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/** @hidden */\nvar consoleLog = Function.prototype.bind.call(console.log, console);\n/** @hidden */\nvar consoletable = isFunction(console.table) ? console.table.bind(console) : consoleLog.bind(console);\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nvar Category;\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category || (Category = {}));\nexport { Category };\n/** @hidden */\nvar _tid = parse('$id');\n/** @hidden */\nvar _rid = parse('router.$id');\n/** @hidden */\nvar transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = /** @class */ (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return (_this._enabled[category] = enabled); });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = functionToString(step.registeredHook.callback);\n        console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        console.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = ''; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Updating', viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Fill', viewData, \" with: \" + maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        var uivheader = 'uiview component fqn';\n        var cfgheader = 'view config state (view name)';\n        var mapping = pairs\n            .map(function (_a) {\n            var uiView = _a.uiView, viewConfig = _a.viewConfig;\n            var _b;\n            var uiv = uiView && uiView.fqn;\n            var cfg = viewConfig && viewConfig.viewDecl.$context.name + \": (\" + viewConfig.viewDecl.$name + \")\";\n            return _b = {}, _b[uivheader] = uiv, _b[cfgheader] = cfg, _b;\n        })\n            .sort(function (a, b) { return (a[uivheader] || '').localeCompare(b[uivheader] || ''); });\n        consoletable(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexport { Trace };\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexport { trace };\n//# sourceMappingURL=trace.js.map","/** @publicapi @module params */ /** */\nimport { extend, filter, map } from '../common/common';\nimport { isArray, isDefined } from '../common/predicates';\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = /** @class */ (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) {\n        return true;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) {\n        // tslint:disable-next-line:triple-equals\n        return a == b;\n    };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === 'auto' && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexport { ParamType };\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return isArray(val) ? val : isDefined(val) ? [val] : [];\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0:\n                return undefined;\n            case 1:\n                return mode === 'auto' ? val[0] : val;\n            default:\n                return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = map(arr, callback);\n            return allTruthyMode === true ? filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        raw: type.raw,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode,\n    });\n}\n//# sourceMappingURL=paramType.js.map","/** @publicapi @module params */ /** */\nimport { extend, filter, map, allTrueR, find } from '../common/common';\nimport { prop } from '../common/hof';\nimport { isInjectable, isDefined, isString, isArray, isUndefined } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/** @hidden */\nvar hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */\nvar isShorthand = function (cfg) {\n    return ['value', 'type', 'squash', 'array', 'dynamic'].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\nvar DefType;\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(DefType || (DefType = {}));\nexport { DefType };\n/** @internalapi */\nfunction getParamDeclaration(paramName, location, state) {\n    var noReloadOnSearch = (state.reloadOnSearch === false && location === DefType.SEARCH) || undefined;\n    var dynamic = find([state.dynamic, noReloadOnSearch], isDefined);\n    var defaultConfig = isDefined(dynamic) ? { dynamic: dynamic } : {};\n    var paramConfig = unwrapShorthand(state && state.params && state.params[paramName]);\n    return extend(defaultConfig, paramConfig);\n}\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) ? { value: cfg } : cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    var $$fn = isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue;\n    return extend(cfg, { $$fn: $$fn });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === DefType.CONFIG\n            ? 'any'\n            : location === DefType.PATH\n                ? 'path'\n                : location === DefType.SEARCH\n                    ? 'query'\n                    : 'string';\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var defaultPolicy = [\n        { from: '', to: isOptional || arrayMode ? undefined : '' },\n        { from: null, to: isOptional || arrayMode ? undefined : '' },\n    ];\n    var replace = isArray(config.replace) ? config.replace : [];\n    if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n    var configuredKeys = map(replace, prop('from'));\n    return filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = /** @class */ (function () {\n    function Param(id, type, location, urlConfig, state) {\n        var config = getParamDeclaration(id, location, state);\n        type = getType(config, type, location, id, urlConfig.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === DefType.SEARCH;\n        var dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlConfig.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: location === DefType.SEARCH ? 'auto' : false };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit, array: arrayMode, config: config });\n    }\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(allTrueR, true);\n    };\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!services.$injector)\n                throw new Error('Injectable functions cannot be called at configuration time');\n            var defaultValue = services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val)\n                    return tuple.to;\n            }\n            return val;\n        };\n        value = replaceSpecialValues(value);\n        return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    return Param;\n}());\nexport { Param };\n//# sourceMappingURL=param.js.map","/** @publicapi @module params */ /** */\nimport { fromJson, toJson, identity, equals, inherit, map, extend, pick } from '../common/common';\nimport { isDefined, isNullOrUndefined } from '../common/predicates';\nimport { is } from '../common/hof';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n *\n * To register custom parameter types, use [[UrlConfig.type]], i.e.,\n *\n * ```js\n * router.urlService.config.type(customType)\n * ```\n */\nvar ParamTypes = /** @class */ (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = pick(ParamTypes.prototype, [\n            'hash',\n            'string',\n            'query',\n            'path',\n            'int',\n            'bool',\n            'date',\n            'json',\n            'any',\n        ]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) { return new ParamType(extend({ name: name }, definition)); };\n        this.types = inherit(map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new ParamType(extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            extend(this.types[type.name], services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexport { ParamTypes };\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val) { return (val != null ? val.toString() : val); };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: is(String),\n            pattern: /.*/,\n            // tslint:disable-next-line:triple-equals\n            equals: function (a, b) { return a == b; },\n        };\n        return extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val) { return parseInt(val, 10); },\n            is: function (val) {\n                return !isNullOrUndefined(val) && this.decode(val.toString()) === val;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val) { return (val && 1) || 0; },\n            decode: function (val) { return parseInt(val, 10) !== 0; },\n            is: is(Boolean),\n            pattern: /0|1/,\n        }),\n        date: makeDefaultType({\n            encode: function (val) {\n                return !this.is(val)\n                    ? undefined\n                    : [val.getFullYear(), ('0' + (val.getMonth() + 1)).slice(-2), ('0' + val.getDate()).slice(-2)].join('-');\n            },\n            decode: function (val) {\n                if (this.is(val))\n                    return val;\n                var match = this.capture.exec(val);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate'].reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/,\n        }),\n        json: makeDefaultType({\n            encode: toJson,\n            decode: fromJson,\n            is: is(Object),\n            equals: equals,\n            pattern: /[^/]*/,\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: identity,\n            decode: identity,\n            is: function () { return true; },\n            equals: equals,\n        }),\n    });\n}\ninitDefaultTypes();\n//# sourceMappingURL=paramTypes.js.map","/** @publicapi @module params */ /** */\nimport { extend, ancestors } from '../common/common';\n/** @internalapi */\nvar StateParams = /** @class */ (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parentParams;\n        var parents = ancestors($current, $to), inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return extend({}, inherited, newParams);\n    };\n    return StateParams;\n}());\nexport { StateParams };\n//# sourceMappingURL=stateParams.js.map","/** @internalapi @module path */ /** */\nimport { extend, applyPairs, find } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Param } from '../params/param';\n/**\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = /** @class */ (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    PathNode.prototype.clone = function () {\n        return new PathNode(this);\n    };\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return find(this.paramSchema, propEq('id', name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /**\n     * Returns a clone of the PathNode\n     * @deprecated use instance method `node.clone()`\n     */\n    PathNode.clone = function (node) { return node.clone(); };\n    return PathNode;\n}());\nexport { PathNode };\n//# sourceMappingURL=pathNode.js.map","/** @publicapi @module state */ /** */\nimport { isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { extend } from '../common';\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = /** @class */ (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _stateRegistry The StateRegistry to use to look up the _definition\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_stateRegistry, _identifier, _params, _options) {\n        this._stateRegistry = _stateRegistry;\n        this._identifier = _identifier;\n        this._identifier = _identifier;\n        this._params = extend({}, _params || {});\n        this._options = extend({}, _options || {});\n        this._definition = _stateRegistry.matcher.find(_identifier, this._options.relative);\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return (this._definition && this._definition.name) || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + stringify(this.params());\n    };\n    /**\n     * Returns a copy of this TargetState which targets a different state.\n     * The new TargetState has the same parameter values and transition options.\n     *\n     * @param state The new state that should be targeted\n     */\n    TargetState.prototype.withState = function (state) {\n        return new TargetState(this._stateRegistry, state, this._params, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified parameter values.\n     *\n     * @param params the new parameter values to use\n     * @param replace When false (default) the new parameter values will be merged with the current values.\n     *                When true the parameter values will be used instead of the current values.\n     */\n    TargetState.prototype.withParams = function (params, replace) {\n        if (replace === void 0) { replace = false; }\n        var newParams = replace ? params : extend({}, this._params, params);\n        return new TargetState(this._stateRegistry, this._identifier, newParams, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified Transition Options.\n     *\n     * @param options the new options to use\n     * @param replace When false (default) the new options will be merged with the current options.\n     *                When true the options will be used instead of the current options.\n     */\n    TargetState.prototype.withOptions = function (options, replace) {\n        if (replace === void 0) { replace = false; }\n        var newOpts = replace ? options : extend({}, this._options, options);\n        return new TargetState(this._stateRegistry, this._identifier, this._params, newOpts);\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) { return obj && obj.state && (isString(obj.state) || isString(obj.state.name)); };\n    return TargetState;\n}());\nexport { TargetState };\n//# sourceMappingURL=targetState.js.map","/** @internalapi @module path */ /** */\nimport { extend, find, pick, omit, tail, mergeR, values, unnestR, inArray, arrayTuples, } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { TargetState } from '../state/targetState';\nimport { PathNode } from './pathNode';\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = /** @class */ (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (registry, path) {\n        var state = tail(path).state;\n        return new TargetState(registry, state, path.map(prop('paramValues')).reduce(mergeR, {}), {});\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path\n            .filter(function (node) { return inArray(states, node.state); })\n            .forEach(function (node) {\n            var viewDecls = values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = find(path, propEq('state', state));\n            return extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath\n            .map(function (node) { return node.paramSchema; })\n            .reduce(unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = pick(toParamVals, toKeys);\n            toParamVals = omit(toParamVals, toKeys);\n            var fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = extend(toParamVals, fromParamVals, incomingParamVals);\n            return new PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var max = Math.min(fromPath.length, toPath.length);\n        var keep = 0;\n        var nodesMatch = function (node1, node2) { return node1.equals(node2, PathUtils.nonDynamicParams); };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = retainedNode.clone();\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = retainedWithToParams.concat(entering);\n        return { from: from, to: to, retained: retained, retainedWithToParams: retainedWithToParams, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length && PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false }).filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) { return path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {}); };\n    return PathUtils;\n}());\nexport { PathUtils };\n//# sourceMappingURL=pathUtils.js.map","/** @internalapi */\nexport var resolvePolicies = {\n    when: {\n        LAZY: 'LAZY',\n        EAGER: 'EAGER',\n    },\n    async: {\n        WAIT: 'WAIT',\n        NOWAIT: 'NOWAIT',\n        RXWAIT: 'RXWAIT',\n    },\n};\n//# sourceMappingURL=interface.js.map","/** @publicapi @module resolve */ /** */\nimport { extend, identity } from '../common/common';\nimport { services } from '../common/coreservices';\nimport { trace } from '../common/trace';\nimport { stringify } from '../common/strings';\nimport { isFunction, isObject } from '../common/predicates';\nimport { isNullOrUndefined } from '../common/predicates';\n// TODO: explicitly make this user configurable\nexport var defaultResolvePolicy = {\n    when: 'LAZY',\n    async: 'WAIT',\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = /** @class */ (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            extend(this, arg1);\n        }\n        else if (isFunction(resolveFn)) {\n            if (isNullOrUndefined(arg1))\n                throw new Error('new Resolvable(): token argument is required');\n            if (!isFunction(resolveFn))\n                throw new Error('new Resolvable(): resolveFn argument must be a function');\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n        }\n        else if (isObject(arg1) && arg1.token && (arg1.hasOwnProperty('resolveFn') || arg1.hasOwnProperty('data'))) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = (state && state.resolvePolicy) || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) { return resolvable.get(resolveContext, trans); }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) { return _this.resolveFn.apply(null, resolvedDeps); };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached\n                .take(1)\n                .toPromise()\n                .then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === 'RXWAIT' ? waitForRx : identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            _this.resolveFn = null;\n            trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return (this.promise = $q\n            .when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue));\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + stringify(this.token) + \", requires: [\" + this.deps.map(stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) { return new Resolvable(token, function () { return data; }, null, null, data); };\n    return Resolvable;\n}());\nexport { Resolvable };\n//# sourceMappingURL=resolvable.js.map","/** @publicapi @module resolve */ /** */\nimport { find, tail, uniqR, unnestR, inArray } from '../common/common';\nimport { propEq, not } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { resolvePolicies } from './interface';\nimport { Resolvable } from './resolvable';\nimport { PathUtils } from '../path/pathUtils';\nimport { stringify } from '../common/strings';\nimport { isUndefined } from '../common';\nvar whens = resolvePolicies.when;\nvar ALL_WHENS = [whens.EAGER, whens.LAZY];\nvar EAGER_WHENS = [whens.EAGER];\n// tslint:disable-next-line:no-inferrable-types\nexport var NATIVE_INJECTOR_TOKEN = 'Native Injector';\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = /** @class */ (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path\n            .map(function (node) { return node.resolvables; })\n            .reduce(unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = find(this._path, propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = 'LAZY'; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = inArray(ALL_WHENS, when) ? when : 'LAZY';\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) { return function (resolvable) {\n            return inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n        }; };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) {\n                return r\n                    .get(subContext, trans)\n                    // Return a tuple that includes the Resolvable's token\n                    .then(function (value) { return ({ token: r.token, value: value }); });\n            };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return find(this._path, function (node) { return inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, _node) { return acc.concat(_node.resolvables); }, []) // all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (isUndefined(fromInjector)) {\n                throw new Error('Could not find Dependency Injection token: ' + stringify(token));\n            }\n            return new Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexport { ResolveContext };\n/** @internalapi */\nvar UIInjectorImpl = /** @class */ (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error('Resolvable async .get() not complete:' + stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.getNative(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map","/** @publicapi @module state */ /** */\nimport { applyPairs, extend, identity, inherit, mapObj, noop, omit, tail, values, copy } from '../common/common';\nimport { isArray, isDefined, isFunction, isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { is, pattern, pipe, prop, val } from '../common/hof';\nimport { Resolvable } from '../resolve/resolvable';\nimport { services } from '../common/coreservices';\nvar parseUrl = function (url) {\n    if (!isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(stateObject) {\n        var stateDec = stateObject.self;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (stateDec && stateDec.url && stateDec.name && stateDec.name.match(/\\.\\*\\*$/)) {\n            var newStateDec = {};\n            copy(stateDec, newStateDec);\n            newStateDec.url += '{remainder:any}'; // match any path (.*)\n            stateDec = newStateDec;\n        }\n        var parent = stateObject.parent;\n        var parsed = parseUrl(stateDec.url);\n        var url = !parsed ? stateDec.url : $urlMatcherFactoryProvider.compile(parsed.val, { state: stateDec });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + stateObject + \"'\");\n        return parsed && parsed.root ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : state.parent ? state.parent.navigable : null;\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, state.self); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n        return urlParams\n            .concat(nonUrlParams)\n            .map(function (p) { return [p.id, p]; })\n            .reduce(applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nexport function resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({\n            token: token,\n            val: resolveObj[token],\n            deps: undefined,\n            policy: resolvePolicies[token],\n        }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || 'deferred';\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) {\n        return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass));\n    };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) {\n        return !!(obj && obj.val && (isString(obj.val) || isArray(obj.val) || isFunction(obj.val)));\n    };\n    /** extracts the token from a Provider or provide literal */\n    var getToken = function (p) { return p.provide || p.token; };\n    // prettier-ignore: Given a literal resolve or provider object, returns a Resolvable\n    var literal2Resolvable = pattern([\n        [prop('resolveFn'), function (p) { return new Resolvable(getToken(p), p.resolveFn, p.deps, p.policy); }],\n        [prop('useFactory'), function (p) { return new Resolvable(getToken(p), p.useFactory, p.deps || p.dependencies, p.policy); }],\n        [prop('useClass'), function (p) { return new Resolvable(getToken(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [prop('useValue'), function (p) { return new Resolvable(getToken(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [prop('useExisting'), function (p) { return new Resolvable(getToken(p), identity, [p.useExisting], p.policy); }],\n    ]);\n    // prettier-ignore\n    var tuple2Resolvable = pattern([\n        [pipe(prop('val'), isString), function (tuple) { return new Resolvable(tuple.token, identity, [tuple.val], tuple.policy); }],\n        [pipe(prop('val'), isArray), function (tuple) { return new Resolvable(tuple.token, tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [pipe(prop('val'), isFunction), function (tuple) { return new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    // prettier-ignore\n    var item2Resolvable = pattern([\n        [is(Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [val(true), function (obj) { throw new Error('Invalid resolve value: ' + stringify(obj)); },],\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = /** @class */ (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(''); };\n        var isRoot = function (state) { return state.name === ''; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder],\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (isString(name) && !isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!isString(name) || !isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || '';\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join('.');\n        }\n        if (!state.parent)\n            return '';\n        return isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + '.' + name : name;\n    };\n    return StateBuilder;\n}());\nexport { StateBuilder };\n//# sourceMappingURL=stateBuilder.js.map","var TransitionHookPhase;\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(TransitionHookPhase || (TransitionHookPhase = {}));\nvar TransitionHookScope;\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(TransitionHookScope || (TransitionHookScope = {}));\nexport { TransitionHookPhase, TransitionHookScope };\n//# sourceMappingURL=interface.js.map","import { defaults, values, find, inherit } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Glob } from '../common/glob';\nimport { isObject, isFunction } from '../common/predicates';\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = /** @class */ (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = inherit(inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: Glob.fromString(state.name),\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + '.' + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return (this.parent && this.parent.root()) || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = (opts.inherit && this.parent && this.parent.parameters()) || [];\n        return inherited\n            .concat(values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return ((this.url && this.url.parameter(id, opts)) ||\n            find(values(this.params), propEq('id', id)) ||\n            (opts.inherit && this.parent && this.parent.parameter(id)));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) { return isObject(obj['__stateObjectCache']); };\n    return StateObject;\n}());\nexport { StateObject };\n//# sourceMappingURL=stateObject.js.map","/** @publicapi @module state */ /** */\nimport { isString } from '../common/predicates';\nimport { values } from '../common/common';\nvar StateMatcher = /** @class */ (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || '';\n        return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== '')\n            return undefined;\n        var isStr = isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = values(this._states);\n            var matches = _states.filter(function (_state) { return _state.__stateObjectCache.nameGlob && _state.__stateObjectCache.nameGlob.matches(name); });\n            if (matches.length > 1) {\n                // tslint:disable-next-line:no-console\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split('.');\n        var pathLength = splitName.length;\n        var i = 0, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === '' && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === '^') {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join('.');\n        return current.name + (current.name && relName ? '.' : '') + relName;\n    };\n    return StateMatcher;\n}());\nexport { StateMatcher };\n//# sourceMappingURL=stateMatcher.js.map","/** @publicapi @module state */ /** */\nimport { inArray, isString, prop } from '../common';\nimport { StateObject } from './stateObject';\n/** @internalapi */\nvar StateQueueManager = /** @class */ (function () {\n    function StateQueueManager(router, states, builder, listeners) {\n        this.router = router;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = StateObject.create(stateDecl);\n        var name = state.name;\n        if (!isString(name))\n            throw new Error('State must have a valid name');\n        if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) { return _this.states.hasOwnProperty(name) && _this.states[name]; };\n        var notifyListeners = function () {\n            if (registered.length) {\n                _this.listeners.forEach(function (listener) { return listener('registered', registered.map(function (s) { return s.self; })); });\n            }\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + '.**');\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.router.stateRegistry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                notifyListeners();\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        notifyListeners();\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        var rulesApi = this.router.urlService.rules;\n        rulesApi.rule(rulesApi.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\nexport { StateQueueManager };\n//# sourceMappingURL=stateQueueManager.js.map","/** @publicapi @module state */ /** */\nimport { StateMatcher } from './stateMatcher';\nimport { StateBuilder } from './stateBuilder';\nimport { StateQueueManager } from './stateQueueManager';\nimport { removeFrom } from '../common/common';\nimport { propEq } from '../common/hof';\nvar StateRegistry = /** @class */ (function () {\n    /** @internalapi */\n    function StateRegistry(router) {\n        this.router = router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new StateMatcher(this.states);\n        this.builder = new StateBuilder(this.matcher, router.urlMatcherFactory);\n        this.stateQueue = new StateQueueManager(router, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true },\n            },\n            abstract: true,\n        };\n        var _root = (this._root = this.stateQueue.register(rootStateDef));\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var _children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return _children.length === 0 ? _children : _children.concat(getChildren(_children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (_state) {\n            var rulesApi = _this.router.urlService.rules;\n            // Remove URL rule\n            rulesApi\n                .rules()\n                .filter(propEq('state', _state))\n                .forEach(function (rule) { return rulesApi.removeRule(rule); });\n            // Remove state from registry\n            delete _this.states[_state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener('deregistered', deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return (found && found.self) || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexport { StateRegistry };\n//# sourceMappingURL=stateRegistry.js.map","/** @publicapi @module transition */ /** */\nimport { TransitionHookPhase } from './interface';\nimport { defaults, noop, silentRejection } from '../common/common';\nimport { fnToString, maxLength } from '../common/strings';\nimport { isPromise } from '../common/predicates';\nimport { is, parse } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { Rejection } from './rejectFactory';\nimport { TargetState } from '../state/targetState';\nvar defaultOptions = {\n    current: noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = /** @class */ (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () { return _this.type.hookPhase === TransitionHookPhase.RUN && !_this.options.transition.isActive(); };\n        this.options = defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) { return prev.then(function () { return nextHook.invokeHook(); }); };\n        return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult).then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () { return hook.callback.call(options.bind, _this.transition, _this.stateContext); };\n        var normalizeErr = function (err) { return Rejection.normalize(err).toPromise(); };\n        var handleError = function (err) { return hook.eventType.getErrorHandler(_this)(err); };\n        var handleResult = function (result) { return hook.eventType.getResultHandler(_this)(result); };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && isPromise(result)) {\n                return result.catch(normalizeErr).then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(Rejection.normalize(err));\n        }\n        finally {\n            if (hook.invokeLimit && ++hook.invokeCount >= hook.invokeLimit) {\n                hook.deregister();\n            }\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val) { return _this.handleHookResult(val); });\n        }\n        trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return Rejection.aborted('Hook aborted transition').toPromise();\n        }\n        var isTargetState = is(TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + maxLength(200, name);\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        isPromise(result) && result.catch(function (err) { return hook.logError(Rejection.normalize(err)); });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) { return hook.logError(error); }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) { return silentRejection(error); }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\nexport { TransitionHook };\n//# sourceMappingURL=transitionHook.js.map","/** @publicapi @module transition */ /** */\nimport { isString, isFunction, Glob, extend, removeFrom, tail, values, identity, mapObj } from '../common';\nimport { // has or is using\nTransitionHookScope, } from './interface';\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nexport function matchState(state, criterion, transition) {\n    var toMatch = isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state, transition);\n}\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = /** @class */ (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, removeHookFromRegistry, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.removeHookFromRegistry = removeHookFromRegistry;\n        this.invokeCount = 0;\n        this._deregistered = false;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this.invokeLimit = options.invokeLimit;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion, transition) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion, transition); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return mapObj(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges, transition) {\n        var _this = this;\n        var criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name], transition);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges, transition) {\n        var matches = this._getMatchingNodes(treeChanges, transition);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = values(matches).every(identity);\n        return allMatched ? matches : null;\n    };\n    RegisteredHook.prototype.deregister = function () {\n        this.removeHookFromRegistry(this);\n        this._deregistered = true;\n    };\n    return RegisteredHook;\n}());\nexport { RegisteredHook };\n/** @hidden Return a registration function of the requested type. */\nexport function makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = (registry._registeredHooks = registry._registeredHooks || {});\n    var hooks = (_registeredHooks[eventType.name] = []);\n    var removeHookFn = removeFrom(hooks);\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, removeHookFn, options);\n        hooks.push(registeredHook);\n        return registeredHook.deregister.bind(registeredHook);\n    }\n    return hookRegistrationFn;\n}\n//# sourceMappingURL=hookRegistry.js.map","/** @publicapi @module transition */ /** */\nimport { extend, assertPredicate, unnestR, identity } from '../common/common';\nimport { isArray } from '../common/predicates';\nimport { TransitionHookPhase, TransitionHookScope, } from './interface';\nimport { TransitionHook } from './transitionHook';\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = /** @class */ (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi\n            ._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(unnestR, [])\n            .filter(identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges, transition);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current,\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges, transition);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node },\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks\n            .map(makeTransitionHooks)\n            .reduce(unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges, transition) {\n        var isCreate = hookType.hookPhase === TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries\n            .map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(assertPredicate(isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges, transition); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexport { HookBuilder };\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map","/** @publicapi @module transition */ /** */\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { stringify } from '../common/strings';\nimport { map, find, extend, mergeR, tail, omit, arrayTuples, unnestR, identity, anyTrueR } from '../common/common';\nimport { isObject, isUndefined } from '../common/predicates';\nimport { prop, propEq, val, not, is } from '../common/hof';\nimport { TransitionHookPhase, } from './interface'; // has or is using\nimport { TransitionHook } from './transitionHook';\nimport { matchState, makeEvent } from './hookRegistry';\nimport { HookBuilder } from './hookBuilder';\nimport { PathUtils } from '../path/pathUtils';\nimport { Param } from '../params/param';\nimport { Resolvable } from '../resolve/resolvable';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { Rejection } from './rejectFactory';\nimport { flattenR, uniqR } from '../common';\n/** @hidden */\nvar stateSelf = prop('self');\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = /** @class */ (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () { return _this.router.globals.transition === _this; };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = extend({ current: val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(TransitionHookPhase.CREATE);\n        TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi\n            ._getEvents()\n            .filter(function (type) { return type.hookPhase !== TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !matchState(this.$to(), compare.to, this)) ||\n            (compare.from && !matchState(this.$from(), compare.from, this)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return Object.freeze(this._treeChanges[pathname].map(prop('paramValues')).reduce(mergeR, {}));\n    };\n    Transition.prototype.paramsChanged = function () {\n        var fromParams = this.params('from');\n        var toParams = this.params('to');\n        // All the parameters declared on both the \"to\" and \"from\" paths\n        var allParamDescriptors = []\n            .concat(this._treeChanges.to)\n            .concat(this._treeChanges.from)\n            .map(function (pathNode) { return pathNode.paramSchema; })\n            .reduce(flattenR, [])\n            .reduce(uniqR, []);\n        var changedParamDescriptors = Param.changed(allParamDescriptors, fromParams, toParams);\n        return changedParamDescriptors.reduce(function (changedValues, descriptor) {\n            changedValues[descriptor.id] = toParams[descriptor.id];\n            return changedValues;\n        }, {});\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `myResolve` resolve\n     *   // even though `foo.bar` also has a `myResolve` resolve\n     *   var fooData = trans.injector('foo').get('myResolve');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `myResolve` from the state being exited\n     *   var fooData = trans.injector(null, 'from').get('myResolve');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = 'to'; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return new ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * Allows a transition hook to dynamically add a Resolvable to this Transition.\n     *\n     * Use the [[Transition.injector]] to retrieve the resolved data in subsequent hooks ([[UIInjector.get]]).\n     *\n     * If a `state` argument is provided, the Resolvable is processed when that state is being entered.\n     * If no `state` is provided then the root state is used.\n     * If the given `state` has already been entered, the Resolvable is processed when any child state is entered.\n     * If no child states will be entered, the Resolvable is processed during the `onFinish` phase of the Transition.\n     *\n     * The `state` argument also scopes the resolved data.\n     * The resolved data is available from the injector for that `state` and any children states.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = ''; }\n        resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n        var stateName = typeof state === 'string' ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return map(this._treeChanges.exiting, prop('state'))\n            .map(stateSelf)\n            .reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = 'entering'; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(propEq('state', state));\n        return path\n            .map(prop('views'))\n            .filter(identity)\n            .reduce(unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: 'redirect' };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = targetState.withOptions(newOptions, true);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams).filter(not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return Param.changed(schema, toVals, fromVals);\n        }).reduce(unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return 'SameAsPending';\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return 'SameAsCurrent';\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) { return _this._hookBuilder.buildHooksForPhase(phase); };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(TransitionHookPhase.RUN);\n            var done = function () { return services.$q.when(undefined); };\n            return TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace.traceTransitionStart(_this);\n            return services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(TransitionHookPhase.BEFORE);\n        TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns a transition rejection explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract) {\n            return Rejection.invalid(\"Cannot transition to abstract state '\" + state.name + \"'\");\n        }\n        var paramDefs = state.parameters();\n        var values = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values[param.id]); });\n        if (invalidParams.length) {\n            var invalidValues = invalidParams.map(function (param) { return \"[\" + param.id + \":\" + stringify(values[param.id]) + \"]\"; }).join(', ');\n            var detail = \"The following parameter values are not valid for state '\" + state.name + \"': \" + invalidValues;\n            return Rejection.invalid(detail);\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return params['#'] !== null && params['#'] !== undefined ? params : omit(params, ['#']);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = stringify(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))), toValid = this.valid() ? '' : '(X) ', to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = stringify(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexport { Transition };\n//# sourceMappingURL=transition.js.map","/** @publicapi @module url */ /** */\nimport { map, inherit, identity, unnest, tail, find, allTrueR, unnestR, arrayTuples } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { isArray, isString, isDefined } from '../common/predicates';\nimport { Param, DefType } from '../params/param';\nimport { joinNeighborsR, splitOnDelim } from '../common/strings';\nimport { defaults } from '../common';\n/** @hidden */\nfunction quoteRegExp(str, param) {\n    var surroundPattern = ['', ''], result = str.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, '\\\\$&');\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:/(', ')|/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, _prop, fn) { return (obj[_prop] = obj[_prop] || fn()); };\n/** @hidden */\nvar splitOnSlash = splitOnDelim('/');\n/** @hidden */\nvar defaultConfig = {\n    state: { params: {} },\n    strict: true,\n    caseInsensitive: true,\n};\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = /** @class */ (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param paramFactory A [[ParamFactory]] object\n     * @param config  A [[UrlMatcherCompileConfig]] configuration object\n     */\n    function UrlMatcher(pattern, paramTypes, paramFactory, config) {\n        var _this = this;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.config = config = defaults(config, defaultConfig);\n        this.pattern = pattern;\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var patterns = [];\n        var last = 0;\n        var matchArray;\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (find(_this._params, propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (str) {\n                return inherit(paramTypes.type(isSearch ? 'query' : 'path'), {\n                    pattern: new RegExp(str, _this.config.caseInsensitive ? 'i' : undefined),\n                });\n            };\n            return {\n                id: id,\n                regexp: regexp,\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp),\n            };\n        };\n        var details;\n        var segment;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((matchArray = placeholder.exec(pattern))) {\n            details = matchDetails(matchArray, false);\n            if (details.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(details.id);\n            this._params.push(paramFactory.fromPath(details.id, details.type, config.state));\n            this._segments.push(details.segment);\n            patterns.push([details.segment, tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                // tslint:disable-next-line:no-conditional-assignment\n                while ((matchArray = searchPlaceholder.exec(search))) {\n                    details = matchDetails(matchArray, true);\n                    checkParamErrors(details.id);\n                    this._params.push(paramFactory.fromSearch(details.id, details.type, config.state));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (_pattern) { return quoteRegExp.apply(null, _pattern); }).concat(quoteRegExp(segment));\n    }\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        // Replace dashes with encoded \"\\-\"\n        return encodeURIComponent(str).replace(/-/g, function (c) {\n            return \"%5C%\" + c\n                .charCodeAt(0)\n                .toString(16)\n                .toUpperCase();\n        });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === DefType.PATH; });\n        return arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(unnestR, [])\n            .filter(function (x) { return x !== '' && isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return (matcher._cache.segments =\n                matcher._cache.segments ||\n                    matcher._cache.path\n                        .map(UrlMatcher.pathSegmentsAndParams)\n                        .reduce(unnestR, [])\n                        .reduce(joinNeighborsR, [])\n                        .map(function (x) { return (isString(x) ? splitOnSlash(x) : x); })\n                        .reduce(unnestR, []));\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return (matcher._cache.weights =\n                matcher._cache.weights ||\n                    segments(matcher).map(function (segment) {\n                        // Sort slashes first, then static strings, the Params\n                        if (segment === '/')\n                            return 1;\n                        if (isString(segment))\n                            return 2;\n                        if (segment instanceof Param)\n                            return 3;\n                    }));\n        };\n        /**\n         * Pads shorter array in-place (mutates)\n         */\n        var padArrays = function (l, r, padVal) {\n            var len = Math.max(l.length, r.length);\n            while (l.length < len)\n                l.push(padVal);\n            while (r.length < len)\n                r.push(padVal);\n        };\n        var weightsA = weights(a), weightsB = weights(b);\n        padArrays(weightsA, weightsB, 0);\n        var _pairs = arrayTuples(weightsA, weightsB);\n        var cmp, i;\n        for (i = 0; i < _pairs.length; i++) {\n            cmp = _pairs[i][0] - _pairs[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                unnest(_this._cache.path.map(prop('_compiled'))).join(''),\n                _this.config.strict === false ? '/?' : '',\n                '$',\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        // options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(paramVal) {\n            var reverseString = function (str) {\n                return str\n                    .split('')\n                    .reverse()\n                    .join('');\n            };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, '-'); };\n            var split = reverseString(paramVal).split(/-(?!\\\\)/);\n            var allReversed = map(split, reverseString);\n            return map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values['#'] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val) { return !param || param.validates(val); };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers\n            .map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(unnestR, [])\n            .map(function (x) { return (isString(x) ? x : getDetails(x)); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers\n            .map(UrlMatcher.queryParams)\n            .reduce(unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return acc.match(/\\/$/) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (isArray(encoded))\n                return acc + map(encoded, UrlMatcher.encodeDashes).join('-');\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, '');\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams\n            .map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return param.id + \"=\" + val; });\n        })\n            .filter(identity)\n            .reduce(unnestR, [])\n            .join('&');\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : '') + (values['#'] ? '#' + values['#'] : '');\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexport { UrlMatcher };\n//# sourceMappingURL=urlMatcher.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/** @publicapi @module url */ /** */\nimport { extend, forEach, isDefined, isFunction, isObject } from '../common';\nimport { UrlMatcher } from './urlMatcher';\nimport { DefType, Param } from '../params';\n/** @internalapi */\nvar ParamFactory = /** @class */ (function () {\n    function ParamFactory(router) {\n        this.router = router;\n    }\n    ParamFactory.prototype.fromConfig = function (id, type, state) {\n        return new Param(id, type, DefType.CONFIG, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromPath = function (id, type, state) {\n        return new Param(id, type, DefType.PATH, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromSearch = function (id, type, state) {\n        return new Param(id, type, DefType.SEARCH, this.router.urlService.config, state);\n    };\n    return ParamFactory;\n}());\nexport { ParamFactory };\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactory` or ng1 providers as `$urlMatcherFactoryProvider`.\n *\n * @internalapi\n */\nvar UrlMatcherFactory = /** @class */ (function () {\n    // TODO: move implementations to UrlConfig (urlService.config)\n    function UrlMatcherFactory(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = new ParamFactory(this.router);\n        /** @deprecated use [[UrlConfig.caseInsensitive]] */\n        this.caseInsensitive = function (value) { return _this.router.urlService.config.caseInsensitive(value); };\n        /** @deprecated use [[UrlConfig.defaultSquashPolicy]] */\n        this.defaultSquashPolicy = function (value) { return _this.router.urlService.config.defaultSquashPolicy(value); };\n        /** @deprecated use [[UrlConfig.strictMode]] */\n        this.strictMode = function (value) { return _this.router.urlService.config.strictMode(value); };\n        /** @deprecated use [[UrlConfig.type]] */\n        this.type = function (name, definition, definitionFn) {\n            return _this.router.urlService.config.type(name, definition, definitionFn) || _this;\n        };\n        extend(this, { UrlMatcher: UrlMatcher, Param: Param });\n    }\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        var urlConfig = this.router.urlService.config;\n        // backward-compatible support for config.params -> config.state.params\n        var params = config && !config.state && config.params;\n        config = params ? __assign({ state: { params: params } }, config) : config;\n        var globalConfig = { strict: urlConfig._isStrictMode, caseInsensitive: urlConfig._isCaseInsensitive };\n        return new UrlMatcher(pattern, urlConfig.paramTypes, this.paramFactory, extend(globalConfig, config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!isObject(object))\n            return false;\n        var result = true;\n        forEach(UrlMatcher.prototype, function (val, name) {\n            if (isFunction(val))\n                result = result && (isDefined(object[name]) && isFunction(object[name]));\n        });\n        return result;\n    };\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        var urlConfig = this.router.urlService.config;\n        urlConfig.paramTypes.enqueue = false;\n        urlConfig.paramTypes._flushTypeQueue();\n        return this;\n    };\n    return UrlMatcherFactory;\n}());\nexport { UrlMatcherFactory };\n//# sourceMappingURL=urlMatcherFactory.js.map","/** @publicapi @module url */ /** */\nimport { UrlMatcher } from './urlMatcher';\nimport { isString, isDefined, isFunction } from '../common/predicates';\nimport { identity, extend } from '../common/common';\nimport { is, pattern } from '../common/hof';\nimport { StateObject } from '../state/stateObject';\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = /** @class */ (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var isState = StateObject.isState;\n        var makeRule = pattern([\n            [isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [is(UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [isState, function (_what) { return _this.fromState(_what, _this.router); }],\n            [is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (is(UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function matchUrlParamters(url) {\n            var params = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(params) && params;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: 'URLMATCHER' };\n        return extend(new BaseUrlRule(matchUrlParamters, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (state, router) {\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: 'url' });\n            }\n        };\n        var details = { state: state, type: 'STATE' };\n        return extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error('Rule RegExp must not be global or sticky');\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) { return match[what === '$' ? 0 : Number(what)]; });\n        };\n        var _handler = isString(handler) ? redirectUrlTo : handler;\n        var matchParamsFromRegexp = function (url) { return regexp.exec(url.path); };\n        var details = { regexp: regexp, type: 'REGEXP' };\n        return extend(new BaseUrlRule(matchParamsFromRegexp, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) { return obj && ['type', 'match', 'handler'].every(function (key) { return isDefined(obj[key]); }); };\n    return UrlRuleFactory;\n}());\nexport { UrlRuleFactory };\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = /** @class */ (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = 'RAW';\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || identity;\n    }\n    return BaseUrlRule;\n}());\nexport { BaseUrlRule };\n//# sourceMappingURL=urlRule.js.map","/** @publicapi @module url */ /** */\nimport { stripLastPathElement } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return stripLastPathElement(baseHref) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRules]] which can be found as [[UrlService.rules]].\n *\n * @internalapi\n */\nvar UrlRouter = /** @class */ (function () {\n    /** @hidden */\n    function UrlRouter(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        // Delegate these calls to [[UrlService]]\n        /** @deprecated use [[UrlService.sync]]*/\n        this.sync = function (evt) { return _this.router.urlService.sync(evt); };\n        /** @deprecated use [[UrlService.listen]]*/\n        this.listen = function (enabled) { return _this.router.urlService.listen(enabled); };\n        /** @deprecated use [[UrlService.deferIntercept]]*/\n        this.deferIntercept = function (defer) { return _this.router.urlService.deferIntercept(defer); };\n        /** @deprecated use [[UrlService.match]]*/\n        this.match = function (urlParts) { return _this.router.urlService.match(urlParts); };\n        // Delegate these calls to [[UrlRules]]\n        /** @deprecated use [[UrlRules.initial]]*/\n        this.initial = function (handler) {\n            return _this.router.urlService.rules.initial(handler);\n        };\n        /** @deprecated use [[UrlRules.otherwise]]*/\n        this.otherwise = function (handler) {\n            return _this.router.urlService.rules.otherwise(handler);\n        };\n        /** @deprecated use [[UrlRules.removeRule]]*/\n        this.removeRule = function (rule) { return _this.router.urlService.rules.removeRule(rule); };\n        /** @deprecated use [[UrlRules.rule]]*/\n        this.rule = function (rule) { return _this.router.urlService.rules.rule(rule); };\n        /** @deprecated use [[UrlRules.rules]]*/\n        this.rules = function () { return _this.router.urlService.rules.rules(); };\n        /** @deprecated use [[UrlRules.sort]]*/\n        this.sort = function (compareFn) { return _this.router.urlService.rules.sort(compareFn); };\n        /** @deprecated use [[UrlRules.when]]*/\n        this.when = function (matcher, handler, options) { return _this.router.urlService.rules.when(matcher, handler, options); };\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this.router.locationService;\n        if (read) {\n            this.location = $url.url();\n            return;\n        }\n        if ($url.url() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this.router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this.router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = '#' + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = !isHtml5 && url ? '/' : '';\n        var cfgPort = cfg.port();\n        var port = (cfgPort === 80 || cfgPort === 443 ? '' : ':' + cfgPort);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    Object.defineProperty(UrlRouter.prototype, \"interceptDeferred\", {\n        /** @deprecated use [[UrlService.interceptDeferred]]*/\n        get: function () {\n            return this.router.urlService.interceptDeferred;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UrlRouter;\n}());\nexport { UrlRouter };\n//# sourceMappingURL=urlRouter.js.map","import { TargetState } from '../state';\nimport { UrlMatcher } from './urlMatcher';\nimport { is, isDefined, isFunction, isString, removeFrom, val } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nvar prioritySort = function (a, b) { return (b.priority || 0) - (a.priority || 0); };\n/** @hidden */\nvar typeSort = function (a, b) {\n    var weights = { STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1 };\n    return (weights[a.type] || 0) - (weights[b.type] || 0);\n};\n/** @hidden */\nvar urlMatcherSort = function (a, b) {\n    return !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n};\n/** @hidden */\nvar idSort = function (a, b) {\n    // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n    var useMatchPriority = { STATE: true, URLMATCHER: true };\n    var equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n    return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n};\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRules.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Rule registration order (for rule types other than STATE and URLMATCHER)\n *   - Equally sorted State and UrlMatcher rules will each match the URL.\n *     Then, the *best* match is chosen based on how many parameter values were matched.\n *\n * @publicapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = function (a, b) {\n    var cmp = prioritySort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = typeSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = urlMatcherSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    return idSort(a, b);\n};\n/** @hidden */\nfunction getHandlerFn(handler) {\n    if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return isFunction(handler) ? handler : val(handler);\n}\n/**\n * API for managing URL rules\n *\n * This API is used to create and manage URL rules.\n * URL rules are a mechanism to respond to specific URL patterns.\n *\n * The most commonly used methods are [[otherwise]] and [[when]].\n *\n * This API is a property of [[UrlService]] as [[UrlService.rules]]\n *\n * @publicapi\n */\nvar UrlRules = /** @class */ (function () {\n    /** @hidden */\n    function UrlRules(/** @hidden */ router) {\n        this.router = router;\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this._id = 0;\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /** @hidden */\n    UrlRules.prototype.dispose = function (router) {\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /**\n     * Defines the initial state, path, or behavior to use when the app starts.\n     *\n     * This rule defines the initial/starting state for the application.\n     *\n     * This rule is triggered the first time the URL is checked (when the app initially loads).\n     * The rule is triggered only when the url matches either `\"\"` or `\"/\"`.\n     *\n     * Note: The rule is intended to be used when the root of the application is directly linked to.\n     * When the URL is *not* `\"\"` or `\"/\"` and doesn't match other rules, the [[otherwise]] rule is triggered.\n     * This allows 404-like behavior when an unknown URL is deep-linked.\n     *\n     * #### Example:\n     * Start app at `home` state.\n     * ```js\n     * .initial({ state: 'home' });\n     * ```\n     *\n     * #### Example:\n     * Start app at `/home` (by url)\n     * ```js\n     * .initial('/home');\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .initial((matchValue, url, router) => {\n     *   console.log('initial state');\n     *   return { state: 'home' };\n     * })\n     * ```\n     *\n     * @param handler The initial state or url path, or a function which returns the state or url path (or performs custom logic).\n     */\n    UrlRules.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    /**\n     * Defines the state, url, or behavior to use when no other rule matches the URL.\n     *\n     * This rule is matched when *no other rule* matches.\n     * It is generally used to handle unknown URLs (similar to \"404\" behavior, but on the client side).\n     *\n     * - If `handler` a string, it is treated as a url redirect\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `/index`\n     * ```js\n     * .otherwise('/index');\n     * ```\n     *\n     * - If `handler` is an object with a `state` property, the state is activated.\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `home` and provide a `dashboard` parameter value.\n     * ```js\n     * .otherwise({ state: 'home', params: { dashboard: 'default' } });\n     * ```\n     *\n     * - If `handler` is a function, the function receives the current url ([[UrlParts]]) and the [[UIRouter]] object.\n     *   The function can perform actions, and/or return a value.\n     *\n     * #### Example:\n     * When no other url rule matches, manually trigger a transition to the `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   router.stateService.go('home');\n     * });\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   return { state: 'home' };\n     * });\n     * ```\n     *\n     * @param handler The url path to redirect to, or a function which returns the url path (or performs custom logic).\n     */\n    UrlRules.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n        this._sorted = false;\n    };\n    /**\n     * Remove a rule previously registered\n     *\n     * @param rule the matcher rule that was previously registered using [[rule]]\n     */\n    UrlRules.prototype.removeRule = function (rule) {\n        removeFrom(this._rules, rule);\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[urlRuleFactory]], or created manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRules.prototype.rule = function (rule) {\n        var _this = this;\n        if (!UrlRuleFactory.isUrlRule(rule))\n            throw new Error('invalid rule');\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /**\n     * Gets all registered rules\n     *\n     * @returns an array of all the registered rules\n     */\n    UrlRules.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.concat(this._otherwiseFn ? [this._otherwiseFn] : []);\n    };\n    /**\n     * Defines URL Rule priorities\n     *\n     * More than one rule ([[UrlRule]]) might match a given URL.\n     * This `compareFn` is used to sort the rules by priority.\n     * Higher priority rules should sort earlier.\n     *\n     * The [[defaultRuleSortFn]] is used by default.\n     *\n     * You only need to call this function once.\n     * The `compareFn` will be used to sort the rules as each is registered.\n     *\n     * If called without any parameter, it will re-sort the rules.\n     *\n     * ---\n     *\n     * Url rules may come from multiple sources: states's urls ([[StateDeclaration.url]]), [[when]], and [[rule]].\n     * Each rule has a (user-provided) [[UrlRule.priority]], a [[UrlRule.type]], and a [[UrlRule.$id]]\n     * The `$id` is is the order in which the rule was registered.\n     *\n     * The sort function should use these data, or data found on a specific type\n     * of [[UrlRule]] (such as [[StateRule.state]]), to order the rules as desired.\n     *\n     * #### Example:\n     * This compare function prioritizes rules by the order in which the rules were registered.\n     * A rule registered earlier has higher priority.\n     *\n     * ```js\n     * function compareFn(a, b) {\n     *   return a.$id - b.$id;\n     * }\n     * ```\n     *\n     * @param compareFn a function that compares to [[UrlRule]] objects.\n     *    The `compareFn` should abide by the `Array.sort` compare function rules.\n     *    Given two rules, `a` and `b`, return a negative number if `a` should be higher priority.\n     *    Return a positive number if `b` should be higher priority.\n     *    Return `0` if the rules are identical.\n     *\n     *    See the [mozilla reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description)\n     *    for details.\n     */\n    UrlRules.prototype.sort = function (compareFn) {\n        var sorted = this.stableSort(this._rules, (this._sortFn = compareFn || this._sortFn));\n        // precompute _sortGroup values and apply to each rule\n        var group = 0;\n        for (var i = 0; i < sorted.length; i++) {\n            sorted[i]._group = group;\n            if (i < sorted.length - 1 && this._sortFn(sorted[i], sorted[i + 1]) !== 0) {\n                group++;\n            }\n        }\n        this._rules = sorted;\n        this._sorted = true;\n    };\n    /** @hidden */\n    UrlRules.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    /** @hidden */\n    UrlRules.prototype.stableSort = function (arr, compareFn) {\n        var arrOfWrapper = arr.map(function (elem, idx) { return ({ elem: elem, idx: idx }); });\n        arrOfWrapper.sort(function (wrapperA, wrapperB) {\n            var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n            return cmpDiff === 0 ? wrapperA.idx - wrapperB.idx : cmpDiff;\n        });\n        return arrOfWrapper.map(function (wrapper) { return wrapper.elem; });\n    };\n    /**\n     * Registers a `matcher` and `handler` for custom URLs handling.\n     *\n     * The `matcher` can be:\n     *\n     * - a [[UrlMatcher]]: See: [[UrlMatcherFactory.compile]]\n     * - a `string`: The string is compiled to a [[UrlMatcher]]\n     * - a `RegExp`: The regexp is used to match the url.\n     *\n     * The `handler` can be:\n     *\n     * - a string: The url is redirected to the value of the string.\n     * - a function: The url is redirected to the return value of the function.\n     *\n     * ---\n     *\n     * When the `handler` is a `string` and the `matcher` is a `UrlMatcher` (or string), the redirect\n     * string is interpolated with parameter values.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(\"/foo/:param1\", \"/bar/:param1\")\n     * ```\n     *\n     * ---\n     *\n     * When the `handler` is a string and the `matcher` is a `RegExp`, the redirect string is\n     * interpolated with capture groups from the RegExp.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), \"/bar/$1\");\n     * ```\n     *\n     * ---\n     *\n     * When the handler is a function, it receives the matched value, the current URL, and the `UIRouter` object (See [[UrlRuleHandlerFn]]).\n     * The \"matched value\" differs based on the `matcher`.\n     * For [[UrlMatcher]]s, it will be the matched state params.\n     * For `RegExp`, it will be the match array from `regexp.exec()`.\n     *\n     * If the handler returns a string, the URL is redirected to the string.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), match => \"/bar/\" + match[1]);\n     * ```\n     *\n     * Note: the `handler` may also invoke arbitrary code, such as `$state.go()`\n     *\n     * @param matcher A pattern `string` to match, compiled as a [[UrlMatcher]], or a `RegExp`.\n     * @param handler The path to redirect to, or a function that returns the path.\n     * @param options `{ priority: number }`\n     *\n     * @return the registered [[UrlRule]]\n     */\n    UrlRules.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    return UrlRules;\n}());\nexport { UrlRules };\n//# sourceMappingURL=urlRules.js.map","/** @publicapi @module view */ /** */\nimport { equals, applyPairs, removeFrom, inArray, find } from '../common/common';\nimport { curry, prop } from '../common/hof';\nimport { isString, isArray } from '../common/predicates';\nimport { trace } from '../common/trace';\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = /** @class */ (function () {\n    /** @hidden */\n    function ViewService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this._uiViews = [];\n        /** @hidden */ this._viewConfigs = [];\n        /** @hidden */ this._viewConfigFactories = {};\n        /** @hidden */ this._listeners = [];\n        /** @internalapi */\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIView: function (id) { return find(_this._uiViews, function (view) { return _this.router.$id + \".\" + view.id === id; }); },\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n            _onSync: function (listener) {\n                _this._listeners.push(listener);\n                return function () { return removeFrom(_this._listeners, listener); };\n            },\n        };\n    }\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = ''; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split('@');\n        var uiViewName = viewAtContext[0] || '$default'; // default to unnamed view\n        var uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : '^'; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = ''; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchorState = uiViewContextAnchor.split('.').reduce(function (anchor, x) { return anchor.parent; }, context);\n            uiViewContextAnchor = anchorState.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /** @hidden */\n    ViewService.prototype._rootViewContext = function (context) {\n        return (this._rootContext = context || this._rootContext);\n    };\n    /** @hidden */\n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error('ViewService: No view config factory registered for type ' + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('<- Removing', viewConfig);\n        removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('-> Registering', viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) { return (context && context.parent ? stateDepth(context.parent) + 1 : 1); };\n            return uiView.fqn.split('.').length * 10000 + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return { uiView: uiView, viewConfig: matchingConfigs[0] };\n        };\n        var configureUIView = function (tuple) {\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(tuple.uiView) !== -1)\n                tuple.uiView.configUpdated(tuple.viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var uiViewTuples = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        var matchedViewConfigs = uiViewTuples.map(function (tuple) { return tuple.viewConfig; });\n        var unmatchedConfigTuples = this._viewConfigs\n            .filter(function (config) { return !inArray(matchedViewConfigs, config); })\n            .map(function (viewConfig) { return ({ uiView: undefined, viewConfig: viewConfig }); });\n        uiViewTuples.forEach(configureUIView);\n        var allTuples = uiViewTuples.concat(unmatchedConfigTuples);\n        this._listeners.forEach(function (cb) { return cb(allTuples); });\n        trace.traceViewSync(allTuples);\n    };\n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace.traceViewServiceUIViewEvent('-> Registering', uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace.traceViewServiceUIViewEvent('!!!! duplicate uiView named:', uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace.traceViewServiceUIViewEvent('Tried removing non-registered uiView', uiView);\n                return;\n            }\n            trace.traceViewServiceUIViewEvent('<- Deregistering', uiView);\n            removeFrom(uiViews)(uiView);\n        };\n    };\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(prop('fqn'));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(prop('$config')).map(prop('name'));\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split('.');\n        var uivSegments = uiView.fqn.split('.');\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = 1 - vcSegments.length || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join('.');\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\nexport { ViewService };\n//# sourceMappingURL=view.js.map","/** @publicapi @module core */ /** */\nimport { StateParams } from './params/stateParams';\nimport { Queue } from './common/queue';\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = /** @class */ (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\nexport { UIRouterGlobals };\n//# sourceMappingURL=globals.js.map","import { ParamTypes } from '../params';\nimport { isDefined, isString } from '../common';\n/**\n * An API to customize the URL behavior and retrieve URL configuration\n *\n * This API is used to customize the behavior of the URL.\n * This includes optional trailing slashes ([[strictMode]]), case sensitivity ([[caseInsensitive]]),\n * and custom parameter encoding (custom [[type]]).\n *\n * It also has information about the location (url) configuration such as [[port]] and [[baseHref]].\n * This information can be used to build absolute URLs, such as\n * `https://example.com:443/basepath/state/substate?param1=a#hashvalue`;\n *\n * This API is a property of [[UrlService]] as [[UrlService.config]].\n */\nvar UrlConfig = /** @class */ (function () {\n    /** @hidden */ function UrlConfig(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.paramTypes = new ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @internalapi */ this.dispose = function () { return _this.paramTypes.dispose(); };\n        // Delegate these calls to the current LocationConfig implementation\n        /**\n         * Gets the base Href, e.g., `http://localhost/approot/`\n         *\n         * @return the application's base href\n         */\n        this.baseHref = function () { return _this.router.locationConfig.baseHref(); };\n        /**\n         * Gets or sets the hashPrefix\n         *\n         * This only applies when not running in [[html5Mode]] (pushstate mode)\n         *\n         * If the current url is `http://localhost/app#!/uirouter/path/#anchor`, it returns `!` which is the prefix for the \"hashbang\" portion.\n         *\n         * @return the hash prefix\n         */\n        this.hashPrefix = function (newprefix) { return _this.router.locationConfig.hashPrefix(newprefix); };\n        /**\n         * Gets the host, e.g., `localhost`\n         *\n         * @return the protocol\n         */\n        this.host = function () { return _this.router.locationConfig.host(); };\n        /**\n         * Returns true when running in pushstate mode\n         *\n         * @return true when running in html5 mode (pushstate mode).\n         */\n        this.html5Mode = function () { return _this.router.locationConfig.html5Mode(); };\n        /**\n         * Gets the port, e.g., `80`\n         *\n         * @return the port number\n         */\n        this.port = function () { return _this.router.locationConfig.port(); };\n        /**\n         * Gets the protocol, e.g., `http`\n         *\n         * @return the protocol\n         */\n        this.protocol = function () { return _this.router.locationConfig.protocol(); };\n    }\n    /**\n     * Defines whether URL matching should be case sensitive (the default behavior), or not.\n     *\n     * #### Example:\n     * ```js\n     * // Allow case insensitive url matches\n     * urlService.config.caseInsensitive(true);\n     * ```\n     *\n     * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n     * @returns the current value of caseInsensitive\n     */\n    UrlConfig.prototype.caseInsensitive = function (value) {\n        return (this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive);\n    };\n    /**\n     * Sets the default behavior when generating or matching URLs with default parameter values.\n     *\n     * #### Example:\n     * ```js\n     * // Remove default parameter values from the url\n     * urlService.config.defaultSquashPolicy(true);\n     * ```\n     *\n     * @param value A string that defines the default parameter URL squashing behavior.\n     *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n     *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n     *      parameter is surrounded by slashes, squash (remove) one slash from the URL\n     *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n     *      the parameter value from the URL and replace it with this string.\n     * @returns the current value of defaultSquashPolicy\n     */\n    UrlConfig.prototype.defaultSquashPolicy = function (value) {\n        if (isDefined(value) && value !== true && value !== false && !isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return (this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy);\n    };\n    /**\n     * Defines whether URLs should match trailing slashes, or not (the default behavior).\n     *\n     * #### Example:\n     * ```js\n     * // Allow optional trailing slashes\n     * urlService.config.strictMode(false);\n     * ```\n     *\n     * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n     * @returns the current value of strictMode\n     */\n    UrlConfig.prototype.strictMode = function (value) {\n        return (this._isStrictMode = isDefined(value) ? value : this._isStrictMode);\n    };\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A custom parameter type can be used to generate URLs with typed parameters or custom encoding/decoding.\n     *\n     * #### Note: Register custom types *before using them* in a state definition.\n     *\n     * #### Example:\n     * ```js\n     * // Encode object parameter as JSON string\n     * urlService.config.type('myjson', {\n     *   encode: (obj) => JSON.stringify(obj),\n     *   decode: (str) => JSON.parse(str),\n     *   is: (val) => typeof(val) === 'object',\n     *   pattern: /[^/]+/,\n     *   equals: (a, b) => _.isEqual(a, b),\n     * });\n     * ```\n     *\n     * See [[ParamTypeDefinition]] for more examples\n     *\n     * @param name The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     */\n    UrlConfig.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !isDefined(definition) ? type : this;\n    };\n    return UrlConfig;\n}());\nexport { UrlConfig };\n//# sourceMappingURL=urlConfig.js.map","import { extend, is, isString, pattern } from '../common';\nimport { UrlRules } from './urlRules';\nimport { UrlConfig } from './urlConfig';\nimport { TargetState } from '../state';\n/** API for URL management */\nvar UrlService = /** @class */ (function () {\n    /** @hidden */\n    function UrlService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.interceptDeferred = false;\n        /**\n         * The nested [[UrlRules]] API for managing URL rules and rewrites\n         *\n         * See: [[UrlRules]] for details\n         */\n        this.rules = new UrlRules(this.router);\n        /**\n         * The nested [[UrlConfig]] API to configure the URL and retrieve URL information\n         *\n         * See: [[UrlConfig]] for details\n         */\n        this.config = new UrlConfig(this.router);\n        // Delegate these calls to the current LocationServices implementation\n        /**\n         * Gets the current url, or updates the url\n         *\n         * ### Getting the current URL\n         *\n         * When no arguments are passed, returns the current URL.\n         * The URL is normalized using the internal [[path]]/[[search]]/[[hash]] values.\n         *\n         * For example, the URL may be stored in the hash ([[HashLocationServices]]) or\n         * have a base HREF prepended ([[PushStateLocationServices]]).\n         *\n         * The raw URL in the browser might be:\n         *\n         * ```\n         * http://mysite.com/somepath/index.html#/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * or\n         *\n         * ```\n         * http://mysite.com/basepath/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * then this method returns:\n         *\n         * ```\n         * /internal/path/123?param1=foo#anchor\n         * ```\n         *\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(); // \"/some/path?query=value#anchor\"\n         * ```\n         *\n         * ### Updating the URL\n         *\n         * When `newurl` arguments is provided, changes the URL to reflect `newurl`\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(\"/some/path?query=value#anchor\", true);\n         * ```\n         *\n         * @param newurl The new value for the URL.\n         *               This url should reflect only the new internal [[path]], [[search]], and [[hash]] values.\n         *               It should not include the protocol, site, port, or base path of an absolute HREF.\n         * @param replace When true, replaces the current history entry (instead of appending it) with this new url\n         * @param state The history's state object, i.e., pushState (if the LocationServices implementation supports it)\n         *\n         * @return the url (after potentially being processed)\n         */\n        this.url = function (newurl, replace, state) {\n            return _this.router.locationService.url(newurl, replace, state);\n        };\n        /**\n         * Gets the path part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `/some/path`\n         *\n         * @return the path portion of the url\n         */\n        this.path = function () { return _this.router.locationService.path(); };\n        /**\n         * Gets the search part of the current url as an object\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `{ query: 'value' }`\n         *\n         * @return the search (query) portion of the url, as an object\n         */\n        this.search = function () { return _this.router.locationService.search(); };\n        /**\n         * Gets the hash part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `anchor`\n         *\n         * @return the hash (anchor) portion of the url\n         */\n        this.hash = function () { return _this.router.locationService.hash(); };\n        /**\n         * @internalapi\n         *\n         * Registers a low level url change handler\n         *\n         * Note: Because this is a low level handler, it's not recommended for general use.\n         *\n         * #### Example:\n         * ```js\n         * let deregisterFn = locationServices.onChange((evt) => console.log(\"url change\", evt));\n         * ```\n         *\n         * @param callback a function that will be called when the url is changing\n         * @return a function that de-registers the callback\n         */\n        this.onChange = function (callback) { return _this.router.locationService.onChange(callback); };\n    }\n    /** @hidden */\n    UrlService.prototype.dispose = function () {\n        this.listen(false);\n        this.rules.dispose();\n    };\n    /**\n     * Gets the current URL parts\n     *\n     * This method returns the different parts of the current URL (the [[path]], [[search]], and [[hash]]) as a [[UrlParts]] object.\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    /**\n     * Activates the best rule for the current URL\n     *\n     * Checks the current URL for a matching [[UrlRule]], then invokes that rule's handler.\n     * This method is called internally any time the URL has changed.\n     *\n     * This effectively activates the state (or redirect, etc) which matches the current URL.\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   // Find the matching URL and invoke the handler.\n     *   urlService.sync();\n     * });\n     * ```\n     */\n    UrlService.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var _a = this.router, urlService = _a.urlService, stateService = _a.stateService;\n        var url = { path: urlService.path(), search: urlService.search(), hash: urlService.hash() };\n        var best = this.match(url);\n        var applyResult = pattern([\n            [isString, function (newurl) { return urlService.url(newurl, true); }],\n            [TargetState.isDef, function (def) { return stateService.go(def.state, def.params, def.options); }],\n            [is(TargetState), function (target) { return stateService.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, this.router));\n    };\n    /**\n     * Starts or stops listening for URL changes\n     *\n     * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n     * This causes UI-Router to start listening for changes to the URL, if it wasn't already listening.\n     *\n     * If called with `false`, UI-Router will stop listening (call listen(true) to start listening again).\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   // Start responding to URL changes\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param enabled `true` or `false` to start or stop listening to URL changes\n     */\n    UrlService.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopListeningFn && this._stopListeningFn();\n            delete this._stopListeningFn;\n        }\n        else {\n            return (this._stopListeningFn = this._stopListeningFn || this.router.urlService.onChange(function (evt) { return _this.sync(evt); }));\n        }\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * // Prevent UI-Router from automatically intercepting URL changes when it starts;\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlService.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    /**\n     * Matches a URL\n     *\n     * Given a URL (as a [[UrlParts]] object), check all rules and determine the best matching rule.\n     * Return the result as a [[MatchResult]].\n     */\n    UrlService.prototype.match = function (url) {\n        var _this = this;\n        url = extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules.rules();\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this.router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && best.rule._group !== rules[i]._group)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = !best || (current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    return UrlService;\n}());\nexport { UrlService };\n//# sourceMappingURL=urlService.js.map","/** @publicapi @module core */ /** */\nimport { UrlMatcherFactory } from './url/urlMatcherFactory';\nimport { UrlRouter } from './url/urlRouter';\nimport { TransitionService } from './transition/transitionService';\nimport { ViewService } from './view/view';\nimport { StateRegistry } from './state/stateRegistry';\nimport { StateService } from './state/stateService';\nimport { UIRouterGlobals } from './globals';\nimport { values, removeFrom } from './common/common';\nimport { isFunction } from './common/predicates';\nimport { UrlService } from './url/urlService';\nimport { trace } from './common/trace';\nimport { makeStub } from './common';\n/** @hidden */\nvar _routerInstance = 0;\n/** @hidden */\nvar locSvcFns = ['url', 'path', 'search', 'hash', 'onChange'];\n/** @hidden */\nvar locCfgFns = ['port', 'protocol', 'host', 'baseHref', 'html5Mode', 'hashPrefix'];\n/** @hidden */\nvar locationServiceStub = makeStub('LocationServices', locSvcFns);\n/** @hidden */\nvar locationConfigStub = makeStub('LocationConfig', locCfgFns);\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = /** @class */ (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new ViewService(this);\n        /** Global router state */\n        this.globals = new UIRouterGlobals();\n        /** Provides services related to Transitions */\n        this.transitionService = new TransitionService(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new UrlMatcherFactory(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new UrlRouter(this);\n        /** Provides services related to the URL */\n        this.urlService = new UrlService(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new StateService(this);\n        /** @hidden plugin instances are registered here */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlService);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error('Required property `name` missing on plugin: ' + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return (this._plugins[pluginInstance.name] = pluginInstance);\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : values(this._plugins);\n    };\n    return UIRouter;\n}());\nexport { UIRouter };\n//# sourceMappingURL=router.js.map","/** @internalapi @module hooks */ /** */\nimport { Transition } from '../transition/transition';\nimport { UIRouter } from '../router';\nimport { Resolvable } from '../resolve';\nimport { inArray, uniqR, unnestR, values } from '../common';\nfunction addCoreResolvables(trans) {\n    trans.addResolvable(Resolvable.fromData(UIRouter, trans.router), '');\n    trans.addResolvable(Resolvable.fromData(Transition, trans), '');\n    trans.addResolvable(Resolvable.fromData('$transition$', trans), '');\n    trans.addResolvable(Resolvable.fromData('$stateParams', trans.params()), '');\n    trans.entering().forEach(function (state) {\n        trans.addResolvable(Resolvable.fromData('$state$', state), state);\n    });\n}\nexport var registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\nvar TRANSITION_TOKENS = ['$transition$', Transition];\nvar isTransition = inArray(TRANSITION_TOKENS);\n// References to Transition in the treeChanges pathnodes makes all\n// previous Transitions reachable in memory, causing a memory leak\n// This function removes resolves for '$transition$' and `Transition` from the treeChanges.\n// Do not use this on current transitions, only on old ones.\nexport var treeChangesCleanup = function (trans) {\n    var nodes = values(trans.treeChanges())\n        .reduce(unnestR, [])\n        .reduce(uniqR, []);\n    // If the resolvable is a Transition, return a new resolvable with null data\n    var replaceTransitionWithNull = function (r) {\n        return isTransition(r.token) ? Resolvable.fromData(r.token, null) : r;\n    };\n    nodes.forEach(function (node) {\n        node.resolvables = node.resolvables.map(replaceTransitionWithNull);\n    });\n};\n//# sourceMappingURL=coreResolvables.js.map","/** @internalapi @module hooks */ /** */\nimport { isString, isFunction } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { TargetState } from '../state/targetState';\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof TargetState)\n            return result;\n        if (isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (isFunction(redirect)) {\n        return services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexport var registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map","/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexport var registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexport var registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexport var registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map","/** @internalapi @module hooks */ /** */\nimport { noop } from '../common/common';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { val } from '../common/hof';\nexport var RESOLVE_HOOK_PRIORITY = 1000;\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath, { priority: 1000 });`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('EAGER', trans).then(noop);\n};\nexport var registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState, { priority: 1000 });`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath('LAZY', trans)\n        .then(noop);\n};\nexport var registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: val(true) }, lazyResolveState, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves any dynamically added (LAZY or EAGER) Resolvables.\n *\n * Registered using `transitionService.onFinish({}, eagerResolvePath, { priority: 1000 });`\n *\n * After all entering states have been entered, this hook resolves any remaining Resolvables.\n * These are typically dynamic resolves which were added by some Transition Hook using [[Transition.addResolvable]].\n *\n * See [[StateDeclaration.resolve]]\n */\nvar resolveRemaining = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('LAZY', trans).then(noop);\n};\nexport var registerResolveRemaining = function (transitionService) {\n    return transitionService.onFinish({}, resolveRemaining, { priority: RESOLVE_HOOK_PRIORITY });\n};\n//# sourceMappingURL=resolve.js.map","/** @internalapi @module hooks */ /** */\nimport { noop } from '../common/common';\nimport { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = services.$q;\n    var enteringViews = transition.views('entering');\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(noop);\n};\nexport var registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views('entering');\n    var exitingViews = transition.views('exiting');\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexport var registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map","import { copy } from '../common/common';\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nexport var registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n//# sourceMappingURL=updateGlobals.js.map","/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexport var registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map","import { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === 'STATE') {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition\n        .entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return services.$q.all(promises).then(retryTransition);\n};\nexport var registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nexport function lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] = services.$q\n            .when(lazyLoadFn(transition, state))\n            .then(updateStateRegistry)\n            .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (_state) { return transition.router.stateRegistry.register(_state); });\n        }\n        return result;\n    }\n    return promise;\n}\n//# sourceMappingURL=lazyLoad.js.map","import { TransitionHook } from './transitionHook';\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = /** @class */ (function () {\n    /* tslint:disable:no-inferrable-types */\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\nexport { TransitionEventType };\n//# sourceMappingURL=transitionEventType.js.map","/** @internalapi @module hooks */ /** */\nimport { trace } from '../common/trace';\nimport { Rejection } from '../transition/rejectFactory';\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return Rejection.ignored().toPromise();\n}\nexport var registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n//# sourceMappingURL=ignoredTransition.js.map","/** @internalapi @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error().toString());\n    }\n}\nexport var registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n//# sourceMappingURL=invalidTransition.js.map","/** @publicapi @module transition */ /** */\nimport { TransitionHookScope, TransitionHookPhase, } from './interface';\nimport { Transition } from './transition';\nimport { makeEvent } from './hookRegistry';\nimport { registerAddCoreResolvables, treeChangesCleanup } from '../hooks/coreResolvables';\nimport { registerRedirectToHook } from '../hooks/redirectTo';\nimport { registerOnExitHook, registerOnRetainHook, registerOnEnterHook } from '../hooks/onEnterExitRetain';\nimport { registerEagerResolvePath, registerLazyResolveState, registerResolveRemaining } from '../hooks/resolve';\nimport { registerLoadEnteringViews, registerActivateViews } from '../hooks/views';\nimport { registerUpdateGlobalState } from '../hooks/updateGlobals';\nimport { registerUpdateUrl } from '../hooks/url';\nimport { registerLazyLoadHook } from '../hooks/lazyLoad';\nimport { TransitionEventType } from './transitionEventType';\nimport { TransitionHook } from './transitionHook';\nimport { isDefined } from '../common/predicates';\nimport { removeFrom, values, createProxyFunctions } from '../common/common';\nimport { val } from '../common/hof';\nimport { registerIgnoredTransitionHook } from '../hooks/ignoredTransition';\nimport { registerInvalidTransitionHook } from '../hooks/invalidTransition';\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexport var defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: 'unknown',\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = /** @class */ (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = (createProxyFunctions(val(this), {}, val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]));\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n        _router.globals.successfulTransitions.onEvict(treeChangesCleanup);\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        values(this._registeredHooks).forEach(function (hooksArray) {\n            return hooksArray.forEach(function (hook) {\n                hook._deregistered = true;\n                removeFrom(hooksArray, hook);\n            });\n        });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = TransitionHookPhase;\n        var TH = TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var SYNCHRONOUS = true;\n        this._defineEvent('onCreate', Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent('onBefore', Phase.BEFORE, 0, paths.to);\n        this._defineEvent('onStart', Phase.RUN, 0, paths.to);\n        this._defineEvent('onExit', Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent('onRetain', Phase.RUN, 200, paths.retained);\n        this._defineEvent('onEnter', Phase.RUN, 300, paths.entering);\n        this._defineEvent('onFinish', Phase.RUN, 400, paths.to);\n        this._defineEvent('onSuccess', Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent('onError', Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = TransitionHookScope.STATE, TRANSITION = TransitionHookScope.TRANSITION;\n        this._definePathType('to', TRANSITION);\n        this._definePathType('from', TRANSITION);\n        this._definePathType('exiting', STATE);\n        this._definePathType('retained', STATE);\n        this._definePathType('entering', STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        makeEvent(this, this, eventType);\n    };\n    /** @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = isDefined(phase)\n            ? this._eventTypes.filter(function (type) { return type.hookPhase === phase; })\n            : this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** * @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = registerAddCoreResolvables(this);\n        fns.ignored = registerIgnoredTransitionHook(this);\n        fns.invalid = registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = registerOnExitHook(this);\n        fns.onRetain = registerOnRetainHook(this);\n        fns.onEnter = registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = registerEagerResolvePath(this);\n        fns.lazyResolve = registerLazyResolveState(this);\n        fns.resolveAll = registerResolveRemaining(this);\n        // Wire up the View management hooks\n        fns.loadViews = registerLoadEnteringViews(this);\n        fns.activateViews = registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\nexport { TransitionService };\n//# sourceMappingURL=transitionService.js.map","/** @publicapi @module state */ /** */\nimport { createProxyFunctions, defaults, extend, inArray, noop, removeFrom, silenceUncaughtInPromise, silentRejection, } from '../common/common';\nimport { isDefined, isObject, isString } from '../common/predicates';\nimport { Queue } from '../common/queue';\nimport { services } from '../common/coreservices';\nimport { PathUtils } from '../path/pathUtils';\nimport { PathNode } from '../path/pathNode';\nimport { defaultTransOpts } from '../transition/transitionService';\nimport { Rejection, RejectType } from '../transition/rejectFactory';\nimport { TargetState } from './targetState';\nimport { Param } from '../params/param';\nimport { Glob } from '../common/glob';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { lazyLoadState } from '../hooks/lazyLoad';\nimport { not, val } from '../common/hof';\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = /** @class */ (function () {\n    /** @internalapi */\n    function StateService(/** @hidden */ router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n        createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () {\n            return this.router.globals.transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () {\n            return this.router.globals.params;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () {\n            return this.router.globals.current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () {\n            return this.router.globals.$current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = PathUtils.makeTargetState(this.router.stateRegistry, fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new Queue(this.invalidCallbacks.slice());\n        var injector = new ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState =\n            options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        return new TargetState(this.router.stateRegistry, identifier, params, options);\n    };\n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = defaults(options, defaultTransOpts);\n        var getCurrent = function () { return globals.transition; };\n        options = extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (trans) { return function (error) {\n            if (error instanceof Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId <= trans.$id;\n                if (error.type === RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = trans.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return extend(transitionToPromise, { transition: transition });\n    };\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var glob = isString(stateOrName) && Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!isDefined(state))\n            return undefined;\n        if (!isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = state && options.lossy ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, { absolute: options.absolute });\n    };\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return (this._defaultErrorHandler = handler || this._defaultErrorHandler);\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error('Can not lazy load ' + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = PathUtils.makeTargetState(this.router.stateRegistry, currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\nexport { StateService };\n//# sourceMappingURL=stateService.js.map","/** @internalapi @module vanilla */ /** */\nimport { isArray, isObject } from '../common/index';\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nexport var $q = {\n    /** Normalizes a value as a promise */\n    when: function (val) { return new Promise(function (resolve, reject) { return resolve(val); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val) {\n        return new Promise(function (resolve, reject) {\n            reject(val);\n        });\n    },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises).map(function (key) { return promises[key].then(function (val) { return ({ key: key, val: val }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return $q.all(chain).then(function (values) {\n                return values.reduce(function (acc, tuple) {\n                    acc[tuple.key] = tuple.val;\n                    return acc;\n                }, {});\n            });\n        }\n    },\n};\n//# sourceMappingURL=q.js.map","/** @internalapi @module vanilla */ /** */\nimport { extend, assertPredicate, isFunction, isArray, isInjectable, } from '../common/index';\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nexport var $injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return $injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all = extend({}, globals, locals || {});\n        var params = $injector.annotate(fn);\n        var ensureExist = assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    },\n};\n//# sourceMappingURL=injector.js.map","/** @internalapi @module vanilla */ /** */\nimport { identity, unnestR, isArray, splitEqual, splitHash, splitQuery, } from '../common';\nexport var keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val;\n    }\n    else if (isArray(accum[key])) {\n        accum[key].push(val);\n    }\n    else {\n        accum[key] = [accum[key], val];\n    }\n    return accum;\n};\nexport var getParams = function (queryString) {\n    return queryString\n        .split('&')\n        .filter(identity)\n        .map(splitEqual)\n        .reduce(keyValsToObjectR, {});\n};\nexport function parseUrl(url) {\n    var orEmptyString = function (x) { return x || ''; };\n    var _a = splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nexport var buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject)\n        .map(function (key) {\n        var param = searchObject[key];\n        var vals = isArray(param) ? param : [param];\n        return vals.map(function (val) { return key + '=' + val; });\n    })\n        .reduce(unnestR, [])\n        .join('&');\n    return path + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n};\nexport function locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (uiRouter) {\n        var service = (uiRouter.locationService = new serviceClass(uiRouter));\n        var configuration = (uiRouter.locationConfig = new configurationClass(uiRouter, isHtml5));\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\n//# sourceMappingURL=utils.js.map","/** @internalapi @module vanilla */ /** */\nimport { deregAll, isDefined, removeFrom, root } from '../common';\nimport { buildUrl, getParams, parseUrl } from './utils';\n/** A base `LocationServices` */\nvar BaseLocationServices = /** @class */ (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listeners = [];\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this.hash = function () { return parseUrl(_this._get()).hash; };\n        this.path = function () { return parseUrl(_this._get()).path; };\n        this.search = function () { return getParams(parseUrl(_this._get()).search); };\n        this._location = root.location;\n        this._history = root.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                this._listeners.forEach(function (cb) { return cb({ url: url }); });\n            }\n        }\n        return buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\nexport { BaseLocationServices };\n//# sourceMappingURL=baseLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @internalapi @module vanilla */ /** */\nimport { root, trimHashVal } from '../common';\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = /** @class */ (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        root.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(BaseLocationServices));\nexport { HashLocationService };\n//# sourceMappingURL=hashLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @internalapi @module vanilla */ /** */\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = /** @class */ (function (_super) {\n    __extends(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(BaseLocationServices));\nexport { MemoryLocationService };\n//# sourceMappingURL=memoryLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseLocationServices } from './baseLocationService';\nimport { root, splitHash, splitQuery, stripLastPathElement } from '../common';\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = /** @class */ (function (_super) {\n    __extends(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        root.addEventListener('popstate', _this._listener, false);\n        return _this;\n    }\n    /**\n     * Gets the base prefix without:\n     * - trailing slash\n     * - trailing filename\n     * - protocol and hostname\n     *\n     * If <base href='/base/'>, this returns '/base'.\n     * If <base href='/foo/base/'>, this returns '/foo/base'.\n     * If <base href='/base/index.html'>, this returns '/base'.\n     * If <base href='http://localhost:8080/base/index.html'>, this returns '/base'.\n     * If <base href='/base'>, this returns ''.\n     * If <base href='http://localhost:8080'>, this returns ''.\n     * If <base href='http://localhost:8080/'>, this returns ''.\n     *\n     * See: https://html.spec.whatwg.org/dev/semantics.html#the-base-element\n     */\n    PushStateLocationService.prototype._getBasePrefix = function () {\n        return stripLastPathElement(this._config.baseHref());\n    };\n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = splitQuery(search)[1]; // strip ? if found\n        hash = splitHash(hash)[1]; // strip # if found\n        var basePrefix = this._getBasePrefix();\n        var exactBaseHrefMatch = pathname === this._config.baseHref();\n        var startsWithBase = pathname.substr(0, basePrefix.length) === basePrefix;\n        pathname = exactBaseHrefMatch ? '/' : startsWithBase ? pathname.substring(basePrefix.length) : pathname;\n        return pathname + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var basePrefix = this._getBasePrefix();\n        var slash = url && url[0] !== '/' ? '/' : '';\n        var fullUrl = url === '' || url === '/' ? this._config.baseHref() : basePrefix + slash + url;\n        if (replace) {\n            this._history.replaceState(state, title, fullUrl);\n        }\n        else {\n            this._history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('popstate', this._listener);\n    };\n    return PushStateLocationService;\n}(BaseLocationServices));\nexport { PushStateLocationService };\n//# sourceMappingURL=pushStateLocationService.js.map","import { isDefined } from '../common/predicates';\nimport { noop } from '../common/common';\n/** A `LocationConfig` mock that gets/sets all config from an in-memory object */\nvar MemoryLocationConfig = /** @class */ (function () {\n    function MemoryLocationConfig() {\n        var _this = this;\n        this.dispose = noop;\n        this._baseHref = '';\n        this._port = 80;\n        this._protocol = 'http';\n        this._host = 'localhost';\n        this._hashPrefix = '';\n        this.port = function () { return _this._port; };\n        this.protocol = function () { return _this._protocol; };\n        this.host = function () { return _this._host; };\n        this.baseHref = function () { return _this._baseHref; };\n        this.html5Mode = function () { return false; };\n        this.hashPrefix = function (newval) { return (isDefined(newval) ? (_this._hashPrefix = newval) : _this._hashPrefix); };\n    }\n    return MemoryLocationConfig;\n}());\nexport { MemoryLocationConfig };\n//# sourceMappingURL=memoryLocationConfig.js.map","/** @internalapi @module vanilla */\n/** */\nimport { isDefined, isUndefined } from '../common/predicates';\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = /** @class */ (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = '';\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.hostname;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return isDefined(newprefix) ? (this._hashPrefix = newprefix) : this._hashPrefix;\n    };\n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        if (isDefined(href))\n            this._baseHref = href;\n        if (isUndefined(this._baseHref))\n            this._baseHref = this.getBaseHref();\n        return this._baseHref;\n    };\n    BrowserLocationConfig.prototype.getBaseHref = function () {\n        var baseTag = document.getElementsByTagName('base')[0];\n        if (baseTag && baseTag.href) {\n            return baseTag.href.replace(/^([^/:]*:)?\\/\\/[^/]*/, '');\n        }\n        return this._isHtml5 ? '/' : location.pathname || '/';\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\nexport { BrowserLocationConfig };\n//# sourceMappingURL=browserLocationConfig.js.map","/** @internalapi @module vanilla */ /** */\nimport { BrowserLocationConfig } from './browserLocationConfig';\nimport { HashLocationService } from './hashLocationService';\nimport { locationPluginFactory } from './utils';\nimport { PushStateLocationService } from './pushStateLocationService';\nimport { MemoryLocationService } from './memoryLocationService';\nimport { MemoryLocationConfig } from './memoryLocationConfig';\nimport { $injector } from './injector';\nimport { $q } from './q';\nimport { services } from '../common/coreservices';\nexport function servicesPlugin(router) {\n    services.$injector = $injector;\n    services.$q = $q;\n    return { name: 'vanilla.services', $q: $q, $injector: $injector, dispose: function () { return null; } };\n}\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexport var hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexport var pushStateLocationPlugin = locationPluginFactory('vanilla.pushStateLocation', true, PushStateLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexport var memoryLocationPlugin = locationPluginFactory('vanilla.memoryLocation', false, MemoryLocationService, MemoryLocationConfig);\n//# sourceMappingURL=plugins.js.map","/**\n * # Core classes and interfaces\n *\n * The classes and interfaces that are core to ui-router and do not belong\n * to a more specific subsystem (such as resolve).\n *\n * @preferred @publicapi @module core\n */ /** */\n/** @internalapi */\nvar UIRouterPluginBase = /** @class */ (function () {\n    function UIRouterPluginBase() {\n    }\n    UIRouterPluginBase.prototype.dispose = function (router) { };\n    return UIRouterPluginBase;\n}());\nexport { UIRouterPluginBase };\n//# sourceMappingURL=interface.js.map","import { pick, forEach, tail, extend, isArray, isInjectable, isDefined, isString, services, trace, ViewService, ResolveContext, Resolvable, } from '@uirouter/core';\n/** @internalapi */\nexport function getNg1ViewConfigFactory() {\n    var templateFactory = null;\n    return function (path, view) {\n        templateFactory = templateFactory || services.$injector.get('$templateFactory');\n        return [new Ng1ViewConfig(path, view, templateFactory)];\n    };\n}\n/** @internalapi */\nvar hasAnyKey = function (keys, obj) { return keys.reduce(function (acc, key) { return acc || isDefined(obj[key]); }, false); };\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n *\n * @internalapi\n */\nexport function ng1ViewsBuilder(state) {\n    // Do not process root state\n    if (!state.parent)\n        return {};\n    var tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'], ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'], compKeys = ['component', 'bindings', 'componentProvider'], nonCompKeys = tplKeys.concat(ctrlKeys), allViewKeys = compKeys.concat(nonCompKeys);\n    // Do not allow a state to have both state-level props and also a `views: {}` property.\n    // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n    // However, the `$default` approach should not be mixed with a separate `views: ` block.\n    if (isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n        throw new Error(\"State '\" + state.name + \"' has a 'views' object. \" +\n            \"It cannot also have \\\"view properties\\\" at the state level.  \" +\n            \"Move the following properties into a view (in the 'views' object): \" +\n            (\" \" + allViewKeys.filter(function (key) { return isDefined(state[key]); }).join(', ')));\n    }\n    var views = {}, viewsObject = state.views || { $default: pick(state, allViewKeys) };\n    forEach(viewsObject, function (config, name) {\n        // Account for views: { \"\": { template... } }\n        name = name || '$default';\n        // Account for views: { header: \"headerComponent\" }\n        if (isString(config))\n            config = { component: config };\n        // Make a shallow copy of the config object\n        config = extend({}, config);\n        // Do not allow a view to mix props for component-style view with props for template/controller-style view\n        if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n            throw new Error(\"Cannot combine: \" + compKeys.join('|') + \" with: \" + nonCompKeys.join('|') + \" in stateview: '\" + name + \"@\" + state.name + \"'\");\n        }\n        config.resolveAs = config.resolveAs || '$resolve';\n        config.$type = 'ng1';\n        config.$context = state;\n        config.$name = name;\n        var normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n        config.$uiViewName = normalized.uiViewName;\n        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n        views[name] = config;\n    });\n    return views;\n}\n/** @hidden */\nvar id = 0;\n/** @internalapi */\nvar Ng1ViewConfig = /** @class */ (function () {\n    function Ng1ViewConfig(path, viewDecl, factory) {\n        var _this = this;\n        this.path = path;\n        this.viewDecl = viewDecl;\n        this.factory = factory;\n        this.$id = id++;\n        this.loaded = false;\n        this.getTemplate = function (uiView, context) {\n            return _this.component\n                ? _this.factory.makeComponentTemplate(uiView, context, _this.component, _this.viewDecl.bindings)\n                : _this.template;\n        };\n    }\n    Ng1ViewConfig.prototype.load = function () {\n        var _this = this;\n        var $q = services.$q;\n        var context = new ResolveContext(this.path);\n        var params = this.path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {});\n        var promises = {\n            template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\n            controller: $q.when(this.getController(context)),\n        };\n        return $q.all(promises).then(function (results) {\n            trace.traceViewServiceEvent('Loaded', _this);\n            _this.controller = results.controller;\n            extend(_this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n            return _this;\n        });\n    };\n    /**\n     * Gets the controller for a view configuration.\n     *\n     * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n     */\n    Ng1ViewConfig.prototype.getController = function (context) {\n        var provider = this.viewDecl.controllerProvider;\n        if (!isInjectable(provider))\n            return this.viewDecl.controller;\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    return Ng1ViewConfig;\n}());\nexport { Ng1ViewConfig };\n//# sourceMappingURL=views.js.map","/** @publicapi @module view */ /** */\nimport { ng as angular } from './angular';\nimport { isArray, isDefined, isFunction, isObject, services, tail, kebobString, unnestR, Resolvable, } from '@uirouter/core';\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nvar TemplateFactory = /** @class */ (function () {\n    function TemplateFactory() {\n        var _this = this;\n        /** @hidden */ this._useHttp = angular.version.minor < 3;\n        /** @hidden */ this.$get = [\n            '$http',\n            '$templateCache',\n            '$injector',\n            function ($http, $templateCache, $injector) {\n                _this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\n                _this.$http = $http;\n                _this.$templateCache = $templateCache;\n                return _this;\n            },\n        ];\n    }\n    /** @hidden */\n    TemplateFactory.prototype.useHttpService = function (value) {\n        this._useHttp = value;\n    };\n    /**\n     * Creates a template from a configuration object.\n     *\n     * @param config Configuration object for which to load a template.\n     * The following properties are search in the specified order, and the first one\n     * that is defined is used to create the template:\n     *\n     * @param params  Parameters to pass to the template function.\n     * @param context The resolve context associated with the template's view\n     *\n     * @return {string|object}  The template html as a string, or a promise for\n     * that string,or `null` if no template is configured.\n     */\n    TemplateFactory.prototype.fromConfig = function (config, params, context) {\n        var defaultTemplate = '<ui-view></ui-view>';\n        var asTemplate = function (result) { return services.$q.when(result).then(function (str) { return ({ template: str }); }); };\n        var asComponent = function (result) { return services.$q.when(result).then(function (str) { return ({ component: str }); }); };\n        return isDefined(config.template)\n            ? asTemplate(this.fromString(config.template, params))\n            : isDefined(config.templateUrl)\n                ? asTemplate(this.fromUrl(config.templateUrl, params))\n                : isDefined(config.templateProvider)\n                    ? asTemplate(this.fromProvider(config.templateProvider, params, context))\n                    : isDefined(config.component)\n                        ? asComponent(config.component)\n                        : isDefined(config.componentProvider)\n                            ? asComponent(this.fromComponentProvider(config.componentProvider, params, context))\n                            : asTemplate(defaultTemplate);\n    };\n    /**\n     * Creates a template from a string or a function returning a string.\n     *\n     * @param template html template as a string or function that returns an html template as a string.\n     * @param params Parameters to pass to the template function.\n     *\n     * @return {string|object} The template html as a string, or a promise for that\n     * string.\n     */\n    TemplateFactory.prototype.fromString = function (template, params) {\n        return isFunction(template) ? template(params) : template;\n    };\n    /**\n     * Loads a template from the a URL via `$http` and `$templateCache`.\n     *\n     * @param {string|Function} url url of the template to load, or a function\n     * that returns a url.\n     * @param {Object} params Parameters to pass to the url function.\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromUrl = function (url, params) {\n        if (isFunction(url))\n            url = url(params);\n        if (url == null)\n            return null;\n        if (this._useHttp) {\n            return this.$http\n                .get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n                .then(function (response) {\n                return response.data;\n            });\n        }\n        return this.$templateRequest(url);\n    };\n    /**\n     * Creates a template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromProvider = function (provider, params, context) {\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    /**\n     * Creates a component's template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.fromComponentProvider = function (provider, params, context) {\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    /**\n     * Creates a template from a component's name\n     *\n     * This implements route-to-component.\n     * It works by retrieving the component (directive) metadata from the injector.\n     * It analyses the component's bindings, then constructs a template that instantiates the component.\n     * The template wires input and output bindings to resolves or from the parent component.\n     *\n     * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n     * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n     * @param component {string} Component's name in camel case.\n     * @param bindings An object defining the component's bindings: {foo: '<'}\n     * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.makeComponentTemplate = function (uiView, context, component, bindings) {\n        bindings = bindings || {};\n        // Bind once prefix\n        var prefix = angular.version.minor >= 3 ? '::' : '';\n        // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n        var kebob = function (camelCase) {\n            var kebobed = kebobString(camelCase);\n            return /^(x|data)-/.exec(kebobed) ? \"x-\" + kebobed : kebobed;\n        };\n        var attributeTpl = function (input) {\n            var name = input.name, type = input.type;\n            var attrName = kebob(name);\n            // If the ui-view has an attribute which matches a binding on the routed component\n            // then pass that attribute through to the routed component template.\n            // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n            if (uiView.attr(attrName) && !bindings[name])\n                return attrName + \"='\" + uiView.attr(attrName) + \"'\";\n            var resolveName = bindings[name] || name;\n            // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n            // some-attr=\"{{ ::$resolve.someResolveName }}\"\n            if (type === '@')\n                return attrName + \"='{{\" + prefix + \"$resolve.\" + resolveName + \"}}'\";\n            // Wire \"&\" callbacks to resolves that return a callback function\n            // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n            // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n            if (type === '&') {\n                var res = context.getResolvable(resolveName);\n                var fn = res && res.data;\n                var args = (fn && services.$injector.annotate(fn)) || [];\n                // account for array style injection, i.e., ['foo', function(foo) {}]\n                var arrayIdxStr = isArray(fn) ? \"[\" + (fn.length - 1) + \"]\" : '';\n                return attrName + \"='$resolve.\" + resolveName + arrayIdxStr + \"(\" + args.join(',') + \")'\";\n            }\n            // some-attr=\"::$resolve.someResolveName\"\n            return attrName + \"='\" + prefix + \"$resolve.\" + resolveName + \"'\";\n        };\n        var attrs = getComponentBindings(component)\n            .map(attributeTpl)\n            .join(' ');\n        var kebobName = kebob(component);\n        return \"<\" + kebobName + \" \" + attrs + \"></\" + kebobName + \">\";\n    };\n    return TemplateFactory;\n}());\nexport { TemplateFactory };\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\nfunction getComponentBindings(name) {\n    var cmpDefs = services.$injector.get(name + 'Directive'); // could be multiple\n    if (!cmpDefs || !cmpDefs.length)\n        throw new Error(\"Unable to find component named '\" + name + \"'\");\n    return cmpDefs.map(getBindings).reduce(unnestR, []);\n}\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nvar getBindings = function (def) {\n    if (isObject(def.bindToController))\n        return scopeBindings(def.bindToController);\n    return scopeBindings(def.scope);\n};\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nvar scopeBindings = function (bindingsObj) {\n    return Object.keys(bindingsObj || {})\n        // [ 'input', [ '=foo', '=', 'foo' ] ]\n        .map(function (key) { return [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]; })\n        // skip malformed values\n        .filter(function (tuple) { return isDefined(tuple) && isArray(tuple[1]); })\n        // { name: ('foo' || 'input'), type: '=' }\n        .map(function (tuple) { return ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] }); });\n};\n//# sourceMappingURL=templateFactory.js.map","/** @publicapi @module ng1 */ /** */\nimport { val, isObject, createProxyFunctions, } from '@uirouter/core';\n/**\n * The Angular 1 `StateProvider`\n *\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nvar StateProvider = /** @class */ (function () {\n    function StateProvider(stateRegistry, stateService) {\n        this.stateRegistry = stateRegistry;\n        this.stateService = stateService;\n        createProxyFunctions(val(StateProvider.prototype), this, val(this));\n    }\n    /**\n     * Decorates states when they are registered\n     *\n     * Allows you to extend (carefully) or override (at your own peril) the\n     * `stateBuilder` object used internally by [[StateRegistry]].\n     * This can be used to add custom functionality to ui-router,\n     * for example inferring templateUrl based on the state name.\n     *\n     * When passing only a name, it returns the current (original or decorated) builder\n     * function that matches `name`.\n     *\n     * The builder functions that can be decorated are listed below. Though not all\n     * necessarily have a good use case for decoration, that is up to you to decide.\n     *\n     * In addition, users can attach custom decorators, which will generate new\n     * properties within the state's internal definition. There is currently no clear\n     * use-case for this beyond accessing internal states (i.e. $state.$current),\n     * however, expect this to become increasingly relevant as we introduce additional\n     * meta-programming features.\n     *\n     * **Warning**: Decorators should not be interdependent because the order of\n     * execution of the builder functions in non-deterministic. Builder functions\n     * should only be dependent on the state definition object and super function.\n     *\n     *\n     * Existing builder functions and current return values:\n     *\n     * - **parent** `{object}` - returns the parent state object.\n     * - **data** `{object}` - returns state data, including any inherited data that is not\n     *   overridden by own values (if any).\n     * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n     *   or `null`.\n     * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n     *   navigable).\n     * - **params** `{object}` - returns an array of state params that are ensured to\n     *   be a super-set of parent's params.\n     * - **views** `{object}` - returns a views object where each key is an absolute view\n     *   name (i.e. \"viewName@stateName\") and each value is the config object\n     *   (template, controller) for the view. Even when you don't use the views object\n     *   explicitly on a state config, one is still created for you internally.\n     *   So by decorating this builder function you have access to decorating template\n     *   and controller properties.\n     * - **ownParams** `{object}` - returns an array of params that belong to the state,\n     *   not including any params defined by ancestor states.\n     * - **path** `{string}` - returns the full path from the root down to this state.\n     *   Needed for state activation.\n     * - **includes** `{object}` - returns an object that includes every state that\n     *   would pass a `$state.includes()` test.\n     *\n     * #### Example:\n     * Override the internal 'views' builder with a function that takes the state\n     * definition, and a reference to the internal function being overridden:\n     * ```js\n     * $stateProvider.decorator('views', function (state, parent) {\n     *   let result = {},\n     *       views = parent(state);\n     *\n     *   angular.forEach(views, function (config, name) {\n     *     let autoName = (state.name + '.' + name).replace('.', '/');\n     *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n     *     result[name] = config;\n     *   });\n     *   return result;\n     * });\n     *\n     * $stateProvider.state('home', {\n     *   views: {\n     *     'contact.list': { controller: 'ListController' },\n     *     'contact.item': { controller: 'ItemController' }\n     *   }\n     * });\n     * ```\n     *\n     *\n     * ```js\n     * // Auto-populates list and item views with /partials/home/contact/list.html,\n     * // and /partials/home/contact/item.html, respectively.\n     * $state.go('home');\n     * ```\n     *\n     * @param {string} name The name of the builder function to decorate.\n     * @param {object} func A function that is responsible for decorating the original\n     * builder function. The function receives two parameters:\n     *\n     *   - `{object}` - state - The state config object.\n     *   - `{object}` - super - The original builder function.\n     *\n     * @return {object} $stateProvider - $stateProvider instance\n     */\n    StateProvider.prototype.decorator = function (name, func) {\n        return this.stateRegistry.decorator(name, func) || this;\n    };\n    StateProvider.prototype.state = function (name, definition) {\n        if (isObject(name)) {\n            definition = name;\n        }\n        else {\n            definition.name = name;\n        }\n        this.stateRegistry.register(definition);\n        return this;\n    };\n    /**\n     * Registers an invalid state handler\n     *\n     * This is a passthrough to [[StateService.onInvalid]] for ng1.\n     */\n    StateProvider.prototype.onInvalid = function (callback) {\n        return this.stateService.onInvalid(callback);\n    };\n    return StateProvider;\n}());\nexport { StateProvider };\n//# sourceMappingURL=stateProvider.js.map","/** @publicapi @module ng1 */ /** */\nimport { services, ResolveContext, extend, } from '@uirouter/core';\nimport { getLocals } from '../services';\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n *\n * @internalapi\n */\nexport var getStateHookBuilder = function (hookName) {\n    return function stateHookBuilder(stateObject, parentFn) {\n        var hook = stateObject[hookName];\n        var pathname = hookName === 'onExit' ? 'from' : 'to';\n        function decoratedNg1Hook(trans, state) {\n            var resolveContext = new ResolveContext(trans.treeChanges(pathname));\n            var subContext = resolveContext.subContext(state.$$state());\n            var locals = extend(getLocals(subContext), { $state$: state, $transition$: trans });\n            return services.$injector.invoke(hook, this, locals);\n        }\n        return hook ? decoratedNg1Hook : undefined;\n    };\n};\n//# sourceMappingURL=onEnterExitRetain.js.map","/** @publicapi @module ng1 */ /** */\nimport { isDefined } from '@uirouter/core';\nimport { val, createProxyFunctions, removeFrom, isObject } from '@uirouter/core';\n/**\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n * @internalapi\n */\nvar Ng1LocationServices = /** @class */ (function () {\n    function Ng1LocationServices($locationProvider) {\n        // .onChange() registry\n        this._urlListeners = [];\n        this.$locationProvider = $locationProvider;\n        var _lp = val($locationProvider);\n        createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n    }\n    /**\n     * Applys ng1-specific path parameter encoding\n     *\n     * The Angular 1 `$location` service is a bit weird.\n     * It doesn't allow slashes to be encoded/decoded bi-directionally.\n     *\n     * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n     *\n     * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n     *\n     * @param router\n     */\n    Ng1LocationServices.monkeyPatchPathParameterType = function (router) {\n        var pathType = router.urlMatcherFactory.type('path');\n        pathType.encode = function (x) {\n            return x != null ? x.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : x;\n        };\n        pathType.decode = function (x) {\n            return x != null ? x.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : x;\n        };\n    };\n    Ng1LocationServices.prototype.dispose = function () { };\n    Ng1LocationServices.prototype.onChange = function (callback) {\n        var _this = this;\n        this._urlListeners.push(callback);\n        return function () { return removeFrom(_this._urlListeners)(callback); };\n    };\n    Ng1LocationServices.prototype.html5Mode = function () {\n        var html5Mode = this.$locationProvider.html5Mode();\n        html5Mode = isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n        return html5Mode && this.$sniffer.history;\n    };\n    Ng1LocationServices.prototype.baseHref = function () {\n        return this._baseHref || (this._baseHref = this.$browser.baseHref() || this.$window.location.pathname);\n    };\n    Ng1LocationServices.prototype.url = function (newUrl, replace, state) {\n        if (replace === void 0) { replace = false; }\n        if (isDefined(newUrl))\n            this.$location.url(newUrl);\n        if (replace)\n            this.$location.replace();\n        if (state)\n            this.$location.state(state);\n        return this.$location.url();\n    };\n    Ng1LocationServices.prototype._runtimeServices = function ($rootScope, $location, $sniffer, $browser, $window) {\n        var _this = this;\n        this.$location = $location;\n        this.$sniffer = $sniffer;\n        this.$browser = $browser;\n        this.$window = $window;\n        // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n        $rootScope.$on('$locationChangeSuccess', function (evt) { return _this._urlListeners.forEach(function (fn) { return fn(evt); }); });\n        var _loc = val($location);\n        // Bind these LocationService functions to $location\n        createProxyFunctions(_loc, this, _loc, ['replace', 'path', 'search', 'hash']);\n        // Bind these LocationConfig functions to $location\n        createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n    };\n    return Ng1LocationServices;\n}());\nexport { Ng1LocationServices };\n//# sourceMappingURL=locationServices.js.map","/** @publicapi @module url */ /** */\nimport { BaseUrlRule, } from '@uirouter/core';\nimport { services, isString, isFunction, isArray, identity } from '@uirouter/core';\n/**\n * Manages rules for client-side URL\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class manages the router rules for what to do when the URL changes.\n *\n * This provider remains for backwards compatibility.\n *\n * @internalapi\n * @deprecated\n */\nvar UrlRouterProvider = /** @class */ (function () {\n    /** @hidden */\n    function UrlRouterProvider(/** @hidden */ router) {\n        this.router = router;\n    }\n    UrlRouterProvider.injectableHandler = function (router, handler) {\n        return function (match) { return services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params }); };\n    };\n    /** @hidden */\n    UrlRouterProvider.prototype.$get = function () {\n        var urlService = this.router.urlService;\n        this.router.urlRouter.update(true);\n        if (!urlService.interceptDeferred)\n            urlService.listen();\n        return this.router.urlRouter;\n    };\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`).\n     * A rule detects specific URL patterns and returns a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param ruleFn\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[UrlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (ruleFn) {\n        var _this = this;\n        if (!isFunction(ruleFn))\n            throw new Error(\"'rule' must be a function\");\n        var match = function () { return ruleFn(services.$injector, _this.router.locationService); };\n        var rule = new BaseUrlRule(match, identity);\n        this.router.urlService.rules.rule(rule);\n        return this;\n    };\n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        var _this = this;\n        var urlRules = this.router.urlService.rules;\n        if (isString(rule)) {\n            urlRules.otherwise(rule);\n        }\n        else if (isFunction(rule)) {\n            urlRules.otherwise(function () { return rule(services.$injector, _this.router.locationService); });\n        }\n        else {\n            throw new Error(\"'rule' must be a string or function\");\n        }\n        return this;\n    };\n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler) {\n        if (isArray(handler) || isFunction(handler)) {\n            handler = UrlRouterProvider.injectableHandler(this.router, handler);\n        }\n        this.router.urlService.rules.when(what, handler);\n        return this;\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        this.router.urlService.deferIntercept(defer);\n    };\n    return UrlRouterProvider;\n}());\nexport { UrlRouterProvider };\n//# sourceMappingURL=urlRouterProvider.js.map","/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @preferred @publicapi @module ng1\n */ /** */\nimport { ng as angular } from './angular';\nimport { services, applyPairs, isString, trace, extend, UIRouter, unnestR, } from '@uirouter/core';\nimport { ng1ViewsBuilder, getNg1ViewConfigFactory } from './statebuilders/views';\nimport { TemplateFactory } from './templateFactory';\nimport { StateProvider } from './stateProvider';\nimport { getStateHookBuilder } from './statebuilders/onEnterExitRetain';\nimport { Ng1LocationServices } from './locationServices';\nimport { UrlRouterProvider } from './urlRouterProvider';\nangular.module('ui.router.angular1', []);\nvar mod_init = angular.module('ui.router.init', ['ng']);\nvar mod_util = angular.module('ui.router.util', ['ui.router.init']);\nvar mod_rtr = angular.module('ui.router.router', ['ui.router.util']);\nvar mod_state = angular.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nvar mod_main = angular.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nvar mod_cmpt = angular.module('ui.router.compat', ['ui.router']); // tslint:disable-line\nvar router = null;\n$uiRouterProvider.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouterProvider($locationProvider) {\n    // Create a new instance of the Router when the $uiRouterProvider is initialized\n    router = this.router = new UIRouter();\n    router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n    // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n    router.stateRegistry.decorator('views', ng1ViewsBuilder);\n    router.stateRegistry.decorator('onExit', getStateHookBuilder('onExit'));\n    router.stateRegistry.decorator('onRetain', getStateHookBuilder('onRetain'));\n    router.stateRegistry.decorator('onEnter', getStateHookBuilder('onEnter'));\n    router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\n    var ng1LocationService = (router.locationService = router.locationConfig = new Ng1LocationServices($locationProvider));\n    Ng1LocationServices.monkeyPatchPathParameterType(router);\n    // backwards compat: also expose router instance as $uiRouterProvider.router\n    router['router'] = router;\n    router['$get'] = $get;\n    $get.$inject = ['$location', '$browser', '$window', '$sniffer', '$rootScope', '$http', '$templateCache'];\n    function $get($location, $browser, $window, $sniffer, $rootScope, $http, $templateCache) {\n        ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser, $window);\n        delete router['router'];\n        delete router['$get'];\n        return router;\n    }\n    return router;\n}\nvar getProviderFor = function (serviceName) { return [\n    '$uiRouterProvider',\n    function ($urp) {\n        var service = $urp.router[serviceName];\n        service['$get'] = function () { return service; };\n        return service;\n    },\n]; };\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector, $q, $uiRouter) {\n    services.$injector = $injector;\n    services.$q = $q;\n    // https://github.com/angular-ui/ui-router/issues/3678\n    if (!$injector.hasOwnProperty('strictDi')) {\n        try {\n            $injector.invoke(function (checkStrictDi) { });\n        }\n        catch (error) {\n            $injector.strictDi = !!/strict mode/.exec(error && error.toString());\n        }\n    }\n    // The $injector is now available.\n    // Find any resolvables that had dependency annotation deferred\n    $uiRouter.stateRegistry\n        .get()\n        .map(function (x) { return x.$$state().resolvables; })\n        .reduce(unnestR, [])\n        .filter(function (x) { return x.deps === 'deferred'; })\n        .forEach(function (resolvable) { return (resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi)); });\n}\n// $urlRouter service and $urlRouterProvider\nvar getUrlRouterProvider = function (uiRouter) { return (uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter)); };\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nvar getStateProvider = function () { return extend(router.stateProvider, { $get: function () { return router.stateService; } }); };\nwatchDigests.$inject = ['$rootScope'];\nexport function watchDigests($rootScope) {\n    $rootScope.$watch(function () {\n        trace.approximateDigests++;\n    });\n}\nmod_init.provider('$uiRouter', $uiRouterProvider);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () { return router.urlMatcherFactory; }]);\nmod_util.provider('$templateFactory', function () { return new TemplateFactory(); });\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\nmod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) { return $uiRouter.globals.params; }]);\nmod_main.factory('$view', function () { return router.viewService; });\nmod_main.service('$trace', function () { return trace; });\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) { }]);\nmod_state.run(['$state', function ($state) { }]);\nmod_rtr.run(['$urlRouter', function ($urlRouter) { }]);\nmod_init.run(runBlock);\n/** @hidden TODO: find a place to move this */\nexport var getLocals = function (ctx) {\n    var tokens = ctx.getTokens().filter(isString);\n    var tuples = tokens.map(function (key) {\n        var resolvable = ctx.getResolvable(key);\n        var waitPolicy = ctx.getPolicy(resolvable).async;\n        return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n    });\n    return tuples.reduce(applyPairs, {});\n};\n//# sourceMappingURL=services.js.map","/**\n * # Angular 1 Directives\n *\n * These are the directives included in UI-Router for Angular 1.\n * These directives are used in templates to create viewports and link/navigate to states.\n *\n * @preferred @publicapi @module directives\n */ /** */\nimport { ng as angular } from '../angular';\nimport { extend, forEach, tail, isString, isObject, isArray, parse, noop, unnestR, identity, uniqR, inArray, removeFrom, } from '@uirouter/core';\n/** @hidden */\nfunction parseStateRef(ref) {\n    var parsed;\n    var paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/);\n    if (paramsOnly)\n        ref = '(' + paramsOnly[1] + ')';\n    parsed = ref.replace(/\\n/g, ' ').match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n    if (!parsed || parsed.length !== 4)\n        throw new Error(\"Invalid state ref '\" + ref + \"'\");\n    return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n}\n/** @hidden */\nfunction stateContext(el) {\n    var $uiView = el.parent().inheritedData('$uiView');\n    var path = parse('$cfg.path')($uiView);\n    return path ? tail(path).state.name : undefined;\n}\n/** @hidden */\nfunction processedDef($state, $element, def) {\n    var uiState = def.uiState || $state.current.name;\n    var uiStateOpts = extend(defaultOpts($element, $state), def.uiStateOpts || {});\n    var href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n    return { uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href };\n}\n/** @hidden */\nfunction getTypeInfo(el) {\n    // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n    var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n    var isForm = el[0].nodeName === 'FORM';\n    return {\n        attr: isForm ? 'action' : isSvg ? 'xlink:href' : 'href',\n        isAnchor: el.prop('tagName').toUpperCase() === 'A',\n        clickable: !isForm,\n    };\n}\n/** @hidden */\nfunction clickHook(el, $state, $timeout, type, getDef) {\n    return function (e) {\n        var button = e.which || e.button, target = getDef();\n        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n            var transition_1 = $timeout(function () {\n                if (!el.attr('disabled')) {\n                    $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n                }\n            });\n            e.preventDefault();\n            // if the state has no URL, ignore one preventDefault from the <a> directive.\n            var ignorePreventDefaultCount_1 = type.isAnchor && !target.href ? 1 : 0;\n            e.preventDefault = function () {\n                if (ignorePreventDefaultCount_1-- <= 0)\n                    $timeout.cancel(transition_1);\n            };\n        }\n    };\n}\n/** @hidden */\nfunction defaultOpts(el, $state) {\n    return {\n        relative: stateContext(el) || $state.$current,\n        inherit: true,\n        source: 'sref',\n    };\n}\n/** @hidden */\nfunction bindEvents(element, scope, hookFn, uiStateOpts) {\n    var events;\n    if (uiStateOpts) {\n        events = uiStateOpts.events;\n    }\n    if (!isArray(events)) {\n        events = ['click'];\n    }\n    var on = element.on ? 'on' : 'bind';\n    for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n        var event_1 = events_1[_i];\n        element[on](event_1, hookFn);\n    }\n    scope.$on('$destroy', function () {\n        var off = element.off ? 'off' : 'unbind';\n        for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n            var event_2 = events_2[_i];\n            element[off](event_2, hookFn);\n        }\n    });\n}\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of the `ui-sref` is the name of the state to link to.\n *\n * #### Example:\n * This will activate the `home` state when the link is clicked.\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * ```\n *\n * ### Relative Links\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\n *\n * #### Example:\n * Both these links are relative to the parent state, even when a child state is currently active.\n * ```html\n * <a ui-sref=\".child1\">child 1 state</a>\n * <a ui-sref=\".child2\">child 2 state</a>\n * ```\n *\n * This link activates the parent state.\n * ```html\n * <a ui-sref=\"^\">Return</a>\n * ```\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * #### Example:\n * Assuming the `users` state has a url of `/users/`\n * ```html\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n * ```\n *\n * ### Parameter Values\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n * The content inside the parentheses is an expression, evaluated to the parameter values.\n *\n * #### Example:\n * This example renders a list of links to users.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"user in users\">\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n * </li>\n * ```\n *\n * Note:\n * The parameter values expression is `$watch`ed for updates.\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * #### Example:\n * ```html\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-sref-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Examples\n * If you have the following template:\n *\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * <a ui-sref=\"about\">About</a>\n * <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * ```\n *\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n *\n * ```html\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * ```\n *\n * ### Notes\n *\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n *\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n */\nvar uiSrefDirective;\nuiSrefDirective = [\n    '$uiRouter',\n    '$timeout',\n    function $StateRefDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var ref = parseStateRef(attrs.uiSref);\n                rawDef.uiState = ref.state;\n                rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                if (ref.paramExpr) {\n                    scope.$watch(ref.paramExpr, function (val) {\n                        rawDef.uiStateParams = extend({}, val);\n                        update();\n                    }, true);\n                    rawDef.uiStateParams = extend({}, scope.$eval(ref.paramExpr));\n                }\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            },\n        };\n    },\n];\n/**\n * `ui-state`: A fully dynamic directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n *\n * #### Example:\n * Create a list of links.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Relative Links\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create relative `ui-state` which always targets the same destination.\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * ### Parameter Values\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n * Param values should be provided using the `ui-state-params` attribute.\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * This example renders a list of links with param values.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * ```html\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-state-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Notes\n *\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\n *\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n * ```\n */\nvar uiStateDirective;\nuiStateDirective = [\n    '$uiRouter',\n    '$timeout',\n    function $StateRefDynamicDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n                var watchDeregFns = inputAttrs.reduce(function (acc, attr) { return ((acc[attr] = noop), acc); }, {});\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                inputAttrs.forEach(function (field) {\n                    rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n                    attrs.$observe(field, function (expr) {\n                        watchDeregFns[field]();\n                        watchDeregFns[field] = scope.$watch(expr, function (newval) {\n                            rawDef[field] = newval;\n                            update();\n                        }, true);\n                    });\n                });\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            },\n        };\n    },\n];\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n * related directive's state is active (and remove them when it is inactive).\n *\n * The primary use-case is to highlight the active link in navigation menus,\n * distinguishing it from the inactive menu items.\n *\n * ### Linking to a `ui-sref` or `ui-state`\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n *\n * ### Matching\n *\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\n *\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n * This is an \"exact match\" which uses [[StateService.is]].\n *\n * ### Parameter values\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n *\n * #### Example:\n * ```html\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n * </li>\n * ```\n *\n * ### Examples\n *\n * Given the following template:\n * #### Example:\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * When the app state is `app.user` (or any child state),\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * ### Glob mode\n *\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n * The objects keys represent active class names and values represent the respective state names/globs.\n * `ui-sref-active` will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * #### Example:\n * Given the following template, with \"admin\" being an abstract state:\n * ```html\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * Arrays are also supported as values in the `ngClass`-like interface.\n * This allows multiple states to add `active` class.\n *\n * #### Example:\n * Given the following template, with \"admin.roles\" being the current state, the class will be added too:\n * ```html\n * <div ui-sref-active=\"{'active': ['owner.**', 'admin.**']}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the `<div>` and `<a>` elements.\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n *\n * ### Notes:\n *\n * - The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n */\nvar uiSrefActiveDirective;\nuiSrefActiveDirective = [\n    '$state',\n    '$stateParams',\n    '$interpolate',\n    '$uiRouter',\n    function $StateRefActiveDirective($state, $stateParams, $interpolate, $uiRouter) {\n        return {\n            restrict: 'A',\n            controller: [\n                '$scope',\n                '$element',\n                '$attrs',\n                function ($scope, $element, $attrs) {\n                    var states = [];\n                    var activeEqClass;\n                    var uiSrefActive;\n                    // There probably isn't much point in $observing this\n                    // uiSrefActive and uiSrefActiveEq share the same directive object with some\n                    // slight difference in logic routing\n                    activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n                    try {\n                        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n                    }\n                    catch (e) {\n                        // Do nothing. uiSrefActive is not a valid expression.\n                        // Fall back to using $interpolate below\n                    }\n                    uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n                    setStatesFromDefinitionObject(uiSrefActive);\n                    // Allow uiSref to communicate with uiSrefActive[Equals]\n                    this.$$addStateInfo = function (newState, newParams) {\n                        // we already got an explicit state provided by ui-sref-active, so we\n                        // shadow the one that comes from ui-sref\n                        if (isObject(uiSrefActive) && states.length > 0) {\n                            return;\n                        }\n                        var deregister = addState(newState, newParams, uiSrefActive);\n                        update();\n                        return deregister;\n                    };\n                    function updateAfterTransition(trans) {\n                        trans.promise.then(update, noop);\n                    }\n                    $scope.$on('$destroy', setupEventListeners());\n                    if ($uiRouter.globals.transition) {\n                        updateAfterTransition($uiRouter.globals.transition);\n                    }\n                    function setupEventListeners() {\n                        var deregisterStatesChangedListener = $uiRouter.stateRegistry.onStatesChanged(handleStatesChanged);\n                        var deregisterOnStartListener = $uiRouter.transitionService.onStart({}, updateAfterTransition);\n                        var deregisterStateChangeSuccessListener = $scope.$on('$stateChangeSuccess', update);\n                        return function cleanUp() {\n                            deregisterStatesChangedListener();\n                            deregisterOnStartListener();\n                            deregisterStateChangeSuccessListener();\n                        };\n                    }\n                    function handleStatesChanged() {\n                        setStatesFromDefinitionObject(uiSrefActive);\n                    }\n                    function setStatesFromDefinitionObject(statesDefinition) {\n                        if (isObject(statesDefinition)) {\n                            states = [];\n                            forEach(statesDefinition, function (stateOrName, activeClass) {\n                                // Helper function to abstract adding state.\n                                var addStateForClass = function (stateOrName, activeClass) {\n                                    var ref = parseStateRef(stateOrName);\n                                    addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n                                };\n                                if (isString(stateOrName)) {\n                                    // If state is string, just add it.\n                                    addStateForClass(stateOrName, activeClass);\n                                }\n                                else if (isArray(stateOrName)) {\n                                    // If state is an array, iterate over it and add each array item individually.\n                                    forEach(stateOrName, function (stateOrName) {\n                                        addStateForClass(stateOrName, activeClass);\n                                    });\n                                }\n                            });\n                        }\n                    }\n                    function addState(stateName, stateParams, activeClass) {\n                        var state = $state.get(stateName, stateContext($element));\n                        var stateInfo = {\n                            state: state || { name: stateName },\n                            params: stateParams,\n                            activeClass: activeClass,\n                        };\n                        states.push(stateInfo);\n                        return function removeState() {\n                            removeFrom(states)(stateInfo);\n                        };\n                    }\n                    // Update route state\n                    function update() {\n                        var splitClasses = function (str) { return str.split(/\\s/).filter(identity); };\n                        var getClasses = function (stateList) {\n                            return stateList\n                                .map(function (x) { return x.activeClass; })\n                                .map(splitClasses)\n                                .reduce(unnestR, []);\n                        };\n                        var allClasses = getClasses(states)\n                            .concat(splitClasses(activeEqClass))\n                            .reduce(uniqR, []);\n                        var fuzzyClasses = getClasses(states.filter(function (x) { return $state.includes(x.state.name, x.params); }));\n                        var exactlyMatchesAny = !!states.filter(function (x) { return $state.is(x.state.name, x.params); }).length;\n                        var exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n                        var addClasses = fuzzyClasses.concat(exactClasses).reduce(uniqR, []);\n                        var removeClasses = allClasses.filter(function (cls) { return !inArray(addClasses, cls); });\n                        $scope.$evalAsync(function () {\n                            addClasses.forEach(function (className) { return $element.addClass(className); });\n                            removeClasses.forEach(function (className) { return $element.removeClass(className); });\n                        });\n                    }\n                    update();\n                },\n            ],\n        };\n    },\n];\nangular\n    .module('ui.router.state')\n    .directive('uiSref', uiSrefDirective)\n    .directive('uiSrefActive', uiSrefActiveDirective)\n    .directive('uiSrefActiveEq', uiSrefActiveDirective)\n    .directive('uiState', uiStateDirective);\n//# sourceMappingURL=stateDirectives.js.map","/** @publicapi @module directives */ /** */\nimport { extend, filter, isDefined, isFunction, isString, kebobString, noop, parse, ResolveContext, tail, trace, unnestR, } from '@uirouter/core';\nimport { ng as angular } from '../angular';\nimport { getLocals } from '../services';\nimport { Ng1ViewConfig } from '../statebuilders/views';\n/**\n * `ui-view`: A viewport directive which is filled in by a view from the active state.\n *\n * ### Attributes\n *\n * - `name`: (Optional) A view name.\n *   The name should be unique amongst the other views in the same state.\n *   You can have views of the same name that live in different states.\n *   The ui-view can be targeted in a View using the name ([[Ng1StateDeclaration.views]]).\n *\n * - `autoscroll`: an expression. When it evaluates to true, the `ui-view` will be scrolled into view when it is activated.\n *   Uses [[$uiViewScroll]] to do the scrolling.\n *\n * - `onload`: Expression to evaluate whenever the view updates.\n *\n * #### Example:\n * A view can be unnamed or named.\n * ```html\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n *\n * <!-- Named (different style) -->\n * <ui-view name=\"viewName\"></ui-view>\n * ```\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n *\n * ```html\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * ```\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the\n * [[Ng1StateDeclaration.views]] config property, by name, in this case an empty name:\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n *\n * ```html\n * <div ui-view=\"main\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * Really though, you'll use views to set up multiple views:\n *\n * ```html\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }\n * })\n * ```\n *\n * #### Examples for `autoscroll`:\n * ```html\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * ```\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[Ng1ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * #### Example:\n * ```js\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * ```\n */\nexport var uiView;\nuiView = [\n    '$view',\n    '$animate',\n    '$uiViewScroll',\n    '$interpolate',\n    '$q',\n    function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q) {\n        function getRenderer(attrs, scope) {\n            return {\n                enter: function (element, target, cb) {\n                    if (angular.version.minor > 2) {\n                        $animate.enter(element, null, target).then(cb);\n                    }\n                    else {\n                        $animate.enter(element, null, target, cb);\n                    }\n                },\n                leave: function (element, cb) {\n                    if (angular.version.minor > 2) {\n                        $animate.leave(element).then(cb);\n                    }\n                    else {\n                        $animate.leave(element, cb);\n                    }\n                },\n            };\n        }\n        function configsEqual(config1, config2) {\n            return config1 === config2;\n        }\n        var rootData = {\n            $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n            $uiView: {},\n        };\n        var directive = {\n            count: 0,\n            restrict: 'ECA',\n            terminal: true,\n            priority: 400,\n            transclude: 'element',\n            compile: function (tElement, tAttrs, $transclude) {\n                return function (scope, $element, attrs) {\n                    var onloadExp = attrs['onload'] || '', autoScrollExp = attrs['autoscroll'], renderer = getRenderer(attrs, scope), inherited = $element.inheritedData('$uiView') || rootData, name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n                    var previousEl, currentEl, currentScope, viewConfig, unregister;\n                    var activeUIView = {\n                        $type: 'ng1',\n                        id: directive.count++,\n                        name: name,\n                        fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + '.' + name : name,\n                        config: null,\n                        configUpdated: configUpdatedCallback,\n                        get creationContext() {\n                            // The context in which this ui-view \"tag\" was created\n                            var fromParentTagConfig = parse('$cfg.viewDecl.$context')(inherited);\n                            // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n                            // See https://github.com/angular-ui/ui-router/issues/3355\n                            var fromParentTag = parse('$uiView.creationContext')(inherited);\n                            return fromParentTagConfig || fromParentTag;\n                        },\n                    };\n                    trace.traceUIViewEvent('Linking', activeUIView);\n                    function configUpdatedCallback(config) {\n                        if (config && !(config instanceof Ng1ViewConfig))\n                            return;\n                        if (configsEqual(viewConfig, config))\n                            return;\n                        trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n                        viewConfig = config;\n                        updateView(config);\n                    }\n                    $element.data('$uiView', { $uiView: activeUIView });\n                    updateView();\n                    unregister = $view.registerUIView(activeUIView);\n                    scope.$on('$destroy', function () {\n                        trace.traceUIViewEvent('Destroying/Unregistering', activeUIView);\n                        unregister();\n                    });\n                    function cleanupLastView() {\n                        if (previousEl) {\n                            trace.traceUIViewEvent('Removing (previous) el', previousEl.data('$uiView'));\n                            previousEl.remove();\n                            previousEl = null;\n                        }\n                        if (currentScope) {\n                            trace.traceUIViewEvent('Destroying scope', activeUIView);\n                            currentScope.$destroy();\n                            currentScope = null;\n                        }\n                        if (currentEl) {\n                            var _viewData_1 = currentEl.data('$uiViewAnim');\n                            trace.traceUIViewEvent('Animate out', _viewData_1);\n                            renderer.leave(currentEl, function () {\n                                _viewData_1.$$animLeave.resolve();\n                                previousEl = null;\n                            });\n                            previousEl = currentEl;\n                            currentEl = null;\n                        }\n                    }\n                    function updateView(config) {\n                        var newScope = scope.$new();\n                        var animEnter = $q.defer(), animLeave = $q.defer();\n                        var $uiViewData = {\n                            $cfg: config,\n                            $uiView: activeUIView,\n                        };\n                        var $uiViewAnim = {\n                            $animEnter: animEnter.promise,\n                            $animLeave: animLeave.promise,\n                            $$animLeave: animLeave,\n                        };\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoading\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description\n                         *\n                         * Fired once the view **begins loading**, *before* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         * @param {string} viewName Name of the view.\n                         */\n                        newScope.$emit('$viewContentLoading', name);\n                        var cloned = $transclude(newScope, function (clone) {\n                            clone.data('$uiViewAnim', $uiViewAnim);\n                            clone.data('$uiView', $uiViewData);\n                            renderer.enter(clone, $element, function onUIViewEnter() {\n                                animEnter.resolve();\n                                if (currentScope)\n                                    currentScope.$emit('$viewContentAnimationEnded');\n                                if ((isDefined(autoScrollExp) && !autoScrollExp) || scope.$eval(autoScrollExp)) {\n                                    $uiViewScroll(clone);\n                                }\n                            });\n                            cleanupLastView();\n                        });\n                        currentEl = cloned;\n                        currentScope = newScope;\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoaded\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description           *\n                         * Fired once the view is **loaded**, *after* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         */\n                        currentScope.$emit('$viewContentLoaded', config || viewConfig);\n                        currentScope.$eval(onloadExp);\n                    }\n                };\n            },\n        };\n        return directive;\n    },\n];\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill($compile, $controller, $transitions, $view, $q, $timeout) {\n    var getControllerAs = parse('viewDecl.controllerAs');\n    var getResolveAs = parse('viewDecl.resolveAs');\n    return {\n        restrict: 'ECA',\n        priority: -400,\n        compile: function (tElement) {\n            var initial = tElement.html();\n            tElement.empty();\n            return function (scope, $element) {\n                var data = $element.data('$uiView');\n                if (!data) {\n                    $element.html(initial);\n                    $compile($element.contents())(scope);\n                    return;\n                }\n                var cfg = data.$cfg || { viewDecl: {}, getTemplate: noop };\n                var resolveCtx = cfg.path && new ResolveContext(cfg.path);\n                $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n                trace.traceUIViewFill(data.$uiView, $element.html());\n                var link = $compile($element.contents());\n                var controller = cfg.controller;\n                var controllerAs = getControllerAs(cfg);\n                var resolveAs = getResolveAs(cfg);\n                var locals = resolveCtx && getLocals(resolveCtx);\n                scope[resolveAs] = locals;\n                if (controller) {\n                    var controllerInstance = ($controller(controller, extend({}, locals, { $scope: scope, $element: $element })));\n                    if (controllerAs) {\n                        scope[controllerAs] = controllerInstance;\n                        scope[controllerAs][resolveAs] = locals;\n                    }\n                    // TODO: Use $view service as a central point for registering component-level hooks\n                    // Then, when a component is created, tell the $view service, so it can invoke hooks\n                    // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n                    // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n                    $element.data('$ngControllerController', controllerInstance);\n                    $element.children().data('$ngControllerController', controllerInstance);\n                    registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\n                }\n                // Wait for the component to appear in the DOM\n                if (isString(cfg.component)) {\n                    var kebobName = kebobString(cfg.component);\n                    var tagRegexp_1 = new RegExp(\"^(x-|data-)?\" + kebobName + \"$\", 'i');\n                    var getComponentController = function () {\n                        var directiveEl = [].slice\n                            .call($element[0].children)\n                            .filter(function (el) { return el && el.tagName && tagRegexp_1.exec(el.tagName); });\n                        return directiveEl && angular.element(directiveEl).data(\"$\" + cfg.component + \"Controller\");\n                    };\n                    var deregisterWatch_1 = scope.$watch(getComponentController, function (ctrlInstance) {\n                        if (!ctrlInstance)\n                            return;\n                        registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\n                        deregisterWatch_1();\n                    });\n                }\n                link(scope);\n            };\n        },\n    };\n}\n/** @hidden */\nvar hasComponentImpl = typeof angular.module('ui.router')['component'] === 'function';\n/** @hidden incrementing id */\nvar _uiCanExitId = 0;\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($q, $transitions, controllerInstance, $scope, cfg) {\n    // Call $onInit() ASAP\n    if (isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) {\n        controllerInstance.$onInit();\n    }\n    var viewState = tail(cfg.path).state.self;\n    var hookOptions = { bind: controllerInstance };\n    // Add component-level hook for onUiParamsChanged\n    if (isFunction(controllerInstance.uiOnParamsChanged)) {\n        var resolveContext = new ResolveContext(cfg.path);\n        var viewCreationTrans_1 = resolveContext.getResolvable('$transition$').data;\n        // Fire callback on any successful transition\n        var paramsUpdated = function ($transition$) {\n            // Exit early if the $transition$ is the same as the view was created within.\n            // Exit early if the $transition$ will exit the state the view is for.\n            if ($transition$ === viewCreationTrans_1 || $transition$.exiting().indexOf(viewState) !== -1)\n                return;\n            var toParams = $transition$.params('to');\n            var fromParams = $transition$.params('from');\n            var getNodeSchema = function (node) { return node.paramSchema; };\n            var toSchema = $transition$\n                .treeChanges('to')\n                .map(getNodeSchema)\n                .reduce(unnestR, []);\n            var fromSchema = $transition$\n                .treeChanges('from')\n                .map(getNodeSchema)\n                .reduce(unnestR, []);\n            // Find the to params that have different values than the from params\n            var changedToParams = toSchema.filter(function (param) {\n                var idx = fromSchema.indexOf(param);\n                return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n            });\n            // Only trigger callback if a to param has changed or is new\n            if (changedToParams.length) {\n                var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                var newValues = filter(toParams, function (val, key) { return changedKeys_1.indexOf(key) !== -1; });\n                controllerInstance.uiOnParamsChanged(newValues, $transition$);\n            }\n        };\n        $scope.$on('$destroy', $transitions.onSuccess({}, paramsUpdated, hookOptions));\n    }\n    // Add component-level hook for uiCanExit\n    if (isFunction(controllerInstance.uiCanExit)) {\n        var id_1 = _uiCanExitId++;\n        var cacheProp_1 = '_uiCanExitIds';\n        // Returns true if a redirect transition already answered truthy\n        var prevTruthyAnswer_1 = function (trans) {\n            return !!trans && ((trans[cacheProp_1] && trans[cacheProp_1][id_1] === true) || prevTruthyAnswer_1(trans.redirectedFrom()));\n        };\n        // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n        var wrappedHook = function (trans) {\n            var promise;\n            var ids = (trans[cacheProp_1] = trans[cacheProp_1] || {});\n            if (!prevTruthyAnswer_1(trans)) {\n                promise = $q.when(controllerInstance.uiCanExit(trans));\n                promise.then(function (val) { return (ids[id_1] = val !== false); });\n            }\n            return promise;\n        };\n        var criteria = { exiting: viewState.name };\n        $scope.$on('$destroy', $transitions.onBefore(criteria, wrappedHook, hookOptions));\n    }\n}\nangular.module('ui.router.state').directive('uiView', uiView);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n//# sourceMappingURL=viewDirective.js.map","/** @publicapi @module ng1 */ /** */\nimport { ng as angular } from './angular';\n/**\n * `isState` Filter: truthy if the current state is the parameter\n *\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n * ```\n */\n$IsStateFilter.$inject = ['$state'];\nexport function $IsStateFilter($state) {\n    var isFilter = function (state, params, options) {\n        return $state.is(state, params, options);\n    };\n    isFilter.$stateful = true;\n    return isFilter;\n}\n/**\n * `includedByState` Filter: truthy if the current state includes the parameter\n *\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n * ```\n */\n$IncludedByStateFilter.$inject = ['$state'];\nexport function $IncludedByStateFilter($state) {\n    var includesFilter = function (state, params, options) {\n        return $state.includes(state, params, options);\n    };\n    includesFilter.$stateful = true;\n    return includesFilter;\n}\nangular\n    .module('ui.router.state')\n    .filter('isState', $IsStateFilter)\n    .filter('includedByState', $IncludedByStateFilter);\n//# sourceMappingURL=stateFilters.js.map","/** @publicapi @module ng1 */ /** */\nimport { ng as angular } from './angular';\n/** @hidden */\nfunction $ViewScrollProvider() {\n    var useAnchorScroll = false;\n    this.useAnchorScroll = function () {\n        useAnchorScroll = true;\n    };\n    this.$get = [\n        '$anchorScroll',\n        '$timeout',\n        function ($anchorScroll, $timeout) {\n            if (useAnchorScroll) {\n                return $anchorScroll;\n            }\n            return function ($element) {\n                return $timeout(function () {\n                    $element[0].scrollIntoView();\n                }, 0, false);\n            };\n        },\n    ];\n}\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n//# sourceMappingURL=viewScroll.js.map","export * from './services';\nexport * from './statebuilders/views';\nexport * from './stateProvider';\nexport * from './urlRouterProvider';\nimport './injectables';\nimport './directives/stateDirectives';\nimport './stateFilters';\nimport './directives/viewDirective';\nimport './viewScroll';\nexport default 'ui.router';\nimport * as core from '@uirouter/core';\nexport { core };\nexport * from '@uirouter/core';\n//# sourceMappingURL=index.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}