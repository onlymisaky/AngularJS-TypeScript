{"version":3,"sources":["webpack:///./node_modules/@uirouter/core/lib-esm/common/common.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/predicates.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/hof.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/coreservices.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/oclazyload/dist/ocLazyLoad.js","webpack:///./node_modules/nprogress/nprogress.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/rejectFactory.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/angular.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/glob.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/queue.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/strings.js","webpack:///./node_modules/@uirouter/core/lib-esm/common/trace.js","webpack:///./node_modules/@uirouter/core/lib-esm/params/paramType.js","webpack:///./node_modules/@uirouter/core/lib-esm/params/param.js","webpack:///./node_modules/@uirouter/core/lib-esm/params/paramTypes.js","webpack:///./node_modules/@uirouter/core/lib-esm/params/stateParams.js","webpack:///./node_modules/@uirouter/core/lib-esm/path/pathNode.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/targetState.js","webpack:///./node_modules/@uirouter/core/lib-esm/path/pathUtils.js","webpack:///./node_modules/@uirouter/core/lib-esm/resolve/interface.js","webpack:///./node_modules/@uirouter/core/lib-esm/resolve/resolvable.js","webpack:///./node_modules/@uirouter/core/lib-esm/resolve/resolveContext.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateBuilder.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/interface.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateObject.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateMatcher.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateQueueManager.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateRegistry.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/transitionHook.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/hookRegistry.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/hookBuilder.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/transition.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlMatcher.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlMatcherFactory.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlRule.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlRouter.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlRules.js","webpack:///./node_modules/@uirouter/core/lib-esm/view/view.js","webpack:///./node_modules/@uirouter/core/lib-esm/globals.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlConfig.js","webpack:///./node_modules/@uirouter/core/lib-esm/url/urlService.js","webpack:///./node_modules/@uirouter/core/lib-esm/router.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/coreResolvables.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/redirectTo.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/onEnterExitRetain.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/resolve.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/views.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/updateGlobals.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/url.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/lazyLoad.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/transitionEventType.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/ignoredTransition.js","webpack:///./node_modules/@uirouter/core/lib-esm/hooks/invalidTransition.js","webpack:///./node_modules/@uirouter/core/lib-esm/transition/transitionService.js","webpack:///./node_modules/@uirouter/core/lib-esm/state/stateService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/q.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/injector.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/utils.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/baseLocationService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/hashLocationService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/memoryLocationService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/pushStateLocationService.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/memoryLocationConfig.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/browserLocationConfig.js","webpack:///./node_modules/@uirouter/core/lib-esm/vanilla/plugins.js","webpack:///./node_modules/@uirouter/core/lib-esm/interface.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/statebuilders/views.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/templateFactory.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/stateProvider.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/statebuilders/onEnterExitRetain.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/locationServices.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/urlRouterProvider.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/services.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/directives/stateDirectives.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/directives/viewDirective.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/stateFilters.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/viewScroll.js","webpack:///./node_modules/@uirouter/angularjs/lib-esm/index.js"],"names":["global","__webpack_require__","d","__webpack_exports__","root","fromJson","toJson","forEach","extend","equals","identity","noop","createProxyFunctions","inherit","inArray","_inArray","removeFrom","_removeFrom","pushTo","_pushTo","deregAll","defaults","mergeR","ancestors","pick","omit","pluck","filter","find","mapObj","map","values","allTrueR","anyTrueR","unnestR","flattenR","pushR","uniqR","unnest","flatten","assertPredicate","assertMap","assertFn","pairs","arrayTuples","applyPairs","tail","copy","_extend","silenceUncaughtInPromise","silentRejection","_predicates__WEBPACK_IMPORTED_MODULE_0__","_hof__WEBPACK_IMPORTED_MODULE_1__","_coreservices__WEBPACK_IMPORTED_MODULE_2__","self","undefined","angular","JSON","parse","bind","stringify","obj","cb","_this","Object","keys","key","assign","_equals","x","source","target","fnNames","latebind","bindFunction","fnName","reduce","acc","name","apply","arguments","parent","extra","create","array","indexOf","idx","splice","arr","val","push","functions","slice","fn","opts","defaultsList","_i","length","defaultVals","concat","reverse","memo","item","first","second","path","n","propNames","objCopy","_prop","collection","propName","callback","result","accept","i","elem","token","predicateOrMap","errMsg","Error","args","maxArrayLen","min","Math","_loop_1","keyValTuple","value","src","dest","toObj","j","o1","o2","t1","a1","a2","tup","b","t","getTime","toString","promise","catch","e","error","$q","reject","isUndefined","isDefined","isNull","isNullOrUndefined","isFunction","isNumber","isString","isObject","isArray","isDate","isRegExp","isInjectable","isPromise","_hof__WEBPACK_IMPORTED_MODULE_0__","toStr","prototype","tis","o","Array","call","head","curry","initial_args","func_args_length","curried","compose","start","this","pipe","funcs","prop","propEq","not","and","or","all","any","is","eq","invoke","pattern","_val","split","fn1","fn2","ctor","constructor","other","v","struct","makeStub","services","service","methods","fnname","$injector","g","Function","window","module","exports","regModules","regInvokes","regConfigs","modulesToLoad","realModules","recordDeclarations","broadcast","runBlocks","justLoaded","provider","$controllerProvider","$provide","$compileProvider","$filterProvider","$animateProvider","modules","providers","debug","events","moduleCache","modulePromises","config","moduleConfig","_init","element","elements","names","NG_APP_CLASS_REGEXP","append","elm","document","getElementById","replace","querySelectorAll","className","match","exec","attributes","attr","jasmine","mocha","mock","console","moduleName","addReg","mainModule","_invokeQueue","_configBlocks","requires","pop","cache","hashCode","str","len","hash","charCodeAt","_register","registerModules","params","k","moduleFn","tempRunBlocks","getModuleName","newModule","ngModuleFct","_runBlocks","shift","rerun","reconfig","instanceInjector","getInstanceInjector","_registerInvokeList","invokeList","type","newInvoke","onInvoke","invokeName","hasOwnProperty","potentialNew","invokes","newHash","isNew","signature","checkHashes","data","queue","callInvoke","fct","invoked","jlen","moduleExists","test","message","$get","$log","$rootElement","$rootScope","$cacheFactory","filesCache","deferred","defer","injector","_broadcast","eventName","$broadcast","info","_$log","_getFilesCache","toggleWatch","watch","getModuleConfig","setModuleConfig","getModules","isLoaded","modulesNames","moduleLoaded","_getModuleName","_getModule","_loadDependencies","localParams","loadedModule","diff","promisesList","when","getRequires","requireEntry","files","warn","filesLoader","then","entry","inject","real","_addToLoadList","res","loadNext","resolve","err","requireModule","_unregister","bootstrapFct","bootstrap","force","configFn","directive","$ocLazyLoad","$compile","$animate","$parse","$timeout","restrict","terminal","priority","compile","attrs","content","innerHTML","html","$scope","$element","$attr","model","ocLazyLoad","$watch","load","enter","contents","decorator","$delegate","$window","$interval","useCssLoadPatch","anchor","getElementsByTagName","buildElement","el","loaded","cacheBuster","url","dc","Date","substring","get","put","createElement","rel","href","remove","onload","onerror","async","serie","insertBeforeElem","lastChild","insertBefore","jQuery","querySelector","parentNode","ua","navigator","userAgent","toLowerCase","platform","appVersion","iOSVersion","parseFloat","parseInt","join","androidVersion","versionMatch","tries","interval","sheet","cssRules","cancel","cssFiles","templatesFiles","jsFiles","promises","cachePromise","pushFile","m","file_type","substr","jsLoader","cssDeferred","cssLoader","templatesDeferred","templatesLoader","jsDeferred","originalModule","errText","originalParams","deferredList","template","paths","ocLazyLoadLoader","$templateCache","$http","response","node","nodeName","id","searchElement","fromIndex","TypeError","O","abs","Infinity","max","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","initial","current","NProgress","version","Settings","settings","minimum","easing","positionUsing","speed","trickle","trickleRate","trickleSpeed","showSpinner","barSelector","spinnerSelector","clamp","toBarPerc","configure","options","status","set","started","isStarted","progress","render","bar","ease","offsetWidth","next","getPositioningCSS","css","barCSS","transform","margin-left","transition","barPositionCSS","opacity","setTimeout","work","done","inc","random","amount","$promise","state","always","fromStart","isRendered","addClass","documentElement","spinner","perc","removeElement","body","appendChild","removeClass","bodyStyle","style","vendorPrefix","pending","cssPrefixes","cssProps","getStyleProp","letter","toUpperCase","vendorName","capName","charAt","getVendorProp","applyCss","properties","hasClass","list","classList","oldList","newList","removeChild","RejectType","ng_from_global","ng","node_modules_angular","Glob","text","glob","regexpString","seg","regexp","RegExp","fromString","matches","queue_Queue","Queue","_items","_limit","_evictListeners","onEvict","common","enqueue","items","evict","dequeue","size","clear","peekTail","peekHead","rejectFactory_id","rejectFactory_Rejection","Rejection","detail","$id","isRejectionPromise","hof","_transitionRejection","superseded","rejection","SUPERSEDED","redirected","invalid","INVALID","ignored","IGNORED","aborted","ABORTED","errored","ERROR","normalize","toPromise","maxLength","padString","kebobString","camelCase","$1","functionToString","fnStr","fnToString","namedFunctionMatch","_fn","predicates","isRejection","stringifyPattern","seen","format","beforeAfterSubstr","char","hostRegex","stripLastPathElement","splitHash","splitQuery","splitEqual","trimHashVal","splitOnDelim","delim","re","joinNeighborsR","uiViewString","uiview","creationContext","$type","fqn","normalizedCat","input","Category","consoleLog","log","consoletable","table","_tid","_rid","transLbl","trans","trace_Trace","Trace","_enabled","approximateDigests","_set","enabled","categories","isNaN","category","enable","disable","traceTransitionStart","TRANSITION","traceTransitionIgnored","traceHookInvocation","step","HOOK","event","context","registeredHook","traceHookResult","hookResult","transitionOptions","traceResolvePath","RESOLVE","traceResolvableResolved","resolvable","traceError","reason","traceSuccess","finalState","traceUIViewEvent","viewData","UIVIEW","traceUIViewConfigUpdated","traceUIViewFill","traceViewSync","VIEWCONFIG","uivheader","mapping","_a","_b","uiView","viewConfig","uiv","cfg","viewDecl","$context","$name","sort","a","localeCompare","traceViewServiceEvent","view","$uiViewName","$uiViewContextAnchor","viewConfigString","traceViewServiceUIViewEvent","trace","paramType_ParamType","ParamType","def","encode","decode","$subPattern","sub","$normalize","$asArray","mode","isSearch","ArrayType","arrayWrap","arrayHandler","allTruthyMode","arrayUnwrap","arrayEqualsHandler","val1","val2","left","right","paramTypeFn","wrapperFn","dynamic","raw","$arrayMode","DefType","hasOwn","isShorthand","getParamDeclaration","paramName","location","noReloadOnSearch","reloadOnSearch","SEARCH","defaultConfig","paramConfig","getStaticDefaultValue","$$fn","unwrapShorthand","makeDefaultType","param_Param","Param","urlConfig","urlType","paramTypes","CONFIG","PATH","getType","arrayDefaults","arrayParamNomenclature","arrayMode","isOptional","squash","defaultPolicy","getSquashPolicy","defaultSquashPolicy","from","to","configuredKeys","getReplace","paramValues","params_1","param","changed","values1","values2","validates","isDefaultValue","tuple","replaceSpecialValues","_defaultValueCache","defaultValue","coreservices","getDefaultValue","normalized","encoded","paramTypes_ParamTypes","ParamTypes","typeQueue","defaultTypes","types","definition","dispose","definitionFn","_flushTypeQueue","valToString","defaultTypeBase","String","string","query","int","bool","Boolean","date","getFullYear","getMonth","getDate","capture","valueOf","l","r","json","stateParams_StateParams","StateParams","$inherit","newParams","$current","$to","parentParams","parents","inherited","inheritList","pathNode_PathNode","PathNode","stateOrNode","paramSchema","resolvables","views","parameters","clone","applyRawParams","pDef","paramDef","parameter","paramsFn","targetState_TargetState","TargetState","_stateRegistry","_identifier","_params","_options","_definition","matcher","relative","identifier","$state","exists","valid","base","stateName","withState","withParams","withOptions","newOpts","isDef","pathUtils_PathUtils","PathUtils","makeTargetState","registry","buildPath","targetState","toParams","buildToPath","fromPath","toPath","inheritParams","applyViewConfigs","$view","states","viewDecls","subPath","viewConfigs","createViewConfig","toKeys","noInherit","toNode","toParamVals","incomingParamVals","fromParamVals","ownParamVals","treeChanges","reloadState","node1","node2","retained","exiting","entering","keep","nonDynamicParams","retainedWithToParams","retainedNode","cloned","matching","pathA","pathB","nodeA","nodeB","predicate","elementIdx","resolvePolicies","LAZY","EAGER","WAIT","NOWAIT","RXWAIT","defaultResolvePolicy","resolvable_Resolvable","Resolvable","arg1","resolveFn","deps","policy","resolved","literal","getPolicy","thisPolicy","statePolicy","resolvePolicy","resolveContext","findNode","maybeWaitForRx","observable$","cached","take","getDependencies","resolvedDeps","resolvedValue","fromData","whens","ALL_WHENS","EAGER_WHENS","NATIVE_INJECTOR_TOKEN","resolveContext_ResolveContext","ResolveContext","_path","getTokens","getResolvable","subContext","addResolvables","newResolvables","resolvePath","matchedWhens","matchesPolicy","acceptedVals","whenOrAsync","nodeResolvables","nowait","wait","getResult","_injector","resolveContext_UIInjectorImpl","availableResolvables","_node","fromInjector","getNative","UIInjectorImpl","native","getAsync","nameBuilder","selfBuilder","$$state","dataBuilder","getUrlBuilder","$urlMatcherFactoryProvider","stateObject","parsed","parseUrl","isMatcher","navigable","getNavigableBuilder","isRoot","getParamsBuilder","paramFactory","urlParams","nonUrlParams","fromConfig","p","pathBuilder","includesBuilder","includes","resolvablesBuilder","resolveObj","getToken","provide","literal2Resolvable","useFactory","dependencies","useClass","useValue","useExisting","tuple2Resolvable","annotate","strictDi","item2Resolvable","decl","TransitionHookPhase","TransitionHookScope","stateBuilder_StateBuilder","StateBuilder","urlMatcherFactory","builders","parentName","builder","build","chain","parentFn","_state","segments","stateObject_StateObject","StateObject","stateDecl","isStateClass","__stateObjectCache","nameGlob","ref","matchingKeys","isState","stateMatcher_StateMatcher","StateMatcher","_states","isRelative","stateOrName","matchGlob","isStr","baseState","splitName","pathLength","relName","stateQueueManager_StateQueueManager","StateQueueManager","router","listeners","register","flush","registered","orphans","previousQueueLength","getState","notifyListeners","listener","s","name_1","orphanIdx","existingState","existingFutureState","stateRegistry","deregister","attachRoute","prev","abstract","rulesApi","urlService","rules","rule","urlRuleFactory","stateRegistry_StateRegistry","StateRegistry","stateQueue","_registerRoot","_root","#","onStatesChanged","stateDefinition","_deregisterTree","getChildren","_children","children","deregistered","removeRule","deregisteredStates","found","func","defaultOptions","traceData","transitionHook_TransitionHook","TransitionHook","stateContext","isSuperseded","hookPhase","RUN","isActive","eventType","hooks","waitFor","nextHook","invokeHook","invokeHooks","doneCallback","remainingHooks","runAllHooks","hook","logError","stateService","defaultErrorHandler","_deregistered","notCurrent","getNotCurrentRejection","handleError","getErrorHandler","handleResult","getResultHandler","synchronous","invokeLimit","invokeCount","handleHookResult","isTargetState","_disposed","_aborted","HANDLE_RESULT","LOG_REJECTED_RESULT","LOG_ERROR","REJECT_ERROR","THROW_ERROR","matchState","criterion","toMatch","globStrings","hookRegistry_RegisteredHook","RegisteredHook","tranSvc","matchCriteria","removeHookFromRegistry","_matchingNodes","nodes","_getDefaultMatchCriteria","_pluginapi","_getPathTypes","_getMatchingNodes","criteria","mn","pathtype","isStateHook","scope","STATE","every","makeEvent","transitionService","_registeredHooks","removeHookFn","hookRegistrationFn","matchObject","hookBuilder_HookBuilder","HookBuilder","buildHooksForPhase","phase","_getEvents","buildHooks","hookType","matchingHooks","getMatchingHooks","baseHookOptions","criteriaMatchPath","transitionHook","reverseDepthSort","factor","depthDelta","tupleSort","reverseSort","isCreate","CREATE","$transitions","reg","getHooks","stateSelf","transition_Transition","Transition","_deferred","_hookBuilder","globals","_targetState","_transitionCount","_treeChanges","createTransitionHookRegFns","onCreateHooks","onBefore","onStart","onExit","onRetain","onEnter","onFinish","onSuccess","onError","hookName","enteringStates","$from","compare","pathname","freeze","paramsChanged","fromParams","allParamDescriptors","pathNode","changedValues","descriptor","pathName","getResolveTokens","addResolvable","topath","targetNode","redirectedFrom","originalTransition","rf","redirect","redirects","redirectOpts","newOptions","newTransition","originalEnteringNodes","redirectEnteringNodes","_changedParams","tc","reload","nodeSchemas","toValues","fromValues","schema","toVals","fromVals","changes","_ignoredReason","same","newTC","pendTC","run","getHooksFor","allBeforeHooks","BEFORE","lastStartedTransitionId","transitionHistory","allRunHooks","success","SUCCESS","_error","abort","paramDefs","invalidParams","invalidValues","fromStateOrName","toStateOrName","avoidEmptyHash","diToken","quoteRegExp","surroundPattern","splitOnSlash","urlMatcher_defaultConfig","strict","caseInsensitive","urlMatcher_UrlMatcher","UrlMatcher","_cache","_segments","_compiled","matchArray","details","segment","placeholder","searchPlaceholder","patterns","last","checkParamErrors","nameValidator","matchDetails","index","lastIndex","search","fromSearch","_pattern","encodeDashes","encodeURIComponent","c","pathSegmentsAndParams","staticSegments","pathParams","queryParams","weights","weightsA","weightsB","padVal","padArrays","cmp","_pairs","reverseString","allReversed","allParams","searchParams","nPathSegments","urlm","findParam","urlMatchers","getDetails","isValid","pathString","queryString","paramDetails","__assign","urlMatcherFactory_ParamFactory","ParamFactory","urlMatcherFactory_UrlMatcherFactory","UrlMatcherFactory","strictMode","globalConfig","_isStrictMode","_isCaseInsensitive","object","urlRule_UrlRuleFactory","UrlRuleFactory","what","handler","makeRule","_what","fromUrlMatcher","fromState","fromRegExp","urlRule_BaseUrlRule","urlMatcher","_handler","matchPriority","optional","transitionTo","sticky","Number","isUrlRule","defaultRuleSortFn","urlRouter_UrlRouter","UrlRouter","sync","evt","listen","deferIntercept","urlParts","otherwise","compareFn","update","read","$url","locationService","absolute","isHtml5","html5Mode","hashPrefix","baseHref","appendBasePath","slash","cfgPort","port","protocol","host","defineProperty","interceptDeferred","enumerable","configurable","view_ViewService","ViewService","_uiViews","_viewConfigs","_viewConfigFactories","_listeners","_rootViewContext","_viewConfigFactory","_registeredUIView","_registeredUIViews","_activeViewConfigs","_onSync","normalizeUIViewTarget","rawViewName","viewAtContext","uiViewName","uiViewContextAnchor","relativeViewNameSugar","anchorState","_rootContext","viewType","factory","cfgFactory","cfgs","deactivateViewConfig","activateViewConfig","uiViewsByFqn","viewConfigDepth","count","depthCompare","depthFn","posNeg","uiViewTuples","stateDepth","matchingConfigs","matchedViewConfigs","unmatchedConfigTuples","configUpdated","allTuples","registerUIView","uiViews","available","active","vc","vcSegments","uivSegments","negOffset","fqnToFirstSegment","uiViewContext","globals_UIRouterGlobals","UIRouterGlobals","successfulTransitions","getHandlerFn","prioritySort","URLMATCHER","REGEXP","RAW","OTHER","typeSort","urlMatcherSort","useMatchPriority","idSort","urlRules_UrlRules","UrlRules","_sortFn","_rules","_id","_otherwiseFn","handlerFn","_sorted","ensureSorted","sorted","stableSort","group","_group","arrOfWrapper","wrapperA","wrapperB","cmpDiff","wrapper","urlConfig_UrlConfig","UrlConfig","_defaultSquashPolicy","locationConfig","newprefix","urlService_UrlService","UrlService","newurl","onChange","parts","defaultPrevented","best","go","applyResult","_stopListeningFn","weight","_routerInstance","locationServiceStub","locationConfigStub","router_UIRouter","UIRouter","_disposables","viewService","transitionService_TransitionService","urlRouter","stateService_StateService","_plugins","disposable","plugin","pluginInstance","getPlugin","pluginName","addCoreResolvables","TRANSITION_TOKENS","isTransition","treeChangesCleanup","replaceTransitionWithNull","redirectToHook","redirectTo","makeEnterExitRetainHook","hookFn","onExitHook","onRetainHook","onEnterHook","eagerResolvePath","lazyResolveState","resolveRemaining","loadEnteringViews","enteringViews","activateViews","exitingViews","updateGlobalState","clearCurrentTransition","updateUrl","$urlRouter","urlOptions","lazyLoadHook","lazyLoad","lazyLoadState","orig","lazyLoadFn","transitionEventType_TransitionEventType","hookOrder","ignoredHook","ignoredReason","invalidTransitionHook","defaultTransOpts","notify","custom","TransitionService","_router","_eventTypes","_criteriaPaths","_deregisterHookFns","_defineCorePaths","_defineCoreEvents","_registerCoreTransitionHooks","onCreate","hooksArray","Phase","TH","_defineEvent","_definePathType","cmpByPhase","hookScope","fns","addCoreResolves","registerIgnoredTransitionHook","registerInvalidTransitionHook","registerRedirectToHook","registerOnExitHook","registerOnRetainHook","registerOnEnterHook","eagerResolve","registerEagerResolvePath","lazyResolve","registerLazyResolveState","resolveAll","registerResolveRemaining","loadViews","registerLoadEnteringViews","registerActivateViews","updateGlobals","registerUpdateGlobalState","registerUpdateUrl","registerLazyLoadHook","StateService","invalidCallbacks","_defaultErrorHandler","$error$","stack","boundFns","_handleInvalidTargetState","toState","latestThing","latest","callbackQueue","checkForRedirect","invokeNextCallback","nextCallback","onInvalid","defautGoOpts","transOpts","getCurrentPath","latestSuccess","currentPath","rejectedTransitionHandler","isLatest","errorHandler","transitionToPromise","include","defaultHrefOpts","lossy","nav","q_$q","Promise","injector_globals","STRIP_COMMENTS","ARGUMENT_NAMES","injector_$injector","has","locals","ensureExist","$inject","keyValsToObjectR","accum","getParams","utils_parseUrl","orEmptyString","beforehash","buildUrl","loc","searchObject","locationPluginFactory","serviceClass","configurationClass","uiRouter","configuration","extendStatics","baseLocationService_BaseLocationServices","BaseLocationServices","fireAfterUpdate","_listener","_get","_location","_history","history","__extends","setPrototypeOf","__proto__","__","hashLocationService_HashLocationService","_super","HashLocationService","addEventListener","title","removeEventListener","memoryLocationService_extends","MemoryLocationService","_url","pushStateLocationService_extends","pushStateLocationService_PushStateLocationService","PushStateLocationService","_config","_getBasePrefix","basePrefix","exactBaseHrefMatch","startsWithBase","fullUrl","replaceState","pushState","memoryLocationConfig_MemoryLocationConfig","_baseHref","_port","_protocol","_host","_hashPrefix","newval","browserLocationConfig_BrowserLocationConfig","BrowserLocationConfig","_isHtml5","hostname","getBaseHref","baseTag","servicesPlugin","hashLocationPlugin","pushStateLocationPlugin","memoryLocationPlugin","UIRouterPluginBase","getNg1ViewConfigFactory","templateFactory","views_Ng1ViewConfig","hasAnyKey","ng1ViewsBuilder","compKeys","nonCompKeys","allViewKeys","viewsObject","$default","component","resolveAs","views_id","Ng1ViewConfig","getTemplate","makeComponentTemplate","bindings","controller","getController","results","controllerProvider","providerFn","templateFactory_TemplateFactory","TemplateFactory","_useHttp","minor","$templateRequest","useHttpService","asTemplate","asComponent","templateUrl","fromUrl","templateProvider","fromProvider","componentProvider","fromComponentProvider","headers","Accept","prefix","kebob","kebobed","cmpDefs","getBindings","getComponentBindings","attrName","resolveName","kebobName","bindToController","scopeBindings","bindingsObj","stateProvider_StateProvider","StateProvider","getStateHookBuilder","getLocals","$state$","$transition$","locationServices_Ng1LocationServices","Ng1LocationServices","$locationProvider","_urlListeners","_lp","monkeyPatchPathParameterType","pathType","~","/","~~","~2F","$sniffer","$browser","newUrl","$location","_runtimeServices","$on","_loc","urlRouterProvider_UrlRouterProvider","UrlRouterProvider","injectableHandler","$match","$stateParams","ruleFn","urlRules","mod_init","mod_util","mod_rtr","mod_state","mod_main","services_router","$uiRouterProvider","stateProvider","ng1LocationService","getProviderFor","serviceName","$urp","runBlock","$uiRouter","checkStrictDi","watchDigests","urlRouterProvider","$urlMatcherFactory","uiSrefDirective","uiStateDirective","uiSrefActiveDirective","viewDirective_uiView","ctx","parseStateRef","paramsOnly","paramExpr","stateDirectives_stateContext","$uiView","inheritedData","processedDef","uiState","uiStateOpts","defaultOpts","uiStateParams","getTypeInfo","isSvg","isForm","isAnchor","clickable","clickHook","getDef","button","which","ctrlKey","metaKey","shiftKey","transition_1","preventDefault","ignorePreventDefaultCount_1","bindEvents","on","events_1","event_1","off","events_2","event_2","$IsStateFilter","isFilter","$stateful","$IncludedByStateFilter","includesFilter","$ViewDirectiveFill","$controller","getControllerAs","getResolveAs","tElement","empty","$cfg","resolveCtx","link","controllerAs","controllerInstance","registerControllerCallbacks","tagRegexp_1","deregisterWatch_1","directiveEl","tagName","ctrlInstance","require","uiSrefActive","unlinkInfoFn","rawDef","uiSref","$$addStateInfo","$set","uiSrefOpts","$eval","inputAttrs","watchDeregFns","field","$observe","expr","$interpolate","$attrs","activeEqClass","deregisterStatesChangedListener","deregisterOnStartListener","deregisterStateChangeSuccessListener","uiSrefActiveEq","updateAfterTransition","handleStatesChanged","setStatesFromDefinitionObject","statesDefinition","activeClass","addStateForClass","addState","stateParams","stateInfo","splitClasses","getClasses","stateList","allClasses","fuzzyClasses","exactClasses","addClasses","removeClasses","cls","$evalAsync","newState","$uiViewScroll","rootData","transclude","tAttrs","$transclude","previousEl","currentEl","currentScope","unregister","onloadExp","autoScrollExp","renderer","leave","activeUIView","config1","config2","updateView","fromParentTagConfig","fromParentTag","newScope","$new","animEnter","animLeave","$uiViewData","$uiViewAnim","$animEnter","$animLeave","$$animLeave","$emit","$destroy","_viewData_1","cleanupLastView","hasComponentImpl","_uiCanExitId","$onInit","viewState","hookOptions","uiOnParamsChanged","viewCreationTrans_1","getNodeSchema","toSchema","fromSchema","changedToParams","changedKeys_1","newValues","uiCanExit","id_1","prevTruthyAnswer_1","ids","useAnchorScroll","$anchorScroll","scrollIntoView","lib_esm_namespaceObject"],"mappings":"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","file":"js/chunk-vendors.fd258b20.js","sourcesContent":["/**\n * Random utility functions used in the UI-Router code\n *\n * These functions are exported, but are subject to change without notice.\n *\n * @preferred @publicapi @module common\n */ /** */\nimport { isFunction, isString, isArray, isRegExp, isDate } from './predicates';\nimport { all, any, prop, curry, not } from './hof';\nimport { services } from './coreservices';\nexport var root = (typeof self === 'object' && self.self === self && self) ||\n    (typeof global === 'object' && global.global === global && global) ||\n    this;\nvar angular = root.angular || {};\nexport var fromJson = angular.fromJson || JSON.parse.bind(JSON);\nexport var toJson = angular.toJson || JSON.stringify.bind(JSON);\nexport var forEach = angular.forEach || _forEach;\nexport var extend = Object.assign || _extend;\nexport var equals = angular.equals || _equals;\nexport function identity(x) {\n    return x;\n}\nexport function noop() { }\n/**\n * Builds proxy functions on the `to` object which pass through to the `from` object.\n *\n * For each key in `fnNames`, creates a proxy function on the `to` object.\n * The proxy function calls the real function on the `from` object.\n *\n *\n * #### Example:\n * This example creates an new class instance whose functions are prebound to the new'd object.\n * ```js\n * class Foo {\n *   constructor(data) {\n *     // Binds all functions from Foo.prototype to 'this',\n *     // then copies them to 'this'\n *     bindFunctions(Foo.prototype, this, this);\n *     this.data = data;\n *   }\n *\n *   log() {\n *     console.log(this.data);\n *   }\n * }\n *\n * let myFoo = new Foo([1,2,3]);\n * var logit = myFoo.log;\n * logit(); // logs [1, 2, 3] from the myFoo 'this' instance\n * ```\n *\n * #### Example:\n * This example creates a bound version of a service function, and copies it to another object\n * ```\n *\n * var SomeService = {\n *   this.data = [3, 4, 5];\n *   this.log = function() {\n *     console.log(this.data);\n *   }\n * }\n *\n * // Constructor fn\n * function OtherThing() {\n *   // Binds all functions from SomeService to SomeService,\n *   // then copies them to 'this'\n *   bindFunctions(SomeService, this, SomeService);\n * }\n *\n * let myOtherThing = new OtherThing();\n * myOtherThing.log(); // logs [3, 4, 5] from SomeService's 'this'\n * ```\n *\n * @param source A function that returns the source object which contains the original functions to be bound\n * @param target A function that returns the target object which will receive the bound functions\n * @param bind A function that returns the object which the functions will be bound to\n * @param fnNames The function names which will be bound (Defaults to all the functions found on the 'from' object)\n * @param latebind If true, the binding of the function is delayed until the first time it's invoked\n */\nexport function createProxyFunctions(source, target, bind, fnNames, latebind) {\n    if (latebind === void 0) { latebind = false; }\n    var bindFunction = function (fnName) { return source()[fnName].bind(bind()); };\n    var makeLateRebindFn = function (fnName) {\n        return function lateRebindFunction() {\n            target[fnName] = bindFunction(fnName);\n            return target[fnName].apply(null, arguments);\n        };\n    };\n    fnNames = fnNames || Object.keys(source());\n    return fnNames.reduce(function (acc, name) {\n        acc[name] = latebind ? makeLateRebindFn(name) : bindFunction(name);\n        return acc;\n    }, target);\n}\n/**\n * prototypal inheritance helper.\n * Creates a new object which has `parent` object as its prototype, and then copies the properties from `extra` onto it\n */\nexport var inherit = function (parent, extra) { return extend(Object.create(parent), extra); };\n/** Given an array, returns true if the object is found in the array, (using indexOf) */\nexport var inArray = curry(_inArray);\nexport function _inArray(array, obj) {\n    return array.indexOf(obj) !== -1;\n}\n/**\n * Given an array, and an item, if the item is found in the array, it removes it (in-place).\n * The same array is returned\n */\nexport var removeFrom = curry(_removeFrom);\nexport function _removeFrom(array, obj) {\n    var idx = array.indexOf(obj);\n    if (idx >= 0)\n        array.splice(idx, 1);\n    return array;\n}\n/** pushes a values to an array and returns the value */\nexport var pushTo = curry(_pushTo);\nexport function _pushTo(arr, val) {\n    return arr.push(val), val;\n}\n/** Given an array of (deregistration) functions, calls all functions and removes each one from the source array */\nexport var deregAll = function (functions) {\n    return functions.slice().forEach(function (fn) {\n        typeof fn === 'function' && fn();\n        removeFrom(functions, fn);\n    });\n};\n/**\n * Applies a set of defaults to an options object.  The options object is filtered\n * to only those properties of the objects in the defaultsList.\n * Earlier objects in the defaultsList take precedence when applying defaults.\n */\nexport function defaults(opts) {\n    var defaultsList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        defaultsList[_i - 1] = arguments[_i];\n    }\n    var defaultVals = extend.apply(void 0, [{}].concat(defaultsList.reverse()));\n    return extend(defaultVals, pick(opts || {}, Object.keys(defaultVals)));\n}\n/** Reduce function that merges each element of the list into a single object, using extend */\nexport var mergeR = function (memo, item) { return extend(memo, item); };\n/**\n * Finds the common ancestor path between two states.\n *\n * @param {Object} first The first state.\n * @param {Object} second The second state.\n * @return {Array} Returns an array of state names in descending order, not including the root.\n */\nexport function ancestors(first, second) {\n    var path = [];\n    // tslint:disable-next-line:forin\n    for (var n in first.path) {\n        if (first.path[n] !== second.path[n])\n            break;\n        path.push(first.path[n]);\n    }\n    return path;\n}\n/**\n * Return a copy of the object only containing the whitelisted properties.\n *\n * #### Example:\n * ```\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = pick(foo, ['a', 'b']); // { a: 1, b: 2 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the whitelisted property names\n */\nexport function pick(obj, propNames) {\n    var objCopy = {};\n    for (var _prop in obj) {\n        if (propNames.indexOf(_prop) !== -1) {\n            objCopy[_prop] = obj[_prop];\n        }\n    }\n    return objCopy;\n}\n/**\n * Return a copy of the object omitting the blacklisted properties.\n *\n * @example\n * ```\n *\n * var foo = { a: 1, b: 2, c: 3 };\n * var ab = omit(foo, ['a', 'b']); // { c: 3 }\n * ```\n * @param obj the source object\n * @param propNames an Array of strings, which are the blacklisted property names\n */\nexport function omit(obj, propNames) {\n    return Object.keys(obj)\n        .filter(not(inArray(propNames)))\n        .reduce(function (acc, key) { return ((acc[key] = obj[key]), acc); }, {});\n}\n/**\n * Maps an array, or object to a property (by name)\n */\nexport function pluck(collection, propName) {\n    return map(collection, prop(propName));\n}\n/** Filters an Array or an Object's properties based on a predicate */\nexport function filter(collection, callback) {\n    var arr = isArray(collection), result = arr ? [] : {};\n    var accept = arr ? function (x) { return result.push(x); } : function (x, key) { return (result[key] = x); };\n    forEach(collection, function (item, i) {\n        if (callback(item, i))\n            accept(item, i);\n    });\n    return result;\n}\n/** Finds an object from an array, or a property of an object, that matches a predicate */\nexport function find(collection, callback) {\n    var result;\n    forEach(collection, function (item, i) {\n        if (result)\n            return;\n        if (callback(item, i))\n            result = item;\n    });\n    return result;\n}\n/** Given an object, returns a new object, where each property is transformed by the callback function */\nexport var mapObj = map;\n/** Maps an array or object properties using a callback function */\nexport function map(collection, callback, target) {\n    target = target || (isArray(collection) ? [] : {});\n    forEach(collection, function (item, i) { return (target[i] = callback(item, i)); });\n    return target;\n}\n/**\n * Given an object, return its enumerable property values\n *\n * @example\n * ```\n *\n * let foo = { a: 1, b: 2, c: 3 }\n * let vals = values(foo); // [ 1, 2, 3 ]\n * ```\n */\nexport var values = function (obj) { return Object.keys(obj).map(function (key) { return obj[key]; }); };\n/**\n * Reduce function that returns true if all of the values are truthy.\n *\n * @example\n * ```\n *\n * let vals = [ 1, true, {}, \"hello world\"];\n * vals.reduce(allTrueR, true); // true\n *\n * vals.push(0);\n * vals.reduce(allTrueR, true); // false\n * ```\n */\nexport var allTrueR = function (memo, elem) { return memo && elem; };\n/**\n * Reduce function that returns true if any of the values are truthy.\n *\n *  * @example\n * ```\n *\n * let vals = [ 0, null, undefined ];\n * vals.reduce(anyTrueR, true); // false\n *\n * vals.push(\"hello world\");\n * vals.reduce(anyTrueR, true); // true\n * ```\n */\nexport var anyTrueR = function (memo, elem) { return memo || elem; };\n/**\n * Reduce function which un-nests a single level of arrays\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnestR = function (memo, elem) { return memo.concat(elem); };\n/**\n * Reduce function which recursively un-nests all arrays\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * input.reduce(unnestR, []) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flattenR = function (memo, elem) {\n    return isArray(elem) ? memo.concat(elem.reduce(flattenR, [])) : pushR(memo, elem);\n};\n/**\n * Reduce function that pushes an object to an array, then returns the array.\n * Mostly just for [[flattenR]] and [[uniqR]]\n */\nexport function pushR(arr, obj) {\n    arr.push(obj);\n    return arr;\n}\n/** Reduce function that filters out duplicates */\nexport var uniqR = function (acc, token) { return (inArray(acc, token) ? acc : pushR(acc, token)); };\n/**\n * Return a new array with a single level of arrays unnested.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * unnest(input) // [ \"a\", \"b\", \"c\", \"d\", [ \"double, \"nested\" ] ]\n * ```\n */\nexport var unnest = function (arr) { return arr.reduce(unnestR, []); };\n/**\n * Return a completely flattened version of an array.\n *\n * @example\n * ```\n *\n * let input = [ [ \"a\", \"b\" ], [ \"c\", \"d\" ], [ [ \"double\", \"nested\" ] ] ];\n * flatten(input) // [ \"a\", \"b\", \"c\", \"d\", \"double, \"nested\" ]\n * ```\n */\nexport var flatten = function (arr) { return arr.reduce(flattenR, []); };\n/**\n * Given a .filter Predicate, builds a .filter Predicate which throws an error if any elements do not pass.\n * @example\n * ```\n *\n * let isNumber = (obj) => typeof(obj) === 'number';\n * let allNumbers = [ 1, 2, 3, 4, 5 ];\n * allNumbers.filter(assertPredicate(isNumber)); //OK\n *\n * let oneString = [ 1, 2, 3, 4, \"5\" ];\n * oneString.filter(assertPredicate(isNumber, \"Not all numbers\")); // throws Error(\"\"Not all numbers\"\");\n * ```\n */\nexport var assertPredicate = assertFn;\n/**\n * Given a .map function, builds a .map function which throws an error if any mapped elements do not pass a truthyness test.\n * @example\n * ```\n *\n * var data = { foo: 1, bar: 2 };\n *\n * let keys = [ 'foo', 'bar' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // values is [1, 2]\n *\n * let keys = [ 'foo', 'bar', 'baz' ]\n * let values = keys.map(assertMap(key => data[key], \"Key not found\"));\n * // throws Error(\"Key not found\")\n * ```\n */\nexport var assertMap = assertFn;\nexport function assertFn(predicateOrMap, errMsg) {\n    if (errMsg === void 0) { errMsg = 'assert failure'; }\n    return function (obj) {\n        var result = predicateOrMap(obj);\n        if (!result) {\n            throw new Error(isFunction(errMsg) ? errMsg(obj) : errMsg);\n        }\n        return result;\n    };\n}\n/**\n * Like _.pairs: Given an object, returns an array of key/value pairs\n *\n * @example\n * ```\n *\n * pairs({ foo: \"FOO\", bar: \"BAR }) // [ [ \"foo\", \"FOO\" ], [ \"bar\": \"BAR\" ] ]\n * ```\n */\nexport var pairs = function (obj) { return Object.keys(obj).map(function (key) { return [key, obj[key]]; }); };\n/**\n * Given two or more parallel arrays, returns an array of tuples where\n * each tuple is composed of [ a[i], b[i], ... z[i] ]\n *\n * @example\n * ```\n *\n * let foo = [ 0, 2, 4, 6 ];\n * let bar = [ 1, 3, 5, 7 ];\n * let baz = [ 10, 30, 50, 70 ];\n * arrayTuples(foo, bar);       // [ [0, 1], [2, 3], [4, 5], [6, 7] ]\n * arrayTuples(foo, bar, baz);  // [ [0, 1, 10], [2, 3, 30], [4, 5, 50], [6, 7, 70] ]\n * ```\n */\nexport function arrayTuples() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 0)\n        return [];\n    var maxArrayLen = args.reduce(function (min, arr) { return Math.min(arr.length, min); }, 9007199254740991); // aka 2^53 − 1 aka Number.MAX_SAFE_INTEGER\n    var result = [];\n    var _loop_1 = function (i) {\n        // This is a hot function\n        // Unroll when there are 1-4 arguments\n        switch (args.length) {\n            case 1:\n                result.push([args[0][i]]);\n                break;\n            case 2:\n                result.push([args[0][i], args[1][i]]);\n                break;\n            case 3:\n                result.push([args[0][i], args[1][i], args[2][i]]);\n                break;\n            case 4:\n                result.push([args[0][i], args[1][i], args[2][i], args[3][i]]);\n                break;\n            default:\n                result.push(args.map(function (array) { return array[i]; }));\n                break;\n        }\n    };\n    for (var i = 0; i < maxArrayLen; i++) {\n        _loop_1(i);\n    }\n    return result;\n}\n/**\n * Reduce function which builds an object from an array of [key, value] pairs.\n *\n * Each iteration sets the key/val pair on the memo object, then returns the memo for the next iteration.\n *\n * Each keyValueTuple should be an array with values [ key: string, value: any ]\n *\n * @example\n * ```\n *\n * var pairs = [ [\"fookey\", \"fooval\"], [\"barkey\", \"barval\"] ]\n *\n * var pairsToObj = pairs.reduce((memo, pair) => applyPairs(memo, pair), {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n *\n * // Or, more simply:\n * var pairsToObj = pairs.reduce(applyPairs, {})\n * // pairsToObj == { fookey: \"fooval\", barkey: \"barval\" }\n * ```\n */\nexport function applyPairs(memo, keyValTuple) {\n    var key, value;\n    if (isArray(keyValTuple))\n        key = keyValTuple[0], value = keyValTuple[1];\n    if (!isString(key))\n        throw new Error('invalid parameters to applyPairs');\n    memo[key] = value;\n    return memo;\n}\n/** Get the last element of an array */\nexport function tail(arr) {\n    return (arr.length && arr[arr.length - 1]) || undefined;\n}\n/**\n * shallow copy from src to dest\n */\nexport function copy(src, dest) {\n    if (dest)\n        Object.keys(dest).forEach(function (key) { return delete dest[key]; });\n    if (!dest)\n        dest = {};\n    return extend(dest, src);\n}\n/** Naive forEach implementation works with Objects or Arrays */\nfunction _forEach(obj, cb, _this) {\n    if (isArray(obj))\n        return obj.forEach(cb, _this);\n    Object.keys(obj).forEach(function (key) { return cb(obj[key], key); });\n}\nexport function _extend(toObj) {\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n        if (!obj)\n            continue;\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; j++) {\n            toObj[keys[j]] = obj[keys[j]];\n        }\n    }\n    return toObj;\n}\nfunction _equals(o1, o2) {\n    if (o1 === o2)\n        return true;\n    if (o1 === null || o2 === null)\n        return false;\n    if (o1 !== o1 && o2 !== o2)\n        return true; // NaN === NaN\n    var t1 = typeof o1, t2 = typeof o2;\n    if (t1 !== t2 || t1 !== 'object')\n        return false;\n    var tup = [o1, o2];\n    if (all(isArray)(tup))\n        return _arraysEq(o1, o2);\n    if (all(isDate)(tup))\n        return o1.getTime() === o2.getTime();\n    if (all(isRegExp)(tup))\n        return o1.toString() === o2.toString();\n    if (all(isFunction)(tup))\n        return true; // meh\n    var predicates = [isFunction, isArray, isDate, isRegExp];\n    if (predicates.map(any).reduce(function (b, fn) { return b || !!fn(tup); }, false))\n        return false;\n    var keys = {};\n    // tslint:disable-next-line:forin\n    for (var key in o1) {\n        if (!_equals(o1[key], o2[key]))\n            return false;\n        keys[key] = true;\n    }\n    for (var key in o2) {\n        if (!keys[key])\n            return false;\n    }\n    return true;\n}\nfunction _arraysEq(a1, a2) {\n    if (a1.length !== a2.length)\n        return false;\n    return arrayTuples(a1, a2).reduce(function (b, t) { return b && _equals(t[0], t[1]); }, true);\n}\n// issue #2676\nexport var silenceUncaughtInPromise = function (promise) { return promise.catch(function (e) { return 0; }) && promise; };\nexport var silentRejection = function (error) { return silenceUncaughtInPromise(services.$q.reject(error)); };\n//# sourceMappingURL=common.js.map","/** Predicates\n *\n * These predicates return true/false based on the input.\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_predicates\n */ /** */\nimport { and, not, pipe, prop, or } from './hof';\nvar toStr = Object.prototype.toString;\nvar tis = function (t) { return function (x) { return typeof x === t; }; };\nexport var isUndefined = tis('undefined');\nexport var isDefined = not(isUndefined);\nexport var isNull = function (o) { return o === null; };\nexport var isNullOrUndefined = or(isNull, isUndefined);\nexport var isFunction = tis('function');\nexport var isNumber = tis('number');\nexport var isString = tis('string');\nexport var isObject = function (x) { return x !== null && typeof x === 'object'; };\nexport var isArray = Array.isArray;\nexport var isDate = (function (x) { return toStr.call(x) === '[object Date]'; });\nexport var isRegExp = (function (x) { return toStr.call(x) === '[object RegExp]'; });\n/**\n * Predicate which checks if a value is injectable\n *\n * A value is \"injectable\" if it is a function, or if it is an ng1 array-notation-style array\n * where all the elements in the array are Strings, except the last one, which is a Function\n */\nexport function isInjectable(val) {\n    if (isArray(val) && val.length) {\n        var head = val.slice(0, -1), tail = val.slice(-1);\n        return !(head.filter(not(isString)).length || tail.filter(not(isFunction)).length);\n    }\n    return isFunction(val);\n}\n/**\n * Predicate which checks if a value looks like a Promise\n *\n * It is probably a Promise if it's an object, and it has a `then` property which is a Function\n */\nexport var isPromise = and(isObject, pipe(prop('then'), isFunction));\n//# sourceMappingURL=predicates.js.map","/**\n * Higher order functions\n *\n * These utility functions are exported, but are subject to change without notice.\n *\n * @module common_hof\n */ /** */\n/**\n * Returns a new function for [Partial Application](https://en.wikipedia.org/wiki/Partial_application) of the original function.\n *\n * Given a function with N parameters, returns a new function that supports partial application.\n * The new function accepts anywhere from 1 to N parameters.  When that function is called with M parameters,\n * where M is less than N, it returns a new function that accepts the remaining parameters.  It continues to\n * accept more parameters until all N parameters have been supplied.\n *\n *\n * This contrived example uses a partially applied function as an predicate, which returns true\n * if an object is found in both arrays.\n * @example\n * ```\n * // returns true if an object is in both of the two arrays\n * function inBoth(array1, array2, object) {\n *   return array1.indexOf(object) !== -1 &&\n *          array2.indexOf(object) !== 1;\n * }\n * let obj1, obj2, obj3, obj4, obj5, obj6, obj7\n * let foos = [obj1, obj3]\n * let bars = [obj3, obj4, obj5]\n *\n * // A curried \"copy\" of inBoth\n * let curriedInBoth = curry(inBoth);\n * // Partially apply both the array1 and array2\n * let inFoosAndBars = curriedInBoth(foos, bars);\n *\n * // Supply the final argument; since all arguments are\n * // supplied, the original inBoth function is then called.\n * let obj1InBoth = inFoosAndBars(obj1); // false\n *\n * // Use the inFoosAndBars as a predicate.\n * // Filter, on each iteration, supplies the final argument\n * let allObjs = [ obj1, obj2, obj3, obj4, obj5, obj6, obj7 ];\n * let foundInBoth = allObjs.filter(inFoosAndBars); // [ obj3 ]\n *\n * ```\n *\n * Stolen from: http://stackoverflow.com/questions/4394747/javascript-curry-function\n *\n * @param fn\n * @returns {*|function(): (*|any)}\n */\nexport function curry(fn) {\n    var initial_args = [].slice.apply(arguments, [1]);\n    var func_args_length = fn.length;\n    function curried(args) {\n        if (args.length >= func_args_length)\n            return fn.apply(null, args);\n        return function () {\n            return curried(args.concat([].slice.apply(arguments)));\n        };\n    }\n    return curried(initial_args);\n}\n/**\n * Given a varargs list of functions, returns a function that composes the argument functions, right-to-left\n * given: f(x), g(x), h(x)\n * let composed = compose(f,g,h)\n * then, composed is: f(g(h(x)))\n */\nexport function compose() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n        var i = start, result = args[start].apply(this, arguments);\n        while (i--)\n            result = args[i].call(this, result);\n        return result;\n    };\n}\n/**\n * Given a varargs list of functions, returns a function that is composes the argument functions, left-to-right\n * given: f(x), g(x), h(x)\n * let piped = pipe(f,g,h);\n * then, piped is: h(g(f(x)))\n */\nexport function pipe() {\n    var funcs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        funcs[_i] = arguments[_i];\n    }\n    return compose.apply(null, [].slice.call(arguments).reverse());\n}\n/**\n * Given a property name, returns a function that returns that property from an object\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = prop(\"name\");\n * getName(obj) === \"blarg\"\n */\nexport var prop = function (name) { return function (obj) { return obj && obj[name]; }; };\n/**\n * Given a property name and a value, returns a function that returns a boolean based on whether\n * the passed object has a property that matches the value\n * let obj = { foo: 1, name: \"blarg\" };\n * let getName = propEq(\"name\", \"blarg\");\n * getName(obj) === true\n */\nexport var propEq = curry(function (name, _val, obj) { return obj && obj[name] === _val; });\n/**\n * Given a dotted property name, returns a function that returns a nested property from an object, or undefined\n * let obj = { id: 1, nestedObj: { foo: 1, name: \"blarg\" }, };\n * let getName = prop(\"nestedObj.name\");\n * getName(obj) === \"blarg\"\n * let propNotFound = prop(\"this.property.doesnt.exist\");\n * propNotFound(obj) === undefined\n */\nexport var parse = function (name) { return pipe.apply(null, name.split('.').map(prop)); };\n/**\n * Given a function that returns a truthy or falsey value, returns a\n * function that returns the opposite (falsey or truthy) value given the same inputs\n */\nexport var not = function (fn) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return !fn.apply(null, args);\n}; };\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if both functions return truthy for the given arguments\n */\nexport function and(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) && fn2.apply(null, args);\n    };\n}\n/**\n * Given two functions that return truthy or falsey values, returns a function that returns truthy\n * if at least one of the functions returns truthy for the given arguments\n */\nexport function or(fn1, fn2) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return fn1.apply(null, args) || fn2.apply(null, args);\n    };\n}\n/**\n * Check if all the elements of an array match a predicate function\n *\n * @param fn1 a predicate function `fn1`\n * @returns a function which takes an array and returns true if `fn1` is true for all elements of the array\n */\nexport var all = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b && !!fn1(x); }, true); }; };\n// tslint:disable-next-line:variable-name\nexport var any = function (fn1) { return function (arr) { return arr.reduce(function (b, x) { return b || !!fn1(x); }, false); }; };\n/** Given a class, returns a Predicate function that returns true if the object is of that class */\nexport var is = function (ctor) { return function (obj) {\n    return (obj != null && obj.constructor === ctor) || obj instanceof ctor;\n}; };\n/** Given a value, returns a Predicate function that returns true if another value is === equal to the original value */\nexport var eq = function (value) { return function (other) { return value === other; }; };\n/** Given a value, returns a function which returns the value */\nexport var val = function (v) { return function () { return v; }; };\nexport function invoke(fnName, args) {\n    return function (obj) { return obj[fnName].apply(obj, args); };\n}\n/**\n * Sorta like Pattern Matching (a functional programming conditional construct)\n *\n * See http://c2.com/cgi/wiki?PatternMatching\n *\n * This is a conditional construct which allows a series of predicates and output functions\n * to be checked and then applied.  Each predicate receives the input.  If the predicate\n * returns truthy, then its matching output function (mapping function) is provided with\n * the input and, then the result is returned.\n *\n * Each combination (2-tuple) of predicate + output function should be placed in an array\n * of size 2: [ predicate, mapFn ]\n *\n * These 2-tuples should be put in an outer array.\n *\n * @example\n * ```\n *\n * // Here's a 2-tuple where the first element is the isString predicate\n * // and the second element is a function that returns a description of the input\n * let firstTuple = [ angular.isString, (input) => `Heres your string ${input}` ];\n *\n * // Second tuple: predicate \"isNumber\", mapfn returns a description\n * let secondTuple = [ angular.isNumber, (input) => `(${input}) That's a number!` ];\n *\n * let third = [ (input) => input === null,  (input) => `Oh, null...` ];\n *\n * let fourth = [ (input) => input === undefined,  (input) => `notdefined` ];\n *\n * let descriptionOf = pattern([ firstTuple, secondTuple, third, fourth ]);\n *\n * console.log(descriptionOf(undefined)); // 'notdefined'\n * console.log(descriptionOf(55)); // '(55) That's a number!'\n * console.log(descriptionOf(\"foo\")); // 'Here's your string foo'\n * ```\n *\n * @param struct A 2D array.  Each element of the array should be an array, a 2-tuple,\n * with a Predicate and a mapping/output function\n * @returns {function(any): *}\n */\nexport function pattern(struct) {\n    return function (x) {\n        for (var i = 0; i < struct.length; i++) {\n            if (struct[i][0](x))\n                return struct[i][1](x);\n        }\n    };\n}\n//# sourceMappingURL=hof.js.map","var noImpl = function (fnname) { return function () {\n    throw new Error(\"No implementation for \" + fnname + \". The framework specific code did not implement this method.\");\n}; };\nexport var makeStub = function (service, methods) {\n    return methods.reduce(function (acc, key) { return ((acc[key] = noImpl(service + \".\" + key + \"()\")), acc); }, {});\n};\nvar services = {\n    $q: undefined,\n    $injector: undefined,\n};\nexport { services };\n//# sourceMappingURL=coreservices.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * oclazyload - Load modules on demand (lazy load) with angularJS\n * @version v1.0.10\n * @link https://github.com/ocombe/ocLazyLoad\n * @license MIT\n * @author Olivier Combe <olivier.combe@gmail.com>\n */\n(function (angular, window) {\n    'use strict';\n\n    var regModules = ['ng', 'oc.lazyLoad'],\n        regInvokes = {},\n        regConfigs = [],\n        modulesToLoad = [],\n        // modules to load from angular.module or other sources\n    realModules = [],\n        // real modules called from angular.module\n    recordDeclarations = [],\n        broadcast = angular.noop,\n        runBlocks = {},\n        justLoaded = [];\n\n    var ocLazyLoad = angular.module('oc.lazyLoad', ['ng']);\n\n    ocLazyLoad.provider('$ocLazyLoad', [\"$controllerProvider\", \"$provide\", \"$compileProvider\", \"$filterProvider\", \"$injector\", \"$animateProvider\", function ($controllerProvider, $provide, $compileProvider, $filterProvider, $injector, $animateProvider) {\n        var modules = {},\n            providers = {\n            $controllerProvider: $controllerProvider,\n            $compileProvider: $compileProvider,\n            $filterProvider: $filterProvider,\n            $provide: $provide, // other things (constant, decorator, provider, factory, service)\n            $injector: $injector,\n            $animateProvider: $animateProvider\n        },\n            debug = false,\n            events = false,\n            moduleCache = [],\n            modulePromises = {};\n\n        moduleCache.push = function (value) {\n            if (this.indexOf(value) === -1) {\n                Array.prototype.push.apply(this, arguments);\n            }\n        };\n\n        this.config = function (config) {\n            // If we want to define modules configs\n            if (angular.isDefined(config.modules)) {\n                if (angular.isArray(config.modules)) {\n                    angular.forEach(config.modules, function (moduleConfig) {\n                        modules[moduleConfig.name] = moduleConfig;\n                    });\n                } else {\n                    modules[config.modules.name] = config.modules;\n                }\n            }\n\n            if (angular.isDefined(config.debug)) {\n                debug = config.debug;\n            }\n\n            if (angular.isDefined(config.events)) {\n                events = config.events;\n            }\n        };\n\n        /**\r\n         * Get the list of existing registered modules\r\n         * @param element\r\n         */\n        this._init = function _init(element) {\n            // this is probably useless now because we override angular.bootstrap\n            if (modulesToLoad.length === 0) {\n                var elements = [element],\n                    names = ['ng:app', 'ng-app', 'x-ng-app', 'data-ng-app'],\n                    NG_APP_CLASS_REGEXP = /\\sng[:\\-]app(:\\s*([\\w\\d_]+);?)?\\s/,\n                    append = function append(elm) {\n                    return elm && elements.push(elm);\n                };\n\n                angular.forEach(names, function (name) {\n                    names[name] = true;\n                    append(document.getElementById(name));\n                    name = name.replace(':', '\\\\:');\n                    if (typeof element[0] !== 'undefined' && element[0].querySelectorAll) {\n                        angular.forEach(element[0].querySelectorAll('.' + name), append);\n                        angular.forEach(element[0].querySelectorAll('.' + name + '\\\\:'), append);\n                        angular.forEach(element[0].querySelectorAll('[' + name + ']'), append);\n                    }\n                });\n\n                angular.forEach(elements, function (elm) {\n                    if (modulesToLoad.length === 0) {\n                        var className = ' ' + element.className + ' ';\n                        var match = NG_APP_CLASS_REGEXP.exec(className);\n                        if (match) {\n                            modulesToLoad.push((match[2] || '').replace(/\\s+/g, ','));\n                        } else {\n                            angular.forEach(elm.attributes, function (attr) {\n                                if (modulesToLoad.length === 0 && names[attr.name]) {\n                                    modulesToLoad.push(attr.value);\n                                }\n                            });\n                        }\n                    }\n                });\n            }\n\n            if (modulesToLoad.length === 0 && !((window.jasmine || window.mocha) && angular.isDefined(angular.mock))) {\n                console.error('No module found during bootstrap, unable to init ocLazyLoad. You should always use the ng-app directive or angular.boostrap when you use ocLazyLoad.');\n            }\n\n            var addReg = function addReg(moduleName) {\n                if (regModules.indexOf(moduleName) === -1) {\n                    // register existing modules\n                    regModules.push(moduleName);\n                    var mainModule = angular.module(moduleName);\n\n                    // register existing components (directives, services, ...)\n                    _invokeQueue(null, mainModule._invokeQueue, moduleName);\n                    _invokeQueue(null, mainModule._configBlocks, moduleName); // angular 1.3+\n\n                    angular.forEach(mainModule.requires, addReg);\n                }\n            };\n\n            angular.forEach(modulesToLoad, function (moduleName) {\n                addReg(moduleName);\n            });\n\n            modulesToLoad = []; // reset for next bootstrap\n            recordDeclarations.pop(); // wait for the next lazy load\n        };\n\n        /**\r\n         * Like JSON.stringify but that doesn't throw on circular references\r\n         * @param obj\r\n         */\n        var stringify = function stringify(obj) {\n            try {\n                return JSON.stringify(obj);\n            } catch (e) {\n                var cache = [];\n                return JSON.stringify(obj, function (key, value) {\n                    if (angular.isObject(value) && value !== null) {\n                        if (cache.indexOf(value) !== -1) {\n                            // Circular reference found, discard key\n                            return;\n                        }\n                        // Store value in our collection\n                        cache.push(value);\n                    }\n                    return value;\n                });\n            }\n        };\n\n        var hashCode = function hashCode(str) {\n            var hash = 0,\n                i,\n                chr,\n                len;\n            if (str.length == 0) {\n                return hash;\n            }\n            for (i = 0, len = str.length; i < len; i++) {\n                chr = str.charCodeAt(i);\n                hash = (hash << 5) - hash + chr;\n                hash |= 0; // Convert to 32bit integer\n            }\n            return hash;\n        };\n\n        function _register(providers, registerModules, params) {\n            if (registerModules) {\n                var k,\n                    moduleName,\n                    moduleFn,\n                    tempRunBlocks = [];\n                for (k = registerModules.length - 1; k >= 0; k--) {\n                    moduleName = registerModules[k];\n                    if (!angular.isString(moduleName)) {\n                        moduleName = getModuleName(moduleName);\n                    }\n                    if (!moduleName || justLoaded.indexOf(moduleName) !== -1 || modules[moduleName] && realModules.indexOf(moduleName) === -1) {\n                        continue;\n                    }\n                    // new if not registered\n                    var newModule = regModules.indexOf(moduleName) === -1;\n                    moduleFn = ngModuleFct(moduleName);\n                    if (newModule) {\n                        regModules.push(moduleName);\n                        _register(providers, moduleFn.requires, params);\n                    }\n                    if (moduleFn._runBlocks.length > 0) {\n                        // new run blocks detected! Replace the old ones (if existing)\n                        runBlocks[moduleName] = [];\n                        while (moduleFn._runBlocks.length > 0) {\n                            runBlocks[moduleName].push(moduleFn._runBlocks.shift());\n                        }\n                    }\n                    if (angular.isDefined(runBlocks[moduleName]) && (newModule || params.rerun)) {\n                        tempRunBlocks = tempRunBlocks.concat(runBlocks[moduleName]);\n                    }\n                    _invokeQueue(providers, moduleFn._invokeQueue, moduleName, params.reconfig);\n                    _invokeQueue(providers, moduleFn._configBlocks, moduleName, params.reconfig); // angular 1.3+\n                    broadcast(newModule ? 'ocLazyLoad.moduleLoaded' : 'ocLazyLoad.moduleReloaded', moduleName);\n                    registerModules.pop();\n                    justLoaded.push(moduleName);\n                }\n                // execute the run blocks at the end\n                var instanceInjector = providers.getInstanceInjector();\n                angular.forEach(tempRunBlocks, function (fn) {\n                    instanceInjector.invoke(fn);\n                });\n            }\n        }\n\n        function _registerInvokeList(args, moduleName) {\n            var invokeList = args[2][0],\n                type = args[1],\n                newInvoke = false;\n            if (angular.isUndefined(regInvokes[moduleName])) {\n                regInvokes[moduleName] = {};\n            }\n            if (angular.isUndefined(regInvokes[moduleName][type])) {\n                regInvokes[moduleName][type] = {};\n            }\n            var onInvoke = function onInvoke(invokeName, invoke) {\n                if (!regInvokes[moduleName][type].hasOwnProperty(invokeName)) {\n                    regInvokes[moduleName][type][invokeName] = [];\n                }\n                if (checkHashes(invoke, regInvokes[moduleName][type][invokeName])) {\n                    newInvoke = true;\n                    regInvokes[moduleName][type][invokeName].push(invoke);\n                    broadcast('ocLazyLoad.componentLoaded', [moduleName, type, invokeName]);\n                }\n            };\n\n            function checkHashes(potentialNew, invokes) {\n                var isNew = true,\n                    newHash;\n                if (invokes.length) {\n                    newHash = signature(potentialNew);\n                    angular.forEach(invokes, function (invoke) {\n                        isNew = isNew && signature(invoke) !== newHash;\n                    });\n                }\n                return isNew;\n            }\n\n            function signature(data) {\n                if (angular.isArray(data)) {\n                    // arrays are objects, we need to test for it first\n                    return hashCode(data.toString());\n                } else if (angular.isObject(data)) {\n                    // constants & values for example\n                    return hashCode(stringify(data));\n                } else {\n                    if (angular.isDefined(data) && data !== null) {\n                        return hashCode(data.toString());\n                    } else {\n                        // null & undefined constants\n                        return data;\n                    }\n                }\n            }\n\n            if (angular.isString(invokeList)) {\n                onInvoke(invokeList, args[2][1]);\n            } else if (angular.isObject(invokeList)) {\n                angular.forEach(invokeList, function (invoke, key) {\n                    if (angular.isString(invoke)) {\n                        // decorators for example\n                        onInvoke(invoke, invokeList[1]);\n                    } else {\n                        // components registered as object lists {\"componentName\": function() {}}\n                        onInvoke(key, invoke);\n                    }\n                });\n            } else {\n                return false;\n            }\n            return newInvoke;\n        }\n\n        function _invokeQueue(providers, queue, moduleName, reconfig) {\n            if (!queue) {\n                return;\n            }\n\n            var i, len, args, provider;\n            for (i = 0, len = queue.length; i < len; i++) {\n                args = queue[i];\n                if (angular.isArray(args)) {\n                    if (providers !== null) {\n                        if (providers.hasOwnProperty(args[0])) {\n                            provider = providers[args[0]];\n                        } else {\n                            throw new Error('unsupported provider ' + args[0]);\n                        }\n                    }\n                    var isNew = _registerInvokeList(args, moduleName);\n                    if (args[1] !== 'invoke') {\n                        if (isNew && angular.isDefined(provider)) {\n                            provider[args[1]].apply(provider, args[2]);\n                        }\n                    } else {\n                        // config block\n                        var callInvoke = function callInvoke(fct) {\n                            var invoked = regConfigs.indexOf(moduleName + '-' + fct);\n                            if (invoked === -1 || reconfig) {\n                                if (invoked === -1) {\n                                    regConfigs.push(moduleName + '-' + fct);\n                                }\n                                if (angular.isDefined(provider)) {\n                                    provider[args[1]].apply(provider, args[2]);\n                                }\n                            }\n                        };\n                        if (angular.isFunction(args[2][0])) {\n                            callInvoke(args[2][0]);\n                        } else if (angular.isArray(args[2][0])) {\n                            for (var j = 0, jlen = args[2][0].length; j < jlen; j++) {\n                                if (angular.isFunction(args[2][0][j])) {\n                                    callInvoke(args[2][0][j]);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        function getModuleName(module) {\n            var moduleName = null;\n            if (angular.isString(module)) {\n                moduleName = module;\n            } else if (angular.isObject(module) && module.hasOwnProperty('name') && angular.isString(module.name)) {\n                moduleName = module.name;\n            }\n            return moduleName;\n        }\n\n        function moduleExists(moduleName) {\n            if (!angular.isString(moduleName)) {\n                return false;\n            }\n            try {\n                return ngModuleFct(moduleName);\n            } catch (e) {\n                if (/No module/.test(e) || e.message.indexOf('$injector:nomod') > -1) {\n                    return false;\n                }\n            }\n        }\n\n        this.$get = [\"$log\", \"$rootElement\", \"$rootScope\", \"$cacheFactory\", \"$q\", function ($log, $rootElement, $rootScope, $cacheFactory, $q) {\n            var instanceInjector,\n                filesCache = $cacheFactory('ocLazyLoad');\n\n            if (!debug) {\n                $log = {};\n                $log['error'] = angular.noop;\n                $log['warn'] = angular.noop;\n                $log['info'] = angular.noop;\n            }\n\n            // Make this lazy because when $get() is called the instance injector hasn't been assigned to the rootElement yet\n            providers.getInstanceInjector = function () {\n                return instanceInjector ? instanceInjector : instanceInjector = $rootElement.data('$injector') || angular.injector();\n            };\n\n            broadcast = function broadcast(eventName, params) {\n                if (events) {\n                    $rootScope.$broadcast(eventName, params);\n                }\n                if (debug) {\n                    $log.info(eventName, params);\n                }\n            };\n\n            function reject(e) {\n                var deferred = $q.defer();\n                $log.error(e.message);\n                deferred.reject(e);\n                return deferred.promise;\n            }\n\n            return {\n                _broadcast: broadcast,\n\n                _$log: $log,\n\n                /**\r\n                 * Returns the files cache used by the loaders to store the files currently loading\r\n                 * @returns {*}\r\n                 */\n                _getFilesCache: function getFilesCache() {\n                    return filesCache;\n                },\n\n                /**\r\n                 * Let the service know that it should monitor angular.module because files are loading\r\n                 * @param watch boolean\r\n                 */\n                toggleWatch: function toggleWatch(watch) {\n                    if (watch) {\n                        recordDeclarations.push(true);\n                    } else {\n                        recordDeclarations.pop();\n                    }\n                },\n\n                /**\r\n                 * Let you get a module config object\r\n                 * @param moduleName String the name of the module\r\n                 * @returns {*}\r\n                 */\n                getModuleConfig: function getModuleConfig(moduleName) {\n                    if (!angular.isString(moduleName)) {\n                        throw new Error('You need to give the name of the module to get');\n                    }\n                    if (!modules[moduleName]) {\n                        return null;\n                    }\n                    return angular.copy(modules[moduleName]);\n                },\n\n                /**\r\n                 * Let you define a module config object\r\n                 * @param moduleConfig Object the module config object\r\n                 * @returns {*}\r\n                 */\n                setModuleConfig: function setModuleConfig(moduleConfig) {\n                    if (!angular.isObject(moduleConfig)) {\n                        throw new Error('You need to give the module config object to set');\n                    }\n                    modules[moduleConfig.name] = moduleConfig;\n                    return moduleConfig;\n                },\n\n                /**\r\n                 * Returns the list of loaded modules\r\n                 * @returns {string[]}\r\n                 */\n                getModules: function getModules() {\n                    return regModules;\n                },\n\n                /**\r\n                 * Let you check if a module has been loaded into Angular or not\r\n                 * @param modulesNames String/Object a module name, or a list of module names\r\n                 * @returns {boolean}\r\n                 */\n                isLoaded: function isLoaded(modulesNames) {\n                    var moduleLoaded = function moduleLoaded(module) {\n                        var isLoaded = regModules.indexOf(module) > -1;\n                        if (!isLoaded) {\n                            isLoaded = !!moduleExists(module);\n                        }\n                        return isLoaded;\n                    };\n                    if (angular.isString(modulesNames)) {\n                        modulesNames = [modulesNames];\n                    }\n                    if (angular.isArray(modulesNames)) {\n                        var i, len;\n                        for (i = 0, len = modulesNames.length; i < len; i++) {\n                            if (!moduleLoaded(modulesNames[i])) {\n                                return false;\n                            }\n                        }\n                        return true;\n                    } else {\n                        throw new Error('You need to define the module(s) name(s)');\n                    }\n                },\n\n                /**\r\n                 * Given a module, return its name\r\n                 * @param module\r\n                 * @returns {String}\r\n                 */\n                _getModuleName: getModuleName,\n\n                /**\r\n                 * Returns a module if it exists\r\n                 * @param moduleName\r\n                 * @returns {module}\r\n                 */\n                _getModule: function getModule(moduleName) {\n                    try {\n                        return ngModuleFct(moduleName);\n                    } catch (e) {\n                        // this error message really suxx\n                        if (/No module/.test(e) || e.message.indexOf('$injector:nomod') > -1) {\n                            e.message = 'The module \"' + stringify(moduleName) + '\" that you are trying to load does not exist. ' + e.message;\n                        }\n                        throw e;\n                    }\n                },\n\n                /**\r\n                 * Check if a module exists and returns it if it does\r\n                 * @param moduleName\r\n                 * @returns {boolean}\r\n                 */\n                moduleExists: moduleExists,\n\n                /**\r\n                 * Load the dependencies, and might try to load new files depending on the config\r\n                 * @param moduleName (String or Array of Strings)\r\n                 * @param localParams\r\n                 * @returns {*}\r\n                 * @private\r\n                 */\n                _loadDependencies: function _loadDependencies(moduleName, localParams) {\n                    var loadedModule,\n                        requires,\n                        diff,\n                        promisesList = [],\n                        self = this;\n\n                    moduleName = self._getModuleName(moduleName);\n\n                    if (moduleName === null) {\n                        return $q.when();\n                    } else {\n                        try {\n                            loadedModule = self._getModule(moduleName);\n                        } catch (e) {\n                            return reject(e);\n                        }\n                        // get unloaded requires\n                        requires = self.getRequires(loadedModule);\n                    }\n\n                    angular.forEach(requires, function (requireEntry) {\n                        // If no configuration is provided, try and find one from a previous load.\n                        // If there isn't one, bail and let the normal flow run\n                        if (angular.isString(requireEntry)) {\n                            var config = self.getModuleConfig(requireEntry);\n                            if (config === null) {\n                                moduleCache.push(requireEntry); // We don't know about this module, but something else might, so push it anyway.\n                                return;\n                            }\n                            requireEntry = config;\n                            // ignore the name because it's probably not a real module name\n                            config.name = undefined;\n                        }\n\n                        // Check if this dependency has been loaded previously\n                        if (self.moduleExists(requireEntry.name)) {\n                            // compare against the already loaded module to see if the new definition adds any new files\n                            diff = requireEntry.files.filter(function (n) {\n                                return self.getModuleConfig(requireEntry.name).files.indexOf(n) < 0;\n                            });\n\n                            // If the module was redefined, advise via the console\n                            if (diff.length !== 0) {\n                                self._$log.warn('Module \"', moduleName, '\" attempted to redefine configuration for dependency. \"', requireEntry.name, '\"\\n Additional Files Loaded:', diff);\n                            }\n\n                            // Push everything to the file loader, it will weed out the duplicates.\n                            if (angular.isDefined(self.filesLoader)) {\n                                // if a files loader is defined\n                                promisesList.push(self.filesLoader(requireEntry, localParams).then(function () {\n                                    return self._loadDependencies(requireEntry);\n                                }));\n                            } else {\n                                return reject(new Error('Error: New dependencies need to be loaded from external files (' + requireEntry.files + '), but no loader has been defined.'));\n                            }\n                            return;\n                        } else if (angular.isArray(requireEntry)) {\n                            var files = [];\n                            angular.forEach(requireEntry, function (entry) {\n                                // let's check if the entry is a file name or a config name\n                                var config = self.getModuleConfig(entry);\n                                if (config === null) {\n                                    files.push(entry);\n                                } else if (config.files) {\n                                    files = files.concat(config.files);\n                                }\n                            });\n                            if (files.length > 0) {\n                                requireEntry = {\n                                    files: files\n                                };\n                            }\n                        } else if (angular.isObject(requireEntry)) {\n                            if (requireEntry.hasOwnProperty('name') && requireEntry['name']) {\n                                // The dependency doesn't exist in the module cache and is a new configuration, so store and push it.\n                                self.setModuleConfig(requireEntry);\n                                moduleCache.push(requireEntry['name']);\n                            }\n                        }\n\n                        // Check if the dependency has any files that need to be loaded. If there are, push a new promise to the promise list.\n                        if (angular.isDefined(requireEntry.files) && requireEntry.files.length !== 0) {\n                            if (angular.isDefined(self.filesLoader)) {\n                                // if a files loader is defined\n                                promisesList.push(self.filesLoader(requireEntry, localParams).then(function () {\n                                    return self._loadDependencies(requireEntry);\n                                }));\n                            } else {\n                                return reject(new Error('Error: the module \"' + requireEntry.name + '\" is defined in external files (' + requireEntry.files + '), but no loader has been defined.'));\n                            }\n                        }\n                    });\n\n                    // Create a wrapper promise to watch the promise list and resolve it once everything is done.\n                    return $q.all(promisesList);\n                },\n\n                /**\r\n                 * Inject new modules into Angular\r\n                 * @param moduleName\r\n                 * @param localParams\r\n                 * @param real\r\n                 */\n                inject: function inject(moduleName) {\n                    var localParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n                    var real = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];\n\n                    var self = this,\n                        deferred = $q.defer();\n                    if (angular.isDefined(moduleName) && moduleName !== null) {\n                        if (angular.isArray(moduleName)) {\n                            var promisesList = [];\n                            angular.forEach(moduleName, function (module) {\n                                promisesList.push(self.inject(module, localParams, real));\n                            });\n                            return $q.all(promisesList);\n                        } else {\n                            self._addToLoadList(self._getModuleName(moduleName), true, real);\n                        }\n                    }\n                    if (modulesToLoad.length > 0) {\n                        var res = modulesToLoad.slice(); // clean copy\n                        var loadNext = function loadNext(moduleName) {\n                            moduleCache.push(moduleName);\n                            modulePromises[moduleName] = deferred.promise;\n                            self._loadDependencies(moduleName, localParams).then(function success() {\n                                try {\n                                    justLoaded = [];\n                                    _register(providers, moduleCache, localParams);\n                                } catch (e) {\n                                    self._$log.error(e.message);\n                                    deferred.reject(e);\n                                    return;\n                                }\n\n                                if (modulesToLoad.length > 0) {\n                                    loadNext(modulesToLoad.shift()); // load the next in list\n                                } else {\n                                        deferred.resolve(res); // everything has been loaded, resolve\n                                    }\n                            }, function error(err) {\n                                deferred.reject(err);\n                            });\n                        };\n\n                        // load the first in list\n                        loadNext(modulesToLoad.shift());\n                    } else if (localParams && localParams.name && modulePromises[localParams.name]) {\n                        return modulePromises[localParams.name];\n                    } else {\n                        deferred.resolve();\n                    }\n                    return deferred.promise;\n                },\n\n                /**\r\n                 * Get the list of required modules/services/... for this module\r\n                 * @param module\r\n                 * @returns {Array}\r\n                 */\n                getRequires: function getRequires(module) {\n                    var requires = [];\n                    angular.forEach(module.requires, function (requireModule) {\n                        if (regModules.indexOf(requireModule) === -1) {\n                            requires.push(requireModule);\n                        }\n                    });\n                    return requires;\n                },\n\n                /**\r\n                 * Invoke the new modules & component by their providers\r\n                 * @param providers\r\n                 * @param queue\r\n                 * @param moduleName\r\n                 * @param reconfig\r\n                 * @private\r\n                 */\n                _invokeQueue: _invokeQueue,\n\n                /**\r\n                 * Check if a module has been invoked and registers it if not\r\n                 * @param args\r\n                 * @param moduleName\r\n                 * @returns {boolean} is new\r\n                 */\n                _registerInvokeList: _registerInvokeList,\n\n                /**\r\n                 * Register a new module and loads it, executing the run/config blocks if needed\r\n                 * @param providers\r\n                 * @param registerModules\r\n                 * @param params\r\n                 * @private\r\n                 */\n                _register: _register,\n\n                /**\r\n                 * Add a module name to the list of modules that will be loaded in the next inject\r\n                 * @param name\r\n                 * @param force\r\n                 * @private\r\n                 */\n                _addToLoadList: _addToLoadList,\n\n                /**\r\n                 * Unregister modules (you shouldn't have to use this)\r\n                 * @param modules\r\n                 */\n                _unregister: function _unregister(modules) {\n                    if (angular.isDefined(modules)) {\n                        if (angular.isArray(modules)) {\n                            angular.forEach(modules, function (module) {\n                                regInvokes[module] = undefined;\n                            });\n                        }\n                    }\n                }\n            };\n        }];\n\n        // Let's get the list of loaded modules & components\n        this._init(angular.element(window.document));\n    }]);\n\n    var bootstrapFct = angular.bootstrap;\n    angular.bootstrap = function (element, modules, config) {\n        // Clean state from previous bootstrap\n        regModules = ['ng', 'oc.lazyLoad'];\n        regInvokes = {};\n        regConfigs = [];\n        modulesToLoad = [];\n        realModules = [];\n        recordDeclarations = [];\n        broadcast = angular.noop;\n        runBlocks = {};\n        justLoaded = [];\n        // we use slice to make a clean copy\n        angular.forEach(modules.slice(), function (module) {\n            _addToLoadList(module, true, true);\n        });\n        return bootstrapFct(element, modules, config);\n    };\n\n    var _addToLoadList = function _addToLoadList(name, force, real) {\n        if ((recordDeclarations.length > 0 || force) && angular.isString(name) && modulesToLoad.indexOf(name) === -1) {\n            modulesToLoad.push(name);\n            if (real) {\n                realModules.push(name);\n            }\n        }\n    };\n\n    var ngModuleFct = angular.module;\n    angular.module = function (name, requires, configFn) {\n        _addToLoadList(name, false, true);\n        return ngModuleFct(name, requires, configFn);\n    };\n\n    // CommonJS package manager support:\n    if (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports === exports) {\n        module.exports = 'oc.lazyLoad';\n    }\n})(angular, window);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').directive('ocLazyLoad', [\"$ocLazyLoad\", \"$compile\", \"$animate\", \"$parse\", \"$timeout\", function ($ocLazyLoad, $compile, $animate, $parse, $timeout) {\n        return {\n            restrict: 'A',\n            terminal: true,\n            priority: 1000,\n            compile: function compile(element, attrs) {\n                // we store the content and remove it before compilation\n                var content = element[0].innerHTML;\n                element.html('');\n\n                return function ($scope, $element, $attr) {\n                    var model = $parse($attr.ocLazyLoad);\n                    $scope.$watch(function () {\n                        return model($scope) || $attr.ocLazyLoad; // it can be a module name (string), an object, an array, or a scope reference to any of this\n                    }, function (moduleName) {\n                        if (angular.isDefined(moduleName)) {\n                            $ocLazyLoad.load(moduleName).then(function () {\n                                // Attach element contents to DOM and then compile them.\n                                // This prevents an issue where IE invalidates saved element objects (HTMLCollections)\n                                // of the compiled contents when attaching to the parent DOM.\n                                $animate.enter(content, $element);\n                                // get the new content & compile it\n                                $compile($element.contents())($scope);\n                            });\n                        }\n                    }, true);\n                };\n            }\n        };\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$q\", \"$window\", \"$interval\", function ($delegate, $q, $window, $interval) {\n            var uaCssChecked = false,\n                useCssLoadPatch = false,\n                anchor = $window.document.getElementsByTagName('head')[0] || $window.document.getElementsByTagName('body')[0];\n\n            /**\r\n             * Load a js/css file\r\n             * @param type\r\n             * @param path\r\n             * @param params\r\n             * @returns promise\r\n             */\n            $delegate.buildElement = function buildElement(type, path, params) {\n                var deferred = $q.defer(),\n                    el,\n                    loaded,\n                    filesCache = $delegate._getFilesCache(),\n                    cacheBuster = function cacheBuster(url) {\n                    var dc = new Date().getTime();\n                    if (url.indexOf('?') >= 0) {\n                        if (url.substring(0, url.length - 1) === '&') {\n                            return url + '_dc=' + dc;\n                        }\n                        return url + '&_dc=' + dc;\n                    } else {\n                        return url + '?_dc=' + dc;\n                    }\n                };\n\n                // Store the promise early so the file load can be detected by other parallel lazy loads\n                // (ie: multiple routes on one page) a 'true' value isn't sufficient\n                // as it causes false positive load results.\n                if (angular.isUndefined(filesCache.get(path))) {\n                    filesCache.put(path, deferred.promise);\n                }\n\n                // Switch in case more content types are added later\n                switch (type) {\n                    case 'css':\n                        el = $window.document.createElement('link');\n                        el.type = 'text/css';\n                        el.rel = 'stylesheet';\n                        el.href = params.cache === false ? cacheBuster(path) : path;\n                        break;\n                    case 'js':\n                        el = $window.document.createElement('script');\n                        el.src = params.cache === false ? cacheBuster(path) : path;\n                        break;\n                    default:\n                        filesCache.remove(path);\n                        deferred.reject(new Error('Requested type \"' + type + '\" is not known. Could not inject \"' + path + '\"'));\n                        break;\n                }\n                el.onload = el['onreadystatechange'] = function (e) {\n                    if (el['readyState'] && !/^c|loade/.test(el['readyState']) || loaded) return;\n                    el.onload = el['onreadystatechange'] = null;\n                    loaded = 1;\n                    $delegate._broadcast('ocLazyLoad.fileLoaded', path);\n                    deferred.resolve(el);\n                };\n                el.onerror = function () {\n                    filesCache.remove(path);\n                    deferred.reject(new Error('Unable to load ' + path));\n                };\n                el.async = params.serie ? 0 : 1;\n\n                var insertBeforeElem = anchor.lastChild;\n                if (params.insertBefore) {\n                    var element = angular.element(angular.isDefined(window.jQuery) ? params.insertBefore : document.querySelector(params.insertBefore));\n                    if (element && element.length > 0) {\n                        insertBeforeElem = element[0];\n                    }\n                }\n                insertBeforeElem.parentNode.insertBefore(el, insertBeforeElem);\n\n                /*\r\n                 The event load or readystatechange doesn't fire in:\r\n                 - PhantomJS 1.9 (headless webkit browser)\r\n                 - iOS < 6       (default mobile browser)\r\n                 - Android < 4.4 (default mobile browser)\r\n                 - Safari < 6    (desktop browser)\r\n                 */\n                if (type == 'css') {\n                    if (!uaCssChecked) {\n                        var ua = $window.navigator.userAgent.toLowerCase();\n\n                        if (ua.indexOf('phantomjs/1.9') > -1) {\n                            // PhantomJS ~1.9\n                            useCssLoadPatch = true;\n                        } else if (/iP(hone|od|ad)/.test($window.navigator.platform)) {\n                            // iOS < 6\n                            var v = $window.navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n                            var iOSVersion = parseFloat([parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)].join('.'));\n                            useCssLoadPatch = iOSVersion < 6;\n                        } else if (ua.indexOf('android') > -1) {\n                            // Android < 4.4\n                            var androidVersion = parseFloat(ua.slice(ua.indexOf('android') + 8));\n                            useCssLoadPatch = androidVersion < 4.4;\n                        } else if (ua.indexOf('safari') > -1) {\n                            // Safari < 6\n                            var versionMatch = ua.match(/version\\/([\\.\\d]+)/i);\n                            useCssLoadPatch = versionMatch && versionMatch[1] && parseFloat(versionMatch[1]) < 6;\n                        }\n                    }\n\n                    if (useCssLoadPatch) {\n                        var tries = 1000; // * 20 = 20000 miliseconds\n                        var interval = $interval(function () {\n                            try {\n                                el.sheet.cssRules;\n                                $interval.cancel(interval);\n                                el.onload();\n                            } catch (e) {\n                                if (--tries <= 0) {\n                                    el.onerror();\n                                }\n                            }\n                        }, 20);\n                    }\n                }\n\n                return deferred.promise;\n            };\n\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$q\", function ($delegate, $q) {\n            /**\r\n             * The function that loads new files\r\n             * @param config\r\n             * @param params\r\n             * @returns {*}\r\n             */\n            $delegate.filesLoader = function filesLoader(config) {\n                var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n                var cssFiles = [],\n                    templatesFiles = [],\n                    jsFiles = [],\n                    promises = [],\n                    cachePromise = null,\n                    filesCache = $delegate._getFilesCache();\n\n                $delegate.toggleWatch(true); // start watching angular.module calls\n\n                angular.extend(params, config);\n\n                var pushFile = function pushFile(path) {\n                    var file_type = null,\n                        m;\n                    if (angular.isObject(path)) {\n                        file_type = path.type;\n                        path = path.path;\n                    }\n                    cachePromise = filesCache.get(path);\n                    if (angular.isUndefined(cachePromise) || params.cache === false) {\n\n                        // always check for requirejs syntax just in case\n                        if ((m = /^(css|less|html|htm|js)?(?=!)/.exec(path)) !== null) {\n                            // Detect file type using preceding type declaration (ala requireJS)\n                            file_type = m[1];\n                            path = path.substr(m[1].length + 1, path.length); // Strip the type from the path\n                        }\n\n                        if (!file_type) {\n                            if ((m = /[.](css|less|html|htm|js)?((\\?|#).*)?$/.exec(path)) !== null) {\n                                // Detect file type via file extension\n                                file_type = m[1];\n                            } else if (!$delegate.jsLoader.hasOwnProperty('ocLazyLoadLoader') && $delegate.jsLoader.hasOwnProperty('requirejs')) {\n                                // requirejs\n                                file_type = 'js';\n                            } else {\n                                $delegate._$log.error('File type could not be determined. ' + path);\n                                return;\n                            }\n                        }\n\n                        if ((file_type === 'css' || file_type === 'less') && cssFiles.indexOf(path) === -1) {\n                            cssFiles.push(path);\n                        } else if ((file_type === 'html' || file_type === 'htm') && templatesFiles.indexOf(path) === -1) {\n                            templatesFiles.push(path);\n                        } else if (file_type === 'js' || jsFiles.indexOf(path) === -1) {\n                            jsFiles.push(path);\n                        } else {\n                            $delegate._$log.error('File type is not valid. ' + path);\n                        }\n                    } else if (cachePromise) {\n                        promises.push(cachePromise);\n                    }\n                };\n\n                if (params.serie) {\n                    pushFile(params.files.shift());\n                } else {\n                    angular.forEach(params.files, function (path) {\n                        pushFile(path);\n                    });\n                }\n\n                if (cssFiles.length > 0) {\n                    var cssDeferred = $q.defer();\n                    $delegate.cssLoader(cssFiles, function (err) {\n                        if (angular.isDefined(err) && $delegate.cssLoader.hasOwnProperty('ocLazyLoadLoader')) {\n                            $delegate._$log.error(err);\n                            cssDeferred.reject(err);\n                        } else {\n                            cssDeferred.resolve();\n                        }\n                    }, params);\n                    promises.push(cssDeferred.promise);\n                }\n\n                if (templatesFiles.length > 0) {\n                    var templatesDeferred = $q.defer();\n                    $delegate.templatesLoader(templatesFiles, function (err) {\n                        if (angular.isDefined(err) && $delegate.templatesLoader.hasOwnProperty('ocLazyLoadLoader')) {\n                            $delegate._$log.error(err);\n                            templatesDeferred.reject(err);\n                        } else {\n                            templatesDeferred.resolve();\n                        }\n                    }, params);\n                    promises.push(templatesDeferred.promise);\n                }\n\n                if (jsFiles.length > 0) {\n                    var jsDeferred = $q.defer();\n                    $delegate.jsLoader(jsFiles, function (err) {\n                        if (angular.isDefined(err) && ($delegate.jsLoader.hasOwnProperty(\"ocLazyLoadLoader\") || $delegate.jsLoader.hasOwnProperty(\"requirejs\"))) {\n                            $delegate._$log.error(err);\n                            jsDeferred.reject(err);\n                        } else {\n                            jsDeferred.resolve();\n                        }\n                    }, params);\n                    promises.push(jsDeferred.promise);\n                }\n\n                if (promises.length === 0) {\n                    var deferred = $q.defer(),\n                        err = \"Error: no file to load has been found, if you're trying to load an existing module you should use the 'inject' method instead of 'load'.\";\n                    $delegate._$log.error(err);\n                    deferred.reject(err);\n                    return deferred.promise;\n                } else if (params.serie && params.files.length > 0) {\n                    return $q.all(promises).then(function () {\n                        return $delegate.filesLoader(config, params);\n                    });\n                } else {\n                    return $q.all(promises)['finally'](function (res) {\n                        $delegate.toggleWatch(false); // stop watching angular.module calls\n                        return res;\n                    });\n                }\n            };\n\n            /**\r\n             * Load a module or a list of modules into Angular\r\n             * @param module Mixed the name of a predefined module config object, or a module config object, or an array of either\r\n             * @param params Object optional parameters\r\n             * @returns promise\r\n             */\n            $delegate.load = function (originalModule) {\n                var originalParams = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n                var self = this,\n                    config = null,\n                    deferredList = [],\n                    deferred = $q.defer(),\n                    errText;\n\n                // clean copy\n                var module = angular.copy(originalModule);\n                var params = angular.copy(originalParams);\n\n                // If module is an array, break it down\n                if (angular.isArray(module)) {\n                    // Resubmit each entry as a single module\n                    angular.forEach(module, function (m) {\n                        deferredList.push(self.load(m, params));\n                    });\n\n                    // Resolve the promise once everything has loaded\n                    $q.all(deferredList).then(function (res) {\n                        deferred.resolve(res);\n                    }, function (err) {\n                        deferred.reject(err);\n                    });\n\n                    return deferred.promise;\n                }\n\n                // Get or Set a configuration depending on what was passed in\n                if (angular.isString(module)) {\n                    config = self.getModuleConfig(module);\n                    if (!config) {\n                        config = {\n                            files: [module]\n                        };\n                    }\n                } else if (angular.isObject(module)) {\n                    // case {type: 'js', path: lazyLoadUrl + 'testModule.fakejs'}\n                    if (angular.isDefined(module.path) && angular.isDefined(module.type)) {\n                        config = {\n                            files: [module]\n                        };\n                    } else {\n                        config = self.setModuleConfig(module);\n                    }\n                }\n\n                if (config === null) {\n                    var moduleName = self._getModuleName(module);\n                    errText = 'Module \"' + (moduleName || 'unknown') + '\" is not configured, cannot load.';\n                    $delegate._$log.error(errText);\n                    deferred.reject(new Error(errText));\n                    return deferred.promise;\n                } else {\n                    // deprecated\n                    if (angular.isDefined(config.template)) {\n                        if (angular.isUndefined(config.files)) {\n                            config.files = [];\n                        }\n                        if (angular.isString(config.template)) {\n                            config.files.push(config.template);\n                        } else if (angular.isArray(config.template)) {\n                            config.files.concat(config.template);\n                        }\n                    }\n                }\n\n                var localParams = angular.extend({}, params, config);\n\n                // if someone used an external loader and called the load function with just the module name\n                if (angular.isUndefined(config.files) && angular.isDefined(config.name) && $delegate.moduleExists(config.name)) {\n                    return $delegate.inject(config.name, localParams, true);\n                }\n\n                $delegate.filesLoader(config, localParams).then(function () {\n                    $delegate.inject(null, localParams).then(function (res) {\n                        deferred.resolve(res);\n                    }, function (err) {\n                        deferred.reject(err);\n                    });\n                }, function (err) {\n                    deferred.reject(err);\n                });\n\n                return deferred.promise;\n            };\n\n            // return the patched service\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$q\", function ($delegate, $q) {\n            /**\r\n             * cssLoader function\r\n             * @type Function\r\n             * @param paths array list of css files to load\r\n             * @param callback to call when everything is loaded. We use a callback and not a promise\r\n             * @param params object config parameters\r\n             * because the user can overwrite cssLoader and it will probably not use promises :(\r\n             */\n            $delegate.cssLoader = function (paths, callback, params) {\n                var promises = [];\n                angular.forEach(paths, function (path) {\n                    promises.push($delegate.buildElement('css', path, params));\n                });\n                $q.all(promises).then(function () {\n                    callback();\n                }, function (err) {\n                    callback(err);\n                });\n            };\n            $delegate.cssLoader.ocLazyLoadLoader = true;\n\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$q\", function ($delegate, $q) {\n            /**\r\n             * jsLoader function\r\n             * @type Function\r\n             * @param paths array list of js files to load\r\n             * @param callback to call when everything is loaded. We use a callback and not a promise\r\n             * @param params object config parameters\r\n             * because the user can overwrite jsLoader and it will probably not use promises :(\r\n             */\n            $delegate.jsLoader = function (paths, callback, params) {\n                var promises = [];\n                angular.forEach(paths, function (path) {\n                    promises.push($delegate.buildElement('js', path, params));\n                });\n                $q.all(promises).then(function () {\n                    callback();\n                }, function (err) {\n                    callback(err);\n                });\n            };\n            $delegate.jsLoader.ocLazyLoadLoader = true;\n\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n(function (angular) {\n    'use strict';\n\n    angular.module('oc.lazyLoad').config([\"$provide\", function ($provide) {\n        $provide.decorator('$ocLazyLoad', [\"$delegate\", \"$templateCache\", \"$q\", \"$http\", function ($delegate, $templateCache, $q, $http) {\n            /**\r\n             * templatesLoader function\r\n             * @type Function\r\n             * @param paths array list of css files to load\r\n             * @param callback to call when everything is loaded. We use a callback and not a promise\r\n             * @param params object config parameters for $http\r\n             * because the user can overwrite templatesLoader and it will probably not use promises :(\r\n             */\n            $delegate.templatesLoader = function (paths, callback, params) {\n                var promises = [],\n                    filesCache = $delegate._getFilesCache();\n\n                angular.forEach(paths, function (url) {\n                    var deferred = $q.defer();\n                    promises.push(deferred.promise);\n                    $http.get(url, params).then(function (response) {\n                        var data = response.data;\n                        if (angular.isString(data) && data.length > 0) {\n                            angular.forEach(angular.element(data), function (node) {\n                                if (node.nodeName === 'SCRIPT' && node.type === 'text/ng-template') {\n                                    $templateCache.put(node.id, node.innerHTML);\n                                }\n                            });\n                        }\n                        if (angular.isUndefined(filesCache.get(url))) {\n                            filesCache.put(url, true);\n                        }\n                        deferred.resolve();\n                    })['catch'](function (response) {\n                        deferred.reject(new Error('Unable to load template file \"' + url + '\": ' + response.data));\n                    });\n                });\n                return $q.all(promises).then(function () {\n                    callback();\n                }, function (err) {\n                    callback(err);\n                });\n            };\n            $delegate.templatesLoader.ocLazyLoadLoader = true;\n\n            return $delegate;\n        }]);\n    }]);\n})(angular);\n// Array.indexOf polyfill for IE8\nif (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function (searchElement, fromIndex) {\n                var k;\n\n                // 1. Let O be the result of calling ToObject passing\n                //    the this value as the argument.\n                if (this == null) {\n                        throw new TypeError('\"this\" is null or not defined');\n                }\n\n                var O = Object(this);\n\n                // 2. Let lenValue be the result of calling the Get\n                //    internal method of O with the argument \"length\".\n                // 3. Let len be ToUint32(lenValue).\n                var len = O.length >>> 0;\n\n                // 4. If len is 0, return -1.\n                if (len === 0) {\n                        return -1;\n                }\n\n                // 5. If argument fromIndex was passed let n be\n                //    ToInteger(fromIndex); else let n be 0.\n                var n = +fromIndex || 0;\n\n                if (Math.abs(n) === Infinity) {\n                        n = 0;\n                }\n\n                // 6. If n >= len, return -1.\n                if (n >= len) {\n                        return -1;\n                }\n\n                // 7. If n >= 0, then Let k be n.\n                // 8. Else, n<0, Let k be len - abs(n).\n                //    If k is less than 0, then let k be 0.\n                k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n                // 9. Repeat, while k < len\n                while (k < len) {\n                        // a. Let Pk be ToString(k).\n                        //   This is implicit for LHS operands of the in operator\n                        // b. Let kPresent be the result of calling the\n                        //    HasProperty internal method of O with argument Pk.\n                        //   This step can be combined with c\n                        // c. If kPresent is true, then\n                        //    i.  Let elementK be the result of calling the Get\n                        //        internal method of O with the argument ToString(k).\n                        //   ii.  Let same be the result of applying the\n                        //        Strict Equality Comparison Algorithm to\n                        //        searchElement and elementK.\n                        //  iii.  If same is true, return k.\n                        if (k in O && O[k] === searchElement) {\n                                return k;\n                        }\n                        k++;\n                }\n                return -1;\n        };\n}","/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n * @license MIT */\n\n;(function(root, factory) {\n\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.NProgress = factory();\n  }\n\n})(this, function() {\n  var NProgress = {};\n\n  NProgress.version = '0.2.0';\n\n  var Settings = NProgress.settings = {\n    minimum: 0.08,\n    easing: 'ease',\n    positionUsing: '',\n    speed: 200,\n    trickle: true,\n    trickleRate: 0.02,\n    trickleSpeed: 800,\n    showSpinner: true,\n    barSelector: '[role=\"bar\"]',\n    spinnerSelector: '[role=\"spinner\"]',\n    parent: 'body',\n    template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n  };\n\n  /**\n   * Updates configuration.\n   *\n   *     NProgress.configure({\n   *       minimum: 0.1\n   *     });\n   */\n  NProgress.configure = function(options) {\n    var key, value;\n    for (key in options) {\n      value = options[key];\n      if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n    }\n\n    return this;\n  };\n\n  /**\n   * Last number.\n   */\n\n  NProgress.status = null;\n\n  /**\n   * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n   *\n   *     NProgress.set(0.4);\n   *     NProgress.set(1.0);\n   */\n\n  NProgress.set = function(n) {\n    var started = NProgress.isStarted();\n\n    n = clamp(n, Settings.minimum, 1);\n    NProgress.status = (n === 1 ? null : n);\n\n    var progress = NProgress.render(!started),\n        bar      = progress.querySelector(Settings.barSelector),\n        speed    = Settings.speed,\n        ease     = Settings.easing;\n\n    progress.offsetWidth; /* Repaint */\n\n    queue(function(next) {\n      // Set positionUsing if it hasn't already been set\n      if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\n      // Add transition\n      css(bar, barPositionCSS(n, speed, ease));\n\n      if (n === 1) {\n        // Fade out\n        css(progress, { \n          transition: 'none', \n          opacity: 1 \n        });\n        progress.offsetWidth; /* Repaint */\n\n        setTimeout(function() {\n          css(progress, { \n            transition: 'all ' + speed + 'ms linear', \n            opacity: 0 \n          });\n          setTimeout(function() {\n            NProgress.remove();\n            next();\n          }, speed);\n        }, speed);\n      } else {\n        setTimeout(next, speed);\n      }\n    });\n\n    return this;\n  };\n\n  NProgress.isStarted = function() {\n    return typeof NProgress.status === 'number';\n  };\n\n  /**\n   * Shows the progress bar.\n   * This is the same as setting the status to 0%, except that it doesn't go backwards.\n   *\n   *     NProgress.start();\n   *\n   */\n  NProgress.start = function() {\n    if (!NProgress.status) NProgress.set(0);\n\n    var work = function() {\n      setTimeout(function() {\n        if (!NProgress.status) return;\n        NProgress.trickle();\n        work();\n      }, Settings.trickleSpeed);\n    };\n\n    if (Settings.trickle) work();\n\n    return this;\n  };\n\n  /**\n   * Hides the progress bar.\n   * This is the *sort of* the same as setting the status to 100%, with the\n   * difference being `done()` makes some placebo effect of some realistic motion.\n   *\n   *     NProgress.done();\n   *\n   * If `true` is passed, it will show the progress bar even if its hidden.\n   *\n   *     NProgress.done(true);\n   */\n\n  NProgress.done = function(force) {\n    if (!force && !NProgress.status) return this;\n\n    return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n  };\n\n  /**\n   * Increments by a random amount.\n   */\n\n  NProgress.inc = function(amount) {\n    var n = NProgress.status;\n\n    if (!n) {\n      return NProgress.start();\n    } else {\n      if (typeof amount !== 'number') {\n        amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n      }\n\n      n = clamp(n + amount, 0, 0.994);\n      return NProgress.set(n);\n    }\n  };\n\n  NProgress.trickle = function() {\n    return NProgress.inc(Math.random() * Settings.trickleRate);\n  };\n\n  /**\n   * Waits for all supplied jQuery promises and\n   * increases the progress as the promises resolve.\n   *\n   * @param $promise jQUery Promise\n   */\n  (function() {\n    var initial = 0, current = 0;\n\n    NProgress.promise = function($promise) {\n      if (!$promise || $promise.state() === \"resolved\") {\n        return this;\n      }\n\n      if (current === 0) {\n        NProgress.start();\n      }\n\n      initial++;\n      current++;\n\n      $promise.always(function() {\n        current--;\n        if (current === 0) {\n            initial = 0;\n            NProgress.done();\n        } else {\n            NProgress.set((initial - current) / initial);\n        }\n      });\n\n      return this;\n    };\n\n  })();\n\n  /**\n   * (Internal) renders the progress bar markup based on the `template`\n   * setting.\n   */\n\n  NProgress.render = function(fromStart) {\n    if (NProgress.isRendered()) return document.getElementById('nprogress');\n\n    addClass(document.documentElement, 'nprogress-busy');\n    \n    var progress = document.createElement('div');\n    progress.id = 'nprogress';\n    progress.innerHTML = Settings.template;\n\n    var bar      = progress.querySelector(Settings.barSelector),\n        perc     = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n        parent   = document.querySelector(Settings.parent),\n        spinner;\n    \n    css(bar, {\n      transition: 'all 0 linear',\n      transform: 'translate3d(' + perc + '%,0,0)'\n    });\n\n    if (!Settings.showSpinner) {\n      spinner = progress.querySelector(Settings.spinnerSelector);\n      spinner && removeElement(spinner);\n    }\n\n    if (parent != document.body) {\n      addClass(parent, 'nprogress-custom-parent');\n    }\n\n    parent.appendChild(progress);\n    return progress;\n  };\n\n  /**\n   * Removes the element. Opposite of render().\n   */\n\n  NProgress.remove = function() {\n    removeClass(document.documentElement, 'nprogress-busy');\n    removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n    var progress = document.getElementById('nprogress');\n    progress && removeElement(progress);\n  };\n\n  /**\n   * Checks if the progress bar is rendered.\n   */\n\n  NProgress.isRendered = function() {\n    return !!document.getElementById('nprogress');\n  };\n\n  /**\n   * Determine which positioning CSS rule to use.\n   */\n\n  NProgress.getPositioningCSS = function() {\n    // Sniff on document.body.style\n    var bodyStyle = document.body.style;\n\n    // Sniff prefixes\n    var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n                       ('MozTransform' in bodyStyle) ? 'Moz' :\n                       ('msTransform' in bodyStyle) ? 'ms' :\n                       ('OTransform' in bodyStyle) ? 'O' : '';\n\n    if (vendorPrefix + 'Perspective' in bodyStyle) {\n      // Modern browsers with 3D support, e.g. Webkit, IE10\n      return 'translate3d';\n    } else if (vendorPrefix + 'Transform' in bodyStyle) {\n      // Browsers without 3D support, e.g. IE9\n      return 'translate';\n    } else {\n      // Browsers without translate() support, e.g. IE7-8\n      return 'margin';\n    }\n  };\n\n  /**\n   * Helpers\n   */\n\n  function clamp(n, min, max) {\n    if (n < min) return min;\n    if (n > max) return max;\n    return n;\n  }\n\n  /**\n   * (Internal) converts a percentage (`0..1`) to a bar translateX\n   * percentage (`-100%..0%`).\n   */\n\n  function toBarPerc(n) {\n    return (-1 + n) * 100;\n  }\n\n\n  /**\n   * (Internal) returns the correct CSS for changing the bar's\n   * position given an n percentage, and speed and ease from Settings\n   */\n\n  function barPositionCSS(n, speed, ease) {\n    var barCSS;\n\n    if (Settings.positionUsing === 'translate3d') {\n      barCSS = { transform: 'translate3d('+toBarPerc(n)+'%,0,0)' };\n    } else if (Settings.positionUsing === 'translate') {\n      barCSS = { transform: 'translate('+toBarPerc(n)+'%,0)' };\n    } else {\n      barCSS = { 'margin-left': toBarPerc(n)+'%' };\n    }\n\n    barCSS.transition = 'all '+speed+'ms '+ease;\n\n    return barCSS;\n  }\n\n  /**\n   * (Internal) Queues a function to be executed.\n   */\n\n  var queue = (function() {\n    var pending = [];\n    \n    function next() {\n      var fn = pending.shift();\n      if (fn) {\n        fn(next);\n      }\n    }\n\n    return function(fn) {\n      pending.push(fn);\n      if (pending.length == 1) next();\n    };\n  })();\n\n  /**\n   * (Internal) Applies css properties to an element, similar to the jQuery \n   * css method.\n   *\n   * While this helper does assist with vendor prefixed property names, it \n   * does not perform any manipulation of values prior to setting styles.\n   */\n\n  var css = (function() {\n    var cssPrefixes = [ 'Webkit', 'O', 'Moz', 'ms' ],\n        cssProps    = {};\n\n    function camelCase(string) {\n      return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function(match, letter) {\n        return letter.toUpperCase();\n      });\n    }\n\n    function getVendorProp(name) {\n      var style = document.body.style;\n      if (name in style) return name;\n\n      var i = cssPrefixes.length,\n          capName = name.charAt(0).toUpperCase() + name.slice(1),\n          vendorName;\n      while (i--) {\n        vendorName = cssPrefixes[i] + capName;\n        if (vendorName in style) return vendorName;\n      }\n\n      return name;\n    }\n\n    function getStyleProp(name) {\n      name = camelCase(name);\n      return cssProps[name] || (cssProps[name] = getVendorProp(name));\n    }\n\n    function applyCss(element, prop, value) {\n      prop = getStyleProp(prop);\n      element.style[prop] = value;\n    }\n\n    return function(element, properties) {\n      var args = arguments,\n          prop, \n          value;\n\n      if (args.length == 2) {\n        for (prop in properties) {\n          value = properties[prop];\n          if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n        }\n      } else {\n        applyCss(element, args[1], args[2]);\n      }\n    }\n  })();\n\n  /**\n   * (Internal) Determines if an element or space separated list of class names contains a class name.\n   */\n\n  function hasClass(element, name) {\n    var list = typeof element == 'string' ? element : classList(element);\n    return list.indexOf(' ' + name + ' ') >= 0;\n  }\n\n  /**\n   * (Internal) Adds a class to an element.\n   */\n\n  function addClass(element, name) {\n    var oldList = classList(element),\n        newList = oldList + name;\n\n    if (hasClass(oldList, name)) return; \n\n    // Trim the opening space.\n    element.className = newList.substring(1);\n  }\n\n  /**\n   * (Internal) Removes a class from an element.\n   */\n\n  function removeClass(element, name) {\n    var oldList = classList(element),\n        newList;\n\n    if (!hasClass(element, name)) return;\n\n    // Replace the class name.\n    newList = oldList.replace(' ' + name + ' ', ' ');\n\n    // Trim the opening and closing spaces.\n    element.className = newList.substring(1, newList.length - 1);\n  }\n\n  /**\n   * (Internal) Gets a space separated list of the class names on the element. \n   * The list is wrapped with a single space on each end to facilitate finding \n   * matches within the list.\n   */\n\n  function classList(element) {\n    return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n  }\n\n  /**\n   * (Internal) Removes an element from the DOM.\n   */\n\n  function removeElement(element) {\n    element && element.parentNode && element.parentNode.removeChild(element);\n  }\n\n  return NProgress;\n});\n\n","/** @publicapi @module transition */ /** */\n'use strict';\nimport { extend, silentRejection } from '../common/common';\nimport { stringify } from '../common/strings';\nimport { is } from '../common/hof';\nvar RejectType;\n(function (RejectType) {\n    /**\n     * A new transition superseded this one.\n     *\n     * While this transition was running, a new transition started.\n     * This transition is cancelled because it was superseded by new transition.\n     */\n    RejectType[RejectType[\"SUPERSEDED\"] = 2] = \"SUPERSEDED\";\n    /**\n     * The transition was aborted\n     *\n     * The transition was aborted by a hook which returned `false`\n     */\n    RejectType[RejectType[\"ABORTED\"] = 3] = \"ABORTED\";\n    /**\n     * The transition was invalid\n     *\n     * The transition was never started because it was invalid\n     */\n    RejectType[RejectType[\"INVALID\"] = 4] = \"INVALID\";\n    /**\n     * The transition was ignored\n     *\n     * The transition was ignored because it would have no effect.\n     *\n     * Either:\n     *\n     * - The transition is targeting the current state and parameter values\n     * - The transition is targeting the same state and parameter values as the currently running transition.\n     */\n    RejectType[RejectType[\"IGNORED\"] = 5] = \"IGNORED\";\n    /**\n     * The transition errored.\n     *\n     * This generally means a hook threw an error or returned a rejected promise\n     */\n    RejectType[RejectType[\"ERROR\"] = 6] = \"ERROR\";\n})(RejectType || (RejectType = {}));\nexport { RejectType };\n/** @hidden */\nvar id = 0;\nvar Rejection = /** @class */ (function () {\n    function Rejection(type, message, detail) {\n        /** @hidden */\n        this.$id = id++;\n        this.type = type;\n        this.message = message;\n        this.detail = detail;\n    }\n    /** Returns true if the obj is a rejected promise created from the `asPromise` factory */\n    Rejection.isRejectionPromise = function (obj) {\n        return obj && typeof obj.then === 'function' && is(Rejection)(obj._transitionRejection);\n    };\n    /** Returns a Rejection due to transition superseded */\n    Rejection.superseded = function (detail, options) {\n        var message = 'The transition has been superseded by a different transition';\n        var rejection = new Rejection(RejectType.SUPERSEDED, message, detail);\n        if (options && options.redirected) {\n            rejection.redirected = true;\n        }\n        return rejection;\n    };\n    /** Returns a Rejection due to redirected transition */\n    Rejection.redirected = function (detail) {\n        return Rejection.superseded(detail, { redirected: true });\n    };\n    /** Returns a Rejection due to invalid transition */\n    Rejection.invalid = function (detail) {\n        var message = 'This transition is invalid';\n        return new Rejection(RejectType.INVALID, message, detail);\n    };\n    /** Returns a Rejection due to ignored transition */\n    Rejection.ignored = function (detail) {\n        var message = 'The transition was ignored';\n        return new Rejection(RejectType.IGNORED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.aborted = function (detail) {\n        var message = 'The transition has been aborted';\n        return new Rejection(RejectType.ABORTED, message, detail);\n    };\n    /** Returns a Rejection due to aborted transition */\n    Rejection.errored = function (detail) {\n        var message = 'The transition errored';\n        return new Rejection(RejectType.ERROR, message, detail);\n    };\n    /**\n     * Returns a Rejection\n     *\n     * Normalizes a value as a Rejection.\n     * If the value is already a Rejection, returns it.\n     * Otherwise, wraps and returns the value as a Rejection (Rejection type: ERROR).\n     *\n     * @returns `detail` if it is already a `Rejection`, else returns an ERROR Rejection.\n     */\n    Rejection.normalize = function (detail) {\n        return is(Rejection)(detail) ? detail : Rejection.errored(detail);\n    };\n    Rejection.prototype.toString = function () {\n        var detailString = function (d) { return (d && d.toString !== Object.prototype.toString ? d.toString() : stringify(d)); };\n        var detail = detailString(this.detail);\n        var _a = this, $id = _a.$id, type = _a.type, message = _a.message;\n        return \"Transition Rejection($id: \" + $id + \" type: \" + type + \", message: \" + message + \", detail: \" + detail + \")\";\n    };\n    Rejection.prototype.toPromise = function () {\n        return extend(silentRejection(this), { _transitionRejection: this });\n    };\n    return Rejection;\n}());\nexport { Rejection };\n//# sourceMappingURL=rejectFactory.js.map","/** @publicapi @module ng1 */ /** */\nimport * as ng_from_import from 'angular';\n/** @hidden */ var ng_from_global = angular;\n/** @hidden */ export var ng = ng_from_import && ng_from_import.module ? ng_from_import : ng_from_global;\n//# sourceMappingURL=angular.js.map","/** @publicapi @module core */\n/**\n * Matches state names using glob-like pattern strings.\n *\n * Globs can be used in specific APIs including:\n *\n * - [[StateService.is]]\n * - [[StateService.includes]]\n * - The first argument to Hook Registration functions like [[TransitionService.onStart]]\n *    - [[HookMatchCriteria]] and [[HookMatchCriterion]]\n *\n * A `Glob` string is a pattern which matches state names.\n * Nested state names are split into segments (separated by a dot) when processing.\n * The state named `foo.bar.baz` is split into three segments ['foo', 'bar', 'baz']\n *\n * Globs work according to the following rules:\n *\n * ### Exact match:\n *\n * The glob `'A.B'` matches the state named exactly `'A.B'`.\n *\n * | Glob        |Matches states named|Does not match state named|\n * |:------------|:--------------------|:---------------------|\n * | `'A'`       | `'A'`               | `'B'` , `'A.C'`      |\n * | `'A.B'`     | `'A.B'`             | `'A'` , `'A.B.C'`    |\n * | `'foo'`     | `'foo'`             | `'FOO'` , `'foo.bar'`|\n *\n * ### Single star (`*`)\n *\n * A single star (`*`) is a wildcard that matches exactly one segment.\n *\n * | Glob        |Matches states named  |Does not match state named |\n * |:------------|:---------------------|:--------------------------|\n * | `'*'`       | `'A'` , `'Z'`        | `'A.B'` , `'Z.Y.X'`       |\n * | `'A.*'`     | `'A.B'` , `'A.C'`    | `'A'` , `'A.B.C'`         |\n * | `'A.*.*'`   | `'A.B.C'` , `'A.X.Y'`| `'A'`, `'A.B'` , `'Z.Y.X'`|\n *\n * ### Double star (`**`)\n *\n * A double star (`'**'`) is a wildcard that matches *zero or more segments*\n *\n * | Glob        |Matches states named                           |Does not match state named         |\n * |:------------|:----------------------------------------------|:----------------------------------|\n * | `'**'`      | `'A'` , `'A.B'`, `'Z.Y.X'`                    | (matches all states)              |\n * | `'A.**'`    | `'A'` , `'A.B'` , `'A.C.X'`                   | `'Z.Y.X'`                         |\n * | `'**.X'`    | `'X'` , `'A.X'` , `'Z.Y.X'`                   | `'A'` , `'A.login.Z'`             |\n * | `'A.**.X'`  | `'A.X'` , `'A.B.X'` , `'A.B.C.X'`             | `'A'` , `'A.B.C'`                 |\n *\n */\nvar Glob = /** @class */ (function () {\n    function Glob(text) {\n        this.text = text;\n        this.glob = text.split('.');\n        var regexpString = this.text\n            .split('.')\n            .map(function (seg) {\n            if (seg === '**')\n                return '(?:|(?:\\\\.[^.]*)*)';\n            if (seg === '*')\n                return '\\\\.[^.]*';\n            return '\\\\.' + seg;\n        })\n            .join('');\n        this.regexp = new RegExp('^' + regexpString + '$');\n    }\n    /** Returns true if the string has glob-like characters in it */\n    Glob.is = function (text) {\n        return !!/[!,*]+/.exec(text);\n    };\n    /** Returns a glob from the string, or null if the string isn't Glob-like */\n    Glob.fromString = function (text) {\n        return Glob.is(text) ? new Glob(text) : null;\n    };\n    Glob.prototype.matches = function (name) {\n        return this.regexp.test('.' + name);\n    };\n    return Glob;\n}());\nexport { Glob };\n//# sourceMappingURL=glob.js.map","/** @publicapi @module common */ /** */\nimport { pushTo } from './common';\nvar Queue = /** @class */ (function () {\n    function Queue(_items, _limit) {\n        if (_items === void 0) { _items = []; }\n        if (_limit === void 0) { _limit = null; }\n        this._items = _items;\n        this._limit = _limit;\n        this._evictListeners = [];\n        this.onEvict = pushTo(this._evictListeners);\n    }\n    Queue.prototype.enqueue = function (item) {\n        var items = this._items;\n        items.push(item);\n        if (this._limit && items.length > this._limit)\n            this.evict();\n        return item;\n    };\n    Queue.prototype.evict = function () {\n        var item = this._items.shift();\n        this._evictListeners.forEach(function (fn) { return fn(item); });\n        return item;\n    };\n    Queue.prototype.dequeue = function () {\n        if (this.size())\n            return this._items.splice(0, 1)[0];\n    };\n    Queue.prototype.clear = function () {\n        var current = this._items;\n        this._items = [];\n        return current;\n    };\n    Queue.prototype.size = function () {\n        return this._items.length;\n    };\n    Queue.prototype.remove = function (item) {\n        var idx = this._items.indexOf(item);\n        return idx > -1 && this._items.splice(idx, 1)[0];\n    };\n    Queue.prototype.peekTail = function () {\n        return this._items[this._items.length - 1];\n    };\n    Queue.prototype.peekHead = function () {\n        if (this.size())\n            return this._items[0];\n    };\n    return Queue;\n}());\nexport { Queue };\n//# sourceMappingURL=queue.js.map","/**\n * Functions that manipulate strings\n *\n * Although these functions are exported, they are subject to change without notice.\n *\n * @module common_strings\n */ /** */\nimport { isArray, isFunction, isInjectable, isNull, isObject, isPromise, isString, isUndefined } from './predicates';\nimport { Rejection } from '../transition/rejectFactory';\nimport { identity, pushR, tail } from './common';\nimport { pattern, val } from './hof';\n/**\n * Returns a string shortened to a maximum length\n *\n * If the string is already less than the `max` length, return the string.\n * Else return the string, shortened to `max - 3` and append three dots (\"...\").\n *\n * @param max the maximum length of the string to return\n * @param str the input string\n */\nexport function maxLength(max, str) {\n    if (str.length <= max)\n        return str;\n    return str.substr(0, max - 3) + '...';\n}\n/**\n * Returns a string, with spaces added to the end, up to a desired str length\n *\n * If the string is already longer than the desired length, return the string.\n * Else returns the string, with extra spaces on the end, such that it reaches `length` characters.\n *\n * @param length the desired length of the string to return\n * @param str the input string\n */\nexport function padString(length, str) {\n    while (str.length < length)\n        str += ' ';\n    return str;\n}\nexport function kebobString(camelCase) {\n    return camelCase\n        .replace(/^([A-Z])/, function ($1) { return $1.toLowerCase(); }) // replace first char\n        .replace(/([A-Z])/g, function ($1) { return '-' + $1.toLowerCase(); }); // replace rest\n}\nexport function functionToString(fn) {\n    var fnStr = fnToString(fn);\n    var namedFunctionMatch = fnStr.match(/^(function [^ ]+\\([^)]*\\))/);\n    var toStr = namedFunctionMatch ? namedFunctionMatch[1] : fnStr;\n    var fnName = fn['name'] || '';\n    if (fnName && toStr.match(/function \\(/)) {\n        return 'function ' + fnName + toStr.substr(9);\n    }\n    return toStr;\n}\nexport function fnToString(fn) {\n    var _fn = isArray(fn) ? fn.slice(-1)[0] : fn;\n    return (_fn && _fn.toString()) || 'undefined';\n}\nvar isRejection = Rejection.isRejectionPromise;\nvar hasToString = function (obj) {\n    return isObject(obj) && !isArray(obj) && obj.constructor !== Object && isFunction(obj.toString);\n};\nvar stringifyPattern = pattern([\n    [isUndefined, val('undefined')],\n    [isNull, val('null')],\n    [isPromise, val('[Promise]')],\n    [isRejection, function (x) { return x._transitionRejection.toString(); }],\n    [hasToString, function (x) { return x.toString(); }],\n    [isInjectable, functionToString],\n    [val(true), identity],\n]);\nexport function stringify(o) {\n    var seen = [];\n    function format(value) {\n        if (isObject(value)) {\n            if (seen.indexOf(value) !== -1)\n                return '[circular ref]';\n            seen.push(value);\n        }\n        return stringifyPattern(value);\n    }\n    if (isUndefined(o)) {\n        // Workaround for IE & Edge Spec incompatibility where replacer function would not be called when JSON.stringify\n        // is given `undefined` as value. To work around that, we simply detect `undefined` and bail out early by\n        // manually stringifying it.\n        return format(o);\n    }\n    return JSON.stringify(o, function (key, value) { return format(value); }).replace(/\\\\\"/g, '\"');\n}\n/** Returns a function that splits a string on a character or substring */\nexport var beforeAfterSubstr = function (char) { return function (str) {\n    if (!str)\n        return ['', ''];\n    var idx = str.indexOf(char);\n    if (idx === -1)\n        return [str, ''];\n    return [str.substr(0, idx), str.substr(idx + 1)];\n}; };\nexport var hostRegex = new RegExp('^(?:[a-z]+:)?//[^/]+/');\nexport var stripLastPathElement = function (str) { return str.replace(/\\/[^/]*$/, ''); };\nexport var splitHash = beforeAfterSubstr('#');\nexport var splitQuery = beforeAfterSubstr('?');\nexport var splitEqual = beforeAfterSubstr('=');\nexport var trimHashVal = function (str) { return (str ? str.replace(/^#/, '') : ''); };\n/**\n * Splits on a delimiter, but returns the delimiters in the array\n *\n * #### Example:\n * ```js\n * var splitOnSlashes = splitOnDelim('/');\n * splitOnSlashes(\"/foo\"); // [\"/\", \"foo\"]\n * splitOnSlashes(\"/foo/\"); // [\"/\", \"foo\", \"/\"]\n * ```\n */\nexport function splitOnDelim(delim) {\n    var re = new RegExp('(' + delim + ')', 'g');\n    return function (str) { return str.split(re).filter(identity); };\n}\n/**\n * Reduce fn that joins neighboring strings\n *\n * Given an array of strings, returns a new array\n * where all neighboring strings have been joined.\n *\n * #### Example:\n * ```js\n * let arr = [\"foo\", \"bar\", 1, \"baz\", \"\", \"qux\" ];\n * arr.reduce(joinNeighborsR, []) // [\"foobar\", 1, \"bazqux\" ]\n * ```\n */\nexport function joinNeighborsR(acc, x) {\n    if (isString(tail(acc)) && isString(x))\n        return acc.slice(0, -1).concat(tail(acc) + x);\n    return pushR(acc, x);\n}\n//# sourceMappingURL=strings.js.map","/**\n * # Transition tracing (debug)\n *\n * Enable transition tracing to print transition information to the console,\n * in order to help debug your application.\n * Tracing logs detailed information about each Transition to your console.\n *\n * To enable tracing, import the [[Trace]] singleton and enable one or more categories.\n *\n * ### ES6\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5); // TRANSITION and VIEWCONFIG\n * ```\n *\n * ### CJS\n * ```js\n * let trace = require(\"@uirouter/core\").trace;\n * trace.enable(\"TRANSITION\", \"VIEWCONFIG\");\n * ```\n *\n * ### Globals\n * ```js\n * let trace = window[\"@uirouter/core\"].trace;\n * trace.enable(); // Trace everything (very verbose)\n * ```\n *\n * ### Angular 1:\n * ```js\n * app.run($trace => $trace.enable());\n * ```\n *\n * @publicapi @module trace\n */\n/* tslint:disable:no-console */\nimport { parse } from '../common/hof';\nimport { isFunction, isNumber } from '../common/predicates';\nimport { stringify, functionToString, maxLength, padString } from './strings';\n/** @hidden */\nfunction uiViewString(uiview) {\n    if (!uiview)\n        return 'ui-view (defunct)';\n    var state = uiview.creationContext ? uiview.creationContext.name || '(root)' : '(none)';\n    return \"[ui-view#\" + uiview.id + \" \" + uiview.$type + \":\" + uiview.fqn + \" (\" + uiview.name + \"@\" + state + \")]\";\n}\n/** @hidden */\nvar viewConfigString = function (viewConfig) {\n    var view = viewConfig.viewDecl;\n    var state = view.$context.name || '(root)';\n    return \"[View#\" + viewConfig.$id + \" from '\" + state + \"' state]: target ui-view: '\" + view.$uiViewName + \"@\" + view.$uiViewContextAnchor + \"'\";\n};\n/** @hidden */\nfunction normalizedCat(input) {\n    return isNumber(input) ? Category[input] : Category[Category[input]];\n}\n/** @hidden */\nvar consoleLog = Function.prototype.bind.call(console.log, console);\n/** @hidden */\nvar consoletable = isFunction(console.table) ? console.table.bind(console) : consoleLog.bind(console);\n/**\n * Trace categories Enum\n *\n * Enable or disable a category using [[Trace.enable]] or [[Trace.disable]]\n *\n * `trace.enable(Category.TRANSITION)`\n *\n * These can also be provided using a matching string, or position ordinal\n *\n * `trace.enable(\"TRANSITION\")`\n *\n * `trace.enable(1)`\n */\nvar Category;\n(function (Category) {\n    Category[Category[\"RESOLVE\"] = 0] = \"RESOLVE\";\n    Category[Category[\"TRANSITION\"] = 1] = \"TRANSITION\";\n    Category[Category[\"HOOK\"] = 2] = \"HOOK\";\n    Category[Category[\"UIVIEW\"] = 3] = \"UIVIEW\";\n    Category[Category[\"VIEWCONFIG\"] = 4] = \"VIEWCONFIG\";\n})(Category || (Category = {}));\nexport { Category };\n/** @hidden */\nvar _tid = parse('$id');\n/** @hidden */\nvar _rid = parse('router.$id');\n/** @hidden */\nvar transLbl = function (trans) { return \"Transition #\" + _tid(trans) + \"-\" + _rid(trans); };\n/**\n * Prints UI-Router Transition trace information to the console.\n */\nvar Trace = /** @class */ (function () {\n    /** @hidden */\n    function Trace() {\n        /** @hidden */\n        this._enabled = {};\n        this.approximateDigests = 0;\n    }\n    /** @hidden */\n    Trace.prototype._set = function (enabled, categories) {\n        var _this = this;\n        if (!categories.length) {\n            categories = Object.keys(Category)\n                .map(function (k) { return parseInt(k, 10); })\n                .filter(function (k) { return !isNaN(k); })\n                .map(function (key) { return Category[key]; });\n        }\n        categories.map(normalizedCat).forEach(function (category) { return (_this._enabled[category] = enabled); });\n    };\n    Trace.prototype.enable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(true, categories);\n    };\n    Trace.prototype.disable = function () {\n        var categories = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            categories[_i] = arguments[_i];\n        }\n        this._set(false, categories);\n    };\n    /**\n     * Retrieves the enabled stateus of a [[Category]]\n     *\n     * ```js\n     * trace.enabled(\"VIEWCONFIG\"); // true or false\n     * ```\n     *\n     * @returns boolean true if the category is enabled\n     */\n    Trace.prototype.enabled = function (category) {\n        return !!this._enabled[normalizedCat(category)];\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionStart = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Started  -> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceTransitionIgnored = function (trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": Ignored  <> \" + stringify(trans));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookInvocation = function (step, trans, options) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = functionToString(step.registeredHook.callback);\n        console.log(transLbl(trans) + \":   Hook -> \" + event + \" context: \" + context + \", \" + maxLength(200, name));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceHookResult = function (hookResult, trans, transitionOptions) {\n        if (!this.enabled(Category.HOOK))\n            return;\n        console.log(transLbl(trans) + \":   <- Hook returned: \" + maxLength(200, stringify(hookResult)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvePath = function (path, when, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":         Resolving \" + path + \" (\" + when + \")\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceResolvableResolved = function (resolvable, trans) {\n        if (!this.enabled(Category.RESOLVE))\n            return;\n        console.log(transLbl(trans) + \":               <- Resolved  \" + resolvable + \" to: \" + maxLength(200, stringify(resolvable.data)));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceError = function (reason, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Rejected \" + stringify(trans) + \", reason: \" + reason);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceSuccess = function (finalState, trans) {\n        if (!this.enabled(Category.TRANSITION))\n            return;\n        console.log(transLbl(trans) + \": <- Success  \" + stringify(trans) + \", final state: \" + finalState.name);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewEvent = function (event, viewData, extra) {\n        if (extra === void 0) { extra = ''; }\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        console.log(\"ui-view: \" + padString(30, event) + \" \" + uiViewString(viewData) + extra);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewConfigUpdated = function (viewData, context) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Updating', viewData, \" with ViewConfig from context='\" + context + \"'\");\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceUIViewFill = function (viewData, html) {\n        if (!this.enabled(Category.UIVIEW))\n            return;\n        this.traceUIViewEvent('Fill', viewData, \" with: \" + maxLength(200, html));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewSync = function (pairs) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        var uivheader = 'uiview component fqn';\n        var cfgheader = 'view config state (view name)';\n        var mapping = pairs\n            .map(function (_a) {\n            var uiView = _a.uiView, viewConfig = _a.viewConfig;\n            var _b;\n            var uiv = uiView && uiView.fqn;\n            var cfg = viewConfig && viewConfig.viewDecl.$context.name + \": (\" + viewConfig.viewDecl.$name + \")\";\n            return _b = {}, _b[uivheader] = uiv, _b[cfgheader] = cfg, _b;\n        })\n            .sort(function (a, b) { return (a[uivheader] || '').localeCompare(b[uivheader] || ''); });\n        consoletable(mapping);\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceEvent = function (event, viewConfig) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + viewConfigString(viewConfig));\n    };\n    /** @internalapi called by ui-router code */\n    Trace.prototype.traceViewServiceUIViewEvent = function (event, viewData) {\n        if (!this.enabled(Category.VIEWCONFIG))\n            return;\n        console.log(\"VIEWCONFIG: \" + event + \" \" + uiViewString(viewData));\n    };\n    return Trace;\n}());\nexport { Trace };\n/**\n * The [[Trace]] singleton\n *\n * #### Example:\n * ```js\n * import {trace} from \"@uirouter/core\";\n * trace.enable(1, 5);\n * ```\n */\nvar trace = new Trace();\nexport { trace };\n//# sourceMappingURL=trace.js.map","/** @publicapi @module params */ /** */\nimport { extend, filter, map } from '../common/common';\nimport { isArray, isDefined } from '../common/predicates';\n/**\n * An internal class which implements [[ParamTypeDefinition]].\n *\n * A [[ParamTypeDefinition]] is a plain javascript object used to register custom parameter types.\n * When a param type definition is registered, an instance of this class is created internally.\n *\n * This class has naive implementations for all the [[ParamTypeDefinition]] methods.\n *\n * Used by [[UrlMatcher]] when matching or formatting URLs, or comparing and validating parameter values.\n *\n * #### Example:\n * ```js\n * var paramTypeDef = {\n *   decode: function(val) { return parseInt(val, 10); },\n *   encode: function(val) { return val && val.toString(); },\n *   equals: function(a, b) { return this.is(a) && a === b; },\n *   is: function(val) { return angular.isNumber(val) && isFinite(val) && val % 1 === 0; },\n *   pattern: /\\d+/\n * }\n *\n * var paramType = new ParamType(paramTypeDef);\n * ```\n * @internalapi\n */\nvar ParamType = /** @class */ (function () {\n    /**\n     * @param def  A configuration object which contains the custom type definition.  The object's\n     *        properties will override the default methods and/or pattern in `ParamType`'s public interface.\n     * @returns a new ParamType object\n     */\n    function ParamType(def) {\n        /** @inheritdoc */\n        this.pattern = /.*/;\n        /** @inheritdoc */\n        this.inherit = true;\n        extend(this, def);\n    }\n    // consider these four methods to be \"abstract methods\" that should be overridden\n    /** @inheritdoc */\n    ParamType.prototype.is = function (val, key) {\n        return true;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.encode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.decode = function (val, key) {\n        return val;\n    };\n    /** @inheritdoc */\n    ParamType.prototype.equals = function (a, b) {\n        // tslint:disable-next-line:triple-equals\n        return a == b;\n    };\n    ParamType.prototype.$subPattern = function () {\n        var sub = this.pattern.toString();\n        return sub.substr(1, sub.length - 2);\n    };\n    ParamType.prototype.toString = function () {\n        return \"{ParamType:\" + this.name + \"}\";\n    };\n    /** Given an encoded string, or a decoded object, returns a decoded object */\n    ParamType.prototype.$normalize = function (val) {\n        return this.is(val) ? val : this.decode(val);\n    };\n    /**\n     * Wraps an existing custom ParamType as an array of ParamType, depending on 'mode'.\n     * e.g.:\n     * - urlmatcher pattern \"/path?{queryParam[]:int}\"\n     * - url: \"/path?queryParam=1&queryParam=2\n     * - $stateParams.queryParam will be [1, 2]\n     * if `mode` is \"auto\", then\n     * - url: \"/path?queryParam=1 will create $stateParams.queryParam: 1\n     * - url: \"/path?queryParam=1&queryParam=2 will create $stateParams.queryParam: [1, 2]\n     */\n    ParamType.prototype.$asArray = function (mode, isSearch) {\n        if (!mode)\n            return this;\n        if (mode === 'auto' && !isSearch)\n            throw new Error(\"'auto' array mode is for query parameters only\");\n        return new ArrayType(this, mode);\n    };\n    return ParamType;\n}());\nexport { ParamType };\n/**\n * Wraps up a `ParamType` object to handle array values.\n * @internalapi\n */\nfunction ArrayType(type, mode) {\n    var _this = this;\n    // Wrap non-array value as array\n    function arrayWrap(val) {\n        return isArray(val) ? val : isDefined(val) ? [val] : [];\n    }\n    // Unwrap array value for \"auto\" mode. Return undefined for empty array.\n    function arrayUnwrap(val) {\n        switch (val.length) {\n            case 0:\n                return undefined;\n            case 1:\n                return mode === 'auto' ? val[0] : val;\n            default:\n                return val;\n        }\n    }\n    // Wraps type (.is/.encode/.decode) functions to operate on each value of an array\n    function arrayHandler(callback, allTruthyMode) {\n        return function handleArray(val) {\n            if (isArray(val) && val.length === 0)\n                return val;\n            var arr = arrayWrap(val);\n            var result = map(arr, callback);\n            return allTruthyMode === true ? filter(result, function (x) { return !x; }).length === 0 : arrayUnwrap(result);\n        };\n    }\n    // Wraps type (.equals) functions to operate on each value of an array\n    function arrayEqualsHandler(callback) {\n        return function handleArray(val1, val2) {\n            var left = arrayWrap(val1), right = arrayWrap(val2);\n            if (left.length !== right.length)\n                return false;\n            for (var i = 0; i < left.length; i++) {\n                if (!callback(left[i], right[i]))\n                    return false;\n            }\n            return true;\n        };\n    }\n    ['encode', 'decode', 'equals', '$normalize'].forEach(function (name) {\n        var paramTypeFn = type[name].bind(type);\n        var wrapperFn = name === 'equals' ? arrayEqualsHandler : arrayHandler;\n        _this[name] = wrapperFn(paramTypeFn);\n    });\n    extend(this, {\n        dynamic: type.dynamic,\n        name: type.name,\n        pattern: type.pattern,\n        inherit: type.inherit,\n        raw: type.raw,\n        is: arrayHandler(type.is.bind(type), true),\n        $arrayMode: mode,\n    });\n}\n//# sourceMappingURL=paramType.js.map","/** @publicapi @module params */ /** */\nimport { extend, filter, map, allTrueR, find } from '../common/common';\nimport { prop } from '../common/hof';\nimport { isInjectable, isDefined, isString, isArray, isUndefined } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/** @hidden */\nvar hasOwn = Object.prototype.hasOwnProperty;\n/** @hidden */\nvar isShorthand = function (cfg) {\n    return ['value', 'type', 'squash', 'array', 'dynamic'].filter(hasOwn.bind(cfg || {})).length === 0;\n};\n/** @internalapi */\nvar DefType;\n(function (DefType) {\n    DefType[DefType[\"PATH\"] = 0] = \"PATH\";\n    DefType[DefType[\"SEARCH\"] = 1] = \"SEARCH\";\n    DefType[DefType[\"CONFIG\"] = 2] = \"CONFIG\";\n})(DefType || (DefType = {}));\nexport { DefType };\n/** @internalapi */\nfunction getParamDeclaration(paramName, location, state) {\n    var noReloadOnSearch = (state.reloadOnSearch === false && location === DefType.SEARCH) || undefined;\n    var dynamic = find([state.dynamic, noReloadOnSearch], isDefined);\n    var defaultConfig = isDefined(dynamic) ? { dynamic: dynamic } : {};\n    var paramConfig = unwrapShorthand(state && state.params && state.params[paramName]);\n    return extend(defaultConfig, paramConfig);\n}\n/** @hidden */\nfunction unwrapShorthand(cfg) {\n    cfg = isShorthand(cfg) ? { value: cfg } : cfg;\n    getStaticDefaultValue['__cacheable'] = true;\n    function getStaticDefaultValue() {\n        return cfg.value;\n    }\n    var $$fn = isInjectable(cfg.value) ? cfg.value : getStaticDefaultValue;\n    return extend(cfg, { $$fn: $$fn });\n}\n/** @hidden */\nfunction getType(cfg, urlType, location, id, paramTypes) {\n    if (cfg.type && urlType && urlType.name !== 'string')\n        throw new Error(\"Param '\" + id + \"' has two type configurations.\");\n    if (cfg.type && urlType && urlType.name === 'string' && paramTypes.type(cfg.type))\n        return paramTypes.type(cfg.type);\n    if (urlType)\n        return urlType;\n    if (!cfg.type) {\n        var type = location === DefType.CONFIG\n            ? 'any'\n            : location === DefType.PATH\n                ? 'path'\n                : location === DefType.SEARCH\n                    ? 'query'\n                    : 'string';\n        return paramTypes.type(type);\n    }\n    return cfg.type instanceof ParamType ? cfg.type : paramTypes.type(cfg.type);\n}\n/**\n * @internalapi\n * returns false, true, or the squash value to indicate the \"default parameter url squash policy\".\n */\nfunction getSquashPolicy(config, isOptional, defaultPolicy) {\n    var squash = config.squash;\n    if (!isOptional || squash === false)\n        return false;\n    if (!isDefined(squash) || squash == null)\n        return defaultPolicy;\n    if (squash === true || isString(squash))\n        return squash;\n    throw new Error(\"Invalid squash policy: '\" + squash + \"'. Valid policies: false, true, or arbitrary string\");\n}\n/** @internalapi */\nfunction getReplace(config, arrayMode, isOptional, squash) {\n    var defaultPolicy = [\n        { from: '', to: isOptional || arrayMode ? undefined : '' },\n        { from: null, to: isOptional || arrayMode ? undefined : '' },\n    ];\n    var replace = isArray(config.replace) ? config.replace : [];\n    if (isString(squash))\n        replace.push({ from: squash, to: undefined });\n    var configuredKeys = map(replace, prop('from'));\n    return filter(defaultPolicy, function (item) { return configuredKeys.indexOf(item.from) === -1; }).concat(replace);\n}\n/** @internalapi */\nvar Param = /** @class */ (function () {\n    function Param(id, type, location, urlConfig, state) {\n        var config = getParamDeclaration(id, location, state);\n        type = getType(config, type, location, id, urlConfig.paramTypes);\n        var arrayMode = getArrayMode();\n        type = arrayMode ? type.$asArray(arrayMode, location === DefType.SEARCH) : type;\n        var isOptional = config.value !== undefined || location === DefType.SEARCH;\n        var dynamic = isDefined(config.dynamic) ? !!config.dynamic : !!type.dynamic;\n        var raw = isDefined(config.raw) ? !!config.raw : !!type.raw;\n        var squash = getSquashPolicy(config, isOptional, urlConfig.defaultSquashPolicy());\n        var replace = getReplace(config, arrayMode, isOptional, squash);\n        var inherit = isDefined(config.inherit) ? !!config.inherit : !!type.inherit;\n        // array config: param name (param[]) overrides default settings.  explicit config overrides param name.\n        function getArrayMode() {\n            var arrayDefaults = { array: location === DefType.SEARCH ? 'auto' : false };\n            var arrayParamNomenclature = id.match(/\\[\\]$/) ? { array: true } : {};\n            return extend(arrayDefaults, arrayParamNomenclature, config).array;\n        }\n        extend(this, { id: id, type: type, location: location, isOptional: isOptional, dynamic: dynamic, raw: raw, squash: squash, replace: replace, inherit: inherit, array: arrayMode, config: config });\n    }\n    Param.values = function (params, values) {\n        if (values === void 0) { values = {}; }\n        var paramValues = {};\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            paramValues[param.id] = param.value(values[param.id]);\n        }\n        return paramValues;\n    };\n    /**\n     * Finds [[Param]] objects which have different param values\n     *\n     * Filters a list of [[Param]] objects to only those whose parameter values differ in two param value objects\n     *\n     * @param params: The list of Param objects to filter\n     * @param values1: The first set of parameter values\n     * @param values2: the second set of parameter values\n     *\n     * @returns any Param objects whose values were different between values1 and values2\n     */\n    Param.changed = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return params.filter(function (param) { return !param.type.equals(values1[param.id], values2[param.id]); });\n    };\n    /**\n     * Checks if two param value objects are equal (for a set of [[Param]] objects)\n     *\n     * @param params The list of [[Param]] objects to check\n     * @param values1 The first set of param values\n     * @param values2 The second set of param values\n     *\n     * @returns true if the param values in values1 and values2 are equal\n     */\n    Param.equals = function (params, values1, values2) {\n        if (values1 === void 0) { values1 = {}; }\n        if (values2 === void 0) { values2 = {}; }\n        return Param.changed(params, values1, values2).length === 0;\n    };\n    /** Returns true if a the parameter values are valid, according to the Param definitions */\n    Param.validates = function (params, values) {\n        if (values === void 0) { values = {}; }\n        return params.map(function (param) { return param.validates(values[param.id]); }).reduce(allTrueR, true);\n    };\n    Param.prototype.isDefaultValue = function (value) {\n        return this.isOptional && this.type.equals(this.value(), value);\n    };\n    /**\n     * [Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\n     * default value, which may be the result of an injectable function.\n     */\n    Param.prototype.value = function (value) {\n        var _this = this;\n        /**\n         * [Internal] Get the default value of a parameter, which may be an injectable function.\n         */\n        var getDefaultValue = function () {\n            if (_this._defaultValueCache)\n                return _this._defaultValueCache.defaultValue;\n            if (!services.$injector)\n                throw new Error('Injectable functions cannot be called at configuration time');\n            var defaultValue = services.$injector.invoke(_this.config.$$fn);\n            if (defaultValue !== null && defaultValue !== undefined && !_this.type.is(defaultValue))\n                throw new Error(\"Default value (\" + defaultValue + \") for parameter '\" + _this.id + \"' is not an instance of ParamType (\" + _this.type.name + \")\");\n            if (_this.config.$$fn['__cacheable']) {\n                _this._defaultValueCache = { defaultValue: defaultValue };\n            }\n            return defaultValue;\n        };\n        var replaceSpecialValues = function (val) {\n            for (var _i = 0, _a = _this.replace; _i < _a.length; _i++) {\n                var tuple = _a[_i];\n                if (tuple.from === val)\n                    return tuple.to;\n            }\n            return val;\n        };\n        value = replaceSpecialValues(value);\n        return isUndefined(value) ? getDefaultValue() : this.type.$normalize(value);\n    };\n    Param.prototype.isSearch = function () {\n        return this.location === DefType.SEARCH;\n    };\n    Param.prototype.validates = function (value) {\n        // There was no parameter value, but the param is optional\n        if ((isUndefined(value) || value === null) && this.isOptional)\n            return true;\n        // The value was not of the correct ParamType, and could not be decoded to the correct ParamType\n        var normalized = this.type.$normalize(value);\n        if (!this.type.is(normalized))\n            return false;\n        // The value was of the correct type, but when encoded, did not match the ParamType's regexp\n        var encoded = this.type.encode(normalized);\n        return !(isString(encoded) && !this.type.pattern.exec(encoded));\n    };\n    Param.prototype.toString = function () {\n        return \"{Param:\" + this.id + \" \" + this.type + \" squash: '\" + this.squash + \"' optional: \" + this.isOptional + \"}\";\n    };\n    return Param;\n}());\nexport { Param };\n//# sourceMappingURL=param.js.map","/** @publicapi @module params */ /** */\nimport { fromJson, toJson, identity, equals, inherit, map, extend, pick } from '../common/common';\nimport { isDefined, isNullOrUndefined } from '../common/predicates';\nimport { is } from '../common/hof';\nimport { services } from '../common/coreservices';\nimport { ParamType } from './paramType';\n/**\n * A registry for parameter types.\n *\n * This registry manages the built-in (and custom) parameter types.\n *\n * The built-in parameter types are:\n *\n * - [[string]]\n * - [[path]]\n * - [[query]]\n * - [[hash]]\n * - [[int]]\n * - [[bool]]\n * - [[date]]\n * - [[json]]\n * - [[any]]\n *\n * To register custom parameter types, use [[UrlConfig.type]], i.e.,\n *\n * ```js\n * router.urlService.config.type(customType)\n * ```\n */\nvar ParamTypes = /** @class */ (function () {\n    /** @internalapi */\n    function ParamTypes() {\n        /** @hidden */\n        this.enqueue = true;\n        /** @hidden */\n        this.typeQueue = [];\n        /** @internalapi */\n        this.defaultTypes = pick(ParamTypes.prototype, [\n            'hash',\n            'string',\n            'query',\n            'path',\n            'int',\n            'bool',\n            'date',\n            'json',\n            'any',\n        ]);\n        // Register default types. Store them in the prototype of this.types.\n        var makeType = function (definition, name) { return new ParamType(extend({ name: name }, definition)); };\n        this.types = inherit(map(this.defaultTypes, makeType), {});\n    }\n    /** @internalapi */\n    ParamTypes.prototype.dispose = function () {\n        this.types = {};\n    };\n    /**\n     * Registers a parameter type\n     *\n     * End users should call [[UrlMatcherFactory.type]], which delegates to this method.\n     */\n    ParamTypes.prototype.type = function (name, definition, definitionFn) {\n        if (!isDefined(definition))\n            return this.types[name];\n        if (this.types.hasOwnProperty(name))\n            throw new Error(\"A type named '\" + name + \"' has already been defined.\");\n        this.types[name] = new ParamType(extend({ name: name }, definition));\n        if (definitionFn) {\n            this.typeQueue.push({ name: name, def: definitionFn });\n            if (!this.enqueue)\n                this._flushTypeQueue();\n        }\n        return this;\n    };\n    /** @internalapi */\n    ParamTypes.prototype._flushTypeQueue = function () {\n        while (this.typeQueue.length) {\n            var type = this.typeQueue.shift();\n            if (type.pattern)\n                throw new Error(\"You cannot override a type's .pattern at runtime.\");\n            extend(this.types[type.name], services.$injector.invoke(type.def));\n        }\n    };\n    return ParamTypes;\n}());\nexport { ParamTypes };\n/** @hidden */\nfunction initDefaultTypes() {\n    var makeDefaultType = function (def) {\n        var valToString = function (val) { return (val != null ? val.toString() : val); };\n        var defaultTypeBase = {\n            encode: valToString,\n            decode: valToString,\n            is: is(String),\n            pattern: /.*/,\n            // tslint:disable-next-line:triple-equals\n            equals: function (a, b) { return a == b; },\n        };\n        return extend({}, defaultTypeBase, def);\n    };\n    // Default Parameter Type Definitions\n    extend(ParamTypes.prototype, {\n        string: makeDefaultType({}),\n        path: makeDefaultType({\n            pattern: /[^/]*/,\n        }),\n        query: makeDefaultType({}),\n        hash: makeDefaultType({\n            inherit: false,\n        }),\n        int: makeDefaultType({\n            decode: function (val) { return parseInt(val, 10); },\n            is: function (val) {\n                return !isNullOrUndefined(val) && this.decode(val.toString()) === val;\n            },\n            pattern: /-?\\d+/,\n        }),\n        bool: makeDefaultType({\n            encode: function (val) { return (val && 1) || 0; },\n            decode: function (val) { return parseInt(val, 10) !== 0; },\n            is: is(Boolean),\n            pattern: /0|1/,\n        }),\n        date: makeDefaultType({\n            encode: function (val) {\n                return !this.is(val)\n                    ? undefined\n                    : [val.getFullYear(), ('0' + (val.getMonth() + 1)).slice(-2), ('0' + val.getDate()).slice(-2)].join('-');\n            },\n            decode: function (val) {\n                if (this.is(val))\n                    return val;\n                var match = this.capture.exec(val);\n                return match ? new Date(match[1], match[2] - 1, match[3]) : undefined;\n            },\n            is: function (val) { return val instanceof Date && !isNaN(val.valueOf()); },\n            equals: function (l, r) {\n                return ['getFullYear', 'getMonth', 'getDate'].reduce(function (acc, fn) { return acc && l[fn]() === r[fn](); }, true);\n            },\n            pattern: /[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])/,\n            capture: /([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])/,\n        }),\n        json: makeDefaultType({\n            encode: toJson,\n            decode: fromJson,\n            is: is(Object),\n            equals: equals,\n            pattern: /[^/]*/,\n        }),\n        // does not encode/decode\n        any: makeDefaultType({\n            encode: identity,\n            decode: identity,\n            is: function () { return true; },\n            equals: equals,\n        }),\n    });\n}\ninitDefaultTypes();\n//# sourceMappingURL=paramTypes.js.map","/** @publicapi @module params */ /** */\nimport { extend, ancestors } from '../common/common';\n/** @internalapi */\nvar StateParams = /** @class */ (function () {\n    function StateParams(params) {\n        if (params === void 0) { params = {}; }\n        extend(this, params);\n    }\n    /**\n     * Merges a set of parameters with all parameters inherited between the common parents of the\n     * current state and a given destination state.\n     *\n     * @param {Object} newParams The set of parameters which will be composited with inherited params.\n     * @param {Object} $current Internal definition of object representing the current state.\n     * @param {Object} $to Internal definition of object representing state to transition to.\n     */\n    StateParams.prototype.$inherit = function (newParams, $current, $to) {\n        var parentParams;\n        var parents = ancestors($current, $to), inherited = {}, inheritList = [];\n        for (var i in parents) {\n            if (!parents[i] || !parents[i].params)\n                continue;\n            parentParams = Object.keys(parents[i].params);\n            if (!parentParams.length)\n                continue;\n            for (var j in parentParams) {\n                if (inheritList.indexOf(parentParams[j]) >= 0)\n                    continue;\n                inheritList.push(parentParams[j]);\n                inherited[parentParams[j]] = this[parentParams[j]];\n            }\n        }\n        return extend({}, inherited, newParams);\n    };\n    return StateParams;\n}());\nexport { StateParams };\n//# sourceMappingURL=stateParams.js.map","/** @internalapi @module path */ /** */\nimport { extend, applyPairs, find } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Param } from '../params/param';\n/**\n * A node in a [[TreeChanges]] path\n *\n * For a [[TreeChanges]] path, this class holds the stateful information for a single node in the path.\n * Each PathNode corresponds to a state being entered, exited, or retained.\n * The stateful information includes parameter values and resolve data.\n */\nvar PathNode = /** @class */ (function () {\n    function PathNode(stateOrNode) {\n        if (stateOrNode instanceof PathNode) {\n            var node = stateOrNode;\n            this.state = node.state;\n            this.paramSchema = node.paramSchema.slice();\n            this.paramValues = extend({}, node.paramValues);\n            this.resolvables = node.resolvables.slice();\n            this.views = node.views && node.views.slice();\n        }\n        else {\n            var state = stateOrNode;\n            this.state = state;\n            this.paramSchema = state.parameters({ inherit: false });\n            this.paramValues = {};\n            this.resolvables = state.resolvables.map(function (res) { return res.clone(); });\n        }\n    }\n    PathNode.prototype.clone = function () {\n        return new PathNode(this);\n    };\n    /** Sets [[paramValues]] for the node, from the values of an object hash */\n    PathNode.prototype.applyRawParams = function (params) {\n        var getParamVal = function (paramDef) { return [paramDef.id, paramDef.value(params[paramDef.id])]; };\n        this.paramValues = this.paramSchema.reduce(function (memo, pDef) { return applyPairs(memo, getParamVal(pDef)); }, {});\n        return this;\n    };\n    /** Gets a specific [[Param]] metadata that belongs to the node */\n    PathNode.prototype.parameter = function (name) {\n        return find(this.paramSchema, propEq('id', name));\n    };\n    /**\n     * @returns true if the state and parameter values for another PathNode are\n     * equal to the state and param values for this PathNode\n     */\n    PathNode.prototype.equals = function (node, paramsFn) {\n        var diff = this.diff(node, paramsFn);\n        return diff && diff.length === 0;\n    };\n    /**\n     * Finds Params with different parameter values on another PathNode.\n     *\n     * Given another node (of the same state), finds the parameter values which differ.\n     * Returns the [[Param]] (schema objects) whose parameter values differ.\n     *\n     * Given another node for a different state, returns `false`\n     *\n     * @param node The node to compare to\n     * @param paramsFn A function that returns which parameters should be compared.\n     * @returns The [[Param]]s which differ, or null if the two nodes are for different states\n     */\n    PathNode.prototype.diff = function (node, paramsFn) {\n        if (this.state !== node.state)\n            return false;\n        var params = paramsFn ? paramsFn(this) : this.paramSchema;\n        return Param.changed(params, this.paramValues, node.paramValues);\n    };\n    /**\n     * Returns a clone of the PathNode\n     * @deprecated use instance method `node.clone()`\n     */\n    PathNode.clone = function (node) { return node.clone(); };\n    return PathNode;\n}());\nexport { PathNode };\n//# sourceMappingURL=pathNode.js.map","/** @publicapi @module state */ /** */\nimport { isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { extend } from '../common';\n/**\n * Encapsulate the target (destination) state/params/options of a [[Transition]].\n *\n * This class is frequently used to redirect a transition to a new destination.\n *\n * See:\n *\n * - [[HookResult]]\n * - [[TransitionHookFn]]\n * - [[TransitionService.onStart]]\n *\n * To create a `TargetState`, use [[StateService.target]].\n *\n * ---\n *\n * This class wraps:\n *\n * 1) an identifier for a state\n * 2) a set of parameters\n * 3) and transition options\n * 4) the registered state object (the [[StateDeclaration]])\n *\n * Many UI-Router APIs such as [[StateService.go]] take a [[StateOrName]] argument which can\n * either be a *state object* (a [[StateDeclaration]] or [[StateObject]]) or a *state name* (a string).\n * The `TargetState` class normalizes those options.\n *\n * A `TargetState` may be valid (the state being targeted exists in the registry)\n * or invalid (the state being targeted is not registered).\n */\nvar TargetState = /** @class */ (function () {\n    /**\n     * The TargetState constructor\n     *\n     * Note: Do not construct a `TargetState` manually.\n     * To create a `TargetState`, use the [[StateService.target]] factory method.\n     *\n     * @param _stateRegistry The StateRegistry to use to look up the _definition\n     * @param _identifier An identifier for a state.\n     *    Either a fully-qualified state name, or the object used to define the state.\n     * @param _params Parameters for the target state\n     * @param _options Transition options.\n     *\n     * @internalapi\n     */\n    function TargetState(_stateRegistry, _identifier, _params, _options) {\n        this._stateRegistry = _stateRegistry;\n        this._identifier = _identifier;\n        this._identifier = _identifier;\n        this._params = extend({}, _params || {});\n        this._options = extend({}, _options || {});\n        this._definition = _stateRegistry.matcher.find(_identifier, this._options.relative);\n    }\n    /** The name of the state this object targets */\n    TargetState.prototype.name = function () {\n        return (this._definition && this._definition.name) || this._identifier;\n    };\n    /** The identifier used when creating this TargetState */\n    TargetState.prototype.identifier = function () {\n        return this._identifier;\n    };\n    /** The target parameter values */\n    TargetState.prototype.params = function () {\n        return this._params;\n    };\n    /** The internal state object (if it was found) */\n    TargetState.prototype.$state = function () {\n        return this._definition;\n    };\n    /** The internal state declaration (if it was found) */\n    TargetState.prototype.state = function () {\n        return this._definition && this._definition.self;\n    };\n    /** The target options */\n    TargetState.prototype.options = function () {\n        return this._options;\n    };\n    /** True if the target state was found */\n    TargetState.prototype.exists = function () {\n        return !!(this._definition && this._definition.self);\n    };\n    /** True if the object is valid */\n    TargetState.prototype.valid = function () {\n        return !this.error();\n    };\n    /** If the object is invalid, returns the reason why */\n    TargetState.prototype.error = function () {\n        var base = this.options().relative;\n        if (!this._definition && !!base) {\n            var stateName = base.name ? base.name : base;\n            return \"Could not resolve '\" + this.name() + \"' from state '\" + stateName + \"'\";\n        }\n        if (!this._definition)\n            return \"No such state '\" + this.name() + \"'\";\n        if (!this._definition.self)\n            return \"State '\" + this.name() + \"' has an invalid definition\";\n    };\n    TargetState.prototype.toString = function () {\n        return \"'\" + this.name() + \"'\" + stringify(this.params());\n    };\n    /**\n     * Returns a copy of this TargetState which targets a different state.\n     * The new TargetState has the same parameter values and transition options.\n     *\n     * @param state The new state that should be targeted\n     */\n    TargetState.prototype.withState = function (state) {\n        return new TargetState(this._stateRegistry, state, this._params, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified parameter values.\n     *\n     * @param params the new parameter values to use\n     * @param replace When false (default) the new parameter values will be merged with the current values.\n     *                When true the parameter values will be used instead of the current values.\n     */\n    TargetState.prototype.withParams = function (params, replace) {\n        if (replace === void 0) { replace = false; }\n        var newParams = replace ? params : extend({}, this._params, params);\n        return new TargetState(this._stateRegistry, this._identifier, newParams, this._options);\n    };\n    /**\n     * Returns a copy of this TargetState, using the specified Transition Options.\n     *\n     * @param options the new options to use\n     * @param replace When false (default) the new options will be merged with the current options.\n     *                When true the options will be used instead of the current options.\n     */\n    TargetState.prototype.withOptions = function (options, replace) {\n        if (replace === void 0) { replace = false; }\n        var newOpts = replace ? options : extend({}, this._options, options);\n        return new TargetState(this._stateRegistry, this._identifier, this._params, newOpts);\n    };\n    /** Returns true if the object has a state property that might be a state or state name */\n    TargetState.isDef = function (obj) { return obj && obj.state && (isString(obj.state) || isString(obj.state.name)); };\n    return TargetState;\n}());\nexport { TargetState };\n//# sourceMappingURL=targetState.js.map","/** @internalapi @module path */ /** */\nimport { extend, find, pick, omit, tail, mergeR, values, unnestR, inArray, arrayTuples, } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { TargetState } from '../state/targetState';\nimport { PathNode } from './pathNode';\n/**\n * This class contains functions which convert TargetStates, Nodes and paths from one type to another.\n */\nvar PathUtils = /** @class */ (function () {\n    function PathUtils() {\n    }\n    /** Given a PathNode[], create an TargetState */\n    PathUtils.makeTargetState = function (registry, path) {\n        var state = tail(path).state;\n        return new TargetState(registry, state, path.map(prop('paramValues')).reduce(mergeR, {}), {});\n    };\n    PathUtils.buildPath = function (targetState) {\n        var toParams = targetState.params();\n        return targetState.$state().path.map(function (state) { return new PathNode(state).applyRawParams(toParams); });\n    };\n    /** Given a fromPath: PathNode[] and a TargetState, builds a toPath: PathNode[] */\n    PathUtils.buildToPath = function (fromPath, targetState) {\n        var toPath = PathUtils.buildPath(targetState);\n        if (targetState.options().inherit) {\n            return PathUtils.inheritParams(fromPath, toPath, Object.keys(targetState.params()));\n        }\n        return toPath;\n    };\n    /**\n     * Creates ViewConfig objects and adds to nodes.\n     *\n     * On each [[PathNode]], creates ViewConfig objects from the views: property of the node's state\n     */\n    PathUtils.applyViewConfigs = function ($view, path, states) {\n        // Only apply the viewConfigs to the nodes for the given states\n        path.filter(function (node) { return inArray(states, node.state); }).forEach(function (node) {\n            var viewDecls = values(node.state.views || {});\n            var subPath = PathUtils.subPath(path, function (n) { return n === node; });\n            var viewConfigs = viewDecls.map(function (view) { return $view.createViewConfig(subPath, view); });\n            node.views = viewConfigs.reduce(unnestR, []);\n        });\n    };\n    /**\n     * Given a fromPath and a toPath, returns a new to path which inherits parameters from the fromPath\n     *\n     * For a parameter in a node to be inherited from the from path:\n     * - The toPath's node must have a matching node in the fromPath (by state).\n     * - The parameter name must not be found in the toKeys parameter array.\n     *\n     * Note: the keys provided in toKeys are intended to be those param keys explicitly specified by some\n     * caller, for instance, $state.transitionTo(..., toParams).  If a key was found in toParams,\n     * it is not inherited from the fromPath.\n     */\n    PathUtils.inheritParams = function (fromPath, toPath, toKeys) {\n        if (toKeys === void 0) { toKeys = []; }\n        function nodeParamVals(path, state) {\n            var node = find(path, propEq('state', state));\n            return extend({}, node && node.paramValues);\n        }\n        var noInherit = fromPath\n            .map(function (node) { return node.paramSchema; })\n            .reduce(unnestR, [])\n            .filter(function (param) { return !param.inherit; })\n            .map(prop('id'));\n        /**\n         * Given an [[PathNode]] \"toNode\", return a new [[PathNode]] with param values inherited from the\n         * matching node in fromPath.  Only inherit keys that aren't found in \"toKeys\" from the node in \"fromPath\"\"\n         */\n        function makeInheritedParamsNode(toNode) {\n            // All param values for the node (may include default key/vals, when key was not found in toParams)\n            var toParamVals = extend({}, toNode && toNode.paramValues);\n            // limited to only those keys found in toParams\n            var incomingParamVals = pick(toParamVals, toKeys);\n            toParamVals = omit(toParamVals, toKeys);\n            var fromParamVals = omit(nodeParamVals(fromPath, toNode.state) || {}, noInherit);\n            // extend toParamVals with any fromParamVals, then override any of those those with incomingParamVals\n            var ownParamVals = extend(toParamVals, fromParamVals, incomingParamVals);\n            return new PathNode(toNode.state).applyRawParams(ownParamVals);\n        }\n        // The param keys specified by the incoming toParams\n        return toPath.map(makeInheritedParamsNode);\n    };\n    /**\n     * Computes the tree changes (entering, exiting) between a fromPath and toPath.\n     */\n    PathUtils.treeChanges = function (fromPath, toPath, reloadState) {\n        var max = Math.min(fromPath.length, toPath.length);\n        var keep = 0;\n        var nodesMatch = function (node1, node2) { return node1.equals(node2, PathUtils.nonDynamicParams); };\n        while (keep < max && fromPath[keep].state !== reloadState && nodesMatch(fromPath[keep], toPath[keep])) {\n            keep++;\n        }\n        /** Given a retained node, return a new node which uses the to node's param values */\n        function applyToParams(retainedNode, idx) {\n            var cloned = retainedNode.clone();\n            cloned.paramValues = toPath[idx].paramValues;\n            return cloned;\n        }\n        var from, retained, exiting, entering, to;\n        from = fromPath;\n        retained = from.slice(0, keep);\n        exiting = from.slice(keep);\n        // Create a new retained path (with shallow copies of nodes) which have the params of the toPath mapped\n        var retainedWithToParams = retained.map(applyToParams);\n        entering = toPath.slice(keep);\n        to = retainedWithToParams.concat(entering);\n        return { from: from, to: to, retained: retained, retainedWithToParams: retainedWithToParams, exiting: exiting, entering: entering };\n    };\n    /**\n     * Returns a new path which is: the subpath of the first path which matches the second path.\n     *\n     * The new path starts from root and contains any nodes that match the nodes in the second path.\n     * It stops before the first non-matching node.\n     *\n     * Nodes are compared using their state property and their parameter values.\n     * If a `paramsFn` is provided, only the [[Param]] returned by the function will be considered when comparing nodes.\n     *\n     * @param pathA the first path\n     * @param pathB the second path\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     *\n     * @returns an array of PathNodes from the first path which match the nodes in the second path\n     */\n    PathUtils.matching = function (pathA, pathB, paramsFn) {\n        var done = false;\n        var tuples = arrayTuples(pathA, pathB);\n        return tuples.reduce(function (matching, _a) {\n            var nodeA = _a[0], nodeB = _a[1];\n            done = done || !nodeA.equals(nodeB, paramsFn);\n            return done ? matching : matching.concat(nodeA);\n        }, []);\n    };\n    /**\n     * Returns true if two paths are identical.\n     *\n     * @param pathA\n     * @param pathB\n     * @param paramsFn a function which returns the parameters to consider when comparing\n     * @returns true if the the states and parameter values for both paths are identical\n     */\n    PathUtils.equals = function (pathA, pathB, paramsFn) {\n        return pathA.length === pathB.length && PathUtils.matching(pathA, pathB, paramsFn).length === pathA.length;\n    };\n    /**\n     * Return a subpath of a path, which stops at the first matching node\n     *\n     * Given an array of nodes, returns a subset of the array starting from the first node,\n     * stopping when the first node matches the predicate.\n     *\n     * @param path a path of [[PathNode]]s\n     * @param predicate a [[Predicate]] fn that matches [[PathNode]]s\n     * @returns a subpath up to the matching node, or undefined if no match is found\n     */\n    PathUtils.subPath = function (path, predicate) {\n        var node = find(path, predicate);\n        var elementIdx = path.indexOf(node);\n        return elementIdx === -1 ? undefined : path.slice(0, elementIdx + 1);\n    };\n    PathUtils.nonDynamicParams = function (node) {\n        return node.state.parameters({ inherit: false }).filter(function (param) { return !param.dynamic; });\n    };\n    /** Gets the raw parameter values from a path */\n    PathUtils.paramValues = function (path) { return path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {}); };\n    return PathUtils;\n}());\nexport { PathUtils };\n//# sourceMappingURL=pathUtils.js.map","/** @internalapi */\nexport var resolvePolicies = {\n    when: {\n        LAZY: 'LAZY',\n        EAGER: 'EAGER',\n    },\n    async: {\n        WAIT: 'WAIT',\n        NOWAIT: 'NOWAIT',\n        RXWAIT: 'RXWAIT',\n    },\n};\n//# sourceMappingURL=interface.js.map","/** @publicapi @module resolve */ /** */\nimport { extend, identity } from '../common/common';\nimport { services } from '../common/coreservices';\nimport { trace } from '../common/trace';\nimport { stringify } from '../common/strings';\nimport { isFunction, isObject } from '../common/predicates';\nimport { isNullOrUndefined } from '../common/predicates';\n// TODO: explicitly make this user configurable\nexport var defaultResolvePolicy = {\n    when: 'LAZY',\n    async: 'WAIT',\n};\n/**\n * The basic building block for the resolve system.\n *\n * Resolvables encapsulate a state's resolve's resolveFn, the resolveFn's declared dependencies, the wrapped (.promise),\n * and the unwrapped-when-complete (.data) result of the resolveFn.\n *\n * Resolvable.get() either retrieves the Resolvable's existing promise, or else invokes resolve() (which invokes the\n * resolveFn) and returns the resulting promise.\n *\n * Resolvable.get() and Resolvable.resolve() both execute within a context path, which is passed as the first\n * parameter to those fns.\n */\nvar Resolvable = /** @class */ (function () {\n    function Resolvable(arg1, resolveFn, deps, policy, data) {\n        this.resolved = false;\n        this.promise = undefined;\n        if (arg1 instanceof Resolvable) {\n            extend(this, arg1);\n        }\n        else if (isFunction(resolveFn)) {\n            if (isNullOrUndefined(arg1))\n                throw new Error('new Resolvable(): token argument is required');\n            if (!isFunction(resolveFn))\n                throw new Error('new Resolvable(): resolveFn argument must be a function');\n            this.token = arg1;\n            this.policy = policy;\n            this.resolveFn = resolveFn;\n            this.deps = deps || [];\n            this.data = data;\n            this.resolved = data !== undefined;\n            this.promise = this.resolved ? services.$q.when(this.data) : undefined;\n        }\n        else if (isObject(arg1) && arg1.token && (arg1.hasOwnProperty('resolveFn') || arg1.hasOwnProperty('data'))) {\n            var literal = arg1;\n            return new Resolvable(literal.token, literal.resolveFn, literal.deps, literal.policy, literal.data);\n        }\n    }\n    Resolvable.prototype.getPolicy = function (state) {\n        var thisPolicy = this.policy || {};\n        var statePolicy = (state && state.resolvePolicy) || {};\n        return {\n            when: thisPolicy.when || statePolicy.when || defaultResolvePolicy.when,\n            async: thisPolicy.async || statePolicy.async || defaultResolvePolicy.async,\n        };\n    };\n    /**\n     * Asynchronously resolve this Resolvable's data\n     *\n     * Given a ResolveContext that this Resolvable is found in:\n     * Wait for this Resolvable's dependencies, then invoke this Resolvable's function\n     * and update the Resolvable's state\n     */\n    Resolvable.prototype.resolve = function (resolveContext, trans) {\n        var _this = this;\n        var $q = services.$q;\n        // Gets all dependencies from ResolveContext and wait for them to be resolved\n        var getResolvableDependencies = function () {\n            return $q.all(resolveContext.getDependencies(_this).map(function (resolvable) { return resolvable.get(resolveContext, trans); }));\n        };\n        // Invokes the resolve function passing the resolved dependencies as arguments\n        var invokeResolveFn = function (resolvedDeps) { return _this.resolveFn.apply(null, resolvedDeps); };\n        /**\n         * For RXWAIT policy:\n         *\n         * Given an observable returned from a resolve function:\n         * - enables .cache() mode (this allows multicast subscribers)\n         * - then calls toPromise() (this triggers subscribe() and thus fetches)\n         * - Waits for the promise, then return the cached observable (not the first emitted value).\n         */\n        var waitForRx = function (observable$) {\n            var cached = observable$.cache(1);\n            return cached\n                .take(1)\n                .toPromise()\n                .then(function () { return cached; });\n        };\n        // If the resolve policy is RXWAIT, wait for the observable to emit something. otherwise pass through.\n        var node = resolveContext.findNode(this);\n        var state = node && node.state;\n        var maybeWaitForRx = this.getPolicy(state).async === 'RXWAIT' ? waitForRx : identity;\n        // After the final value has been resolved, update the state of the Resolvable\n        var applyResolvedValue = function (resolvedValue) {\n            _this.data = resolvedValue;\n            _this.resolved = true;\n            _this.resolveFn = null;\n            trace.traceResolvableResolved(_this, trans);\n            return _this.data;\n        };\n        // Sets the promise property first, then getsResolvableDependencies in the context of the promise chain. Always waits one tick.\n        return (this.promise = $q\n            .when()\n            .then(getResolvableDependencies)\n            .then(invokeResolveFn)\n            .then(maybeWaitForRx)\n            .then(applyResolvedValue));\n    };\n    /**\n     * Gets a promise for this Resolvable's data.\n     *\n     * Fetches the data and returns a promise.\n     * Returns the existing promise if it has already been fetched once.\n     */\n    Resolvable.prototype.get = function (resolveContext, trans) {\n        return this.promise || this.resolve(resolveContext, trans);\n    };\n    Resolvable.prototype.toString = function () {\n        return \"Resolvable(token: \" + stringify(this.token) + \", requires: [\" + this.deps.map(stringify) + \"])\";\n    };\n    Resolvable.prototype.clone = function () {\n        return new Resolvable(this);\n    };\n    Resolvable.fromData = function (token, data) { return new Resolvable(token, function () { return data; }, null, null, data); };\n    return Resolvable;\n}());\nexport { Resolvable };\n//# sourceMappingURL=resolvable.js.map","/** @publicapi @module resolve */ /** */\nimport { find, tail, uniqR, unnestR, inArray } from '../common/common';\nimport { propEq, not } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { resolvePolicies } from './interface';\nimport { Resolvable } from './resolvable';\nimport { PathUtils } from '../path/pathUtils';\nimport { stringify } from '../common/strings';\nimport { isUndefined } from '../common';\nvar whens = resolvePolicies.when;\nvar ALL_WHENS = [whens.EAGER, whens.LAZY];\nvar EAGER_WHENS = [whens.EAGER];\n// tslint:disable-next-line:no-inferrable-types\nexport var NATIVE_INJECTOR_TOKEN = 'Native Injector';\n/**\n * Encapsulates Dependency Injection for a path of nodes\n *\n * UI-Router states are organized as a tree.\n * A nested state has a path of ancestors to the root of the tree.\n * When a state is being activated, each element in the path is wrapped as a [[PathNode]].\n * A `PathNode` is a stateful object that holds things like parameters and resolvables for the state being activated.\n *\n * The ResolveContext closes over the [[PathNode]]s, and provides DI for the last node in the path.\n */\nvar ResolveContext = /** @class */ (function () {\n    function ResolveContext(_path) {\n        this._path = _path;\n    }\n    /** Gets all the tokens found in the resolve context, de-duplicated */\n    ResolveContext.prototype.getTokens = function () {\n        return this._path.reduce(function (acc, node) { return acc.concat(node.resolvables.map(function (r) { return r.token; })); }, []).reduce(uniqR, []);\n    };\n    /**\n     * Gets the Resolvable that matches the token\n     *\n     * Gets the last Resolvable that matches the token in this context, or undefined.\n     * Throws an error if it doesn't exist in the ResolveContext\n     */\n    ResolveContext.prototype.getResolvable = function (token) {\n        var matching = this._path\n            .map(function (node) { return node.resolvables; })\n            .reduce(unnestR, [])\n            .filter(function (r) { return r.token === token; });\n        return tail(matching);\n    };\n    /** Returns the [[ResolvePolicy]] for the given [[Resolvable]] */\n    ResolveContext.prototype.getPolicy = function (resolvable) {\n        var node = this.findNode(resolvable);\n        return resolvable.getPolicy(node.state);\n    };\n    /**\n     * Returns a ResolveContext that includes a portion of this one\n     *\n     * Given a state, this method creates a new ResolveContext from this one.\n     * The new context starts at the first node (root) and stops at the node for the `state` parameter.\n     *\n     * #### Why\n     *\n     * When a transition is created, the nodes in the \"To Path\" are injected from a ResolveContext.\n     * A ResolveContext closes over a path of [[PathNode]]s and processes the resolvables.\n     * The \"To State\" can inject values from its own resolvables, as well as those from all its ancestor state's (node's).\n     * This method is used to create a narrower context when injecting ancestor nodes.\n     *\n     * @example\n     * `let ABCD = new ResolveContext([A, B, C, D]);`\n     *\n     * Given a path `[A, B, C, D]`, where `A`, `B`, `C` and `D` are nodes for states `a`, `b`, `c`, `d`:\n     * When injecting `D`, `D` should have access to all resolvables from `A`, `B`, `C`, `D`.\n     * However, `B` should only be able to access resolvables from `A`, `B`.\n     *\n     * When resolving for the `B` node, first take the full \"To Path\" Context `[A,B,C,D]` and limit to the subpath `[A,B]`.\n     * `let AB = ABCD.subcontext(a)`\n     */\n    ResolveContext.prototype.subContext = function (state) {\n        return new ResolveContext(PathUtils.subPath(this._path, function (node) { return node.state === state; }));\n    };\n    /**\n     * Adds Resolvables to the node that matches the state\n     *\n     * This adds a [[Resolvable]] (generally one created on the fly; not declared on a [[StateDeclaration.resolve]] block).\n     * The resolvable is added to the node matching the `state` parameter.\n     *\n     * These new resolvables are not automatically fetched.\n     * The calling code should either fetch them, fetch something that depends on them,\n     * or rely on [[resolvePath]] being called when some state is being entered.\n     *\n     * Note: each resolvable's [[ResolvePolicy]] is merged with the state's policy, and the global default.\n     *\n     * @param newResolvables the new Resolvables\n     * @param state Used to find the node to put the resolvable on\n     */\n    ResolveContext.prototype.addResolvables = function (newResolvables, state) {\n        var node = find(this._path, propEq('state', state));\n        var keys = newResolvables.map(function (r) { return r.token; });\n        node.resolvables = node.resolvables.filter(function (r) { return keys.indexOf(r.token) === -1; }).concat(newResolvables);\n    };\n    /**\n     * Returns a promise for an array of resolved path Element promises\n     *\n     * @param when\n     * @param trans\n     * @returns {Promise<any>|any}\n     */\n    ResolveContext.prototype.resolvePath = function (when, trans) {\n        var _this = this;\n        if (when === void 0) { when = 'LAZY'; }\n        // This option determines which 'when' policy Resolvables we are about to fetch.\n        var whenOption = inArray(ALL_WHENS, when) ? when : 'LAZY';\n        // If the caller specified EAGER, only the EAGER Resolvables are fetched.\n        // if the caller specified LAZY, both EAGER and LAZY Resolvables are fetched.`\n        var matchedWhens = whenOption === resolvePolicies.when.EAGER ? EAGER_WHENS : ALL_WHENS;\n        // get the subpath to the state argument, if provided\n        trace.traceResolvePath(this._path, when, trans);\n        var matchesPolicy = function (acceptedVals, whenOrAsync) { return function (resolvable) {\n            return inArray(acceptedVals, _this.getPolicy(resolvable)[whenOrAsync]);\n        }; };\n        // Trigger all the (matching) Resolvables in the path\n        // Reduce all the \"WAIT\" Resolvables into an array\n        var promises = this._path.reduce(function (acc, node) {\n            var nodeResolvables = node.resolvables.filter(matchesPolicy(matchedWhens, 'when'));\n            var nowait = nodeResolvables.filter(matchesPolicy(['NOWAIT'], 'async'));\n            var wait = nodeResolvables.filter(not(matchesPolicy(['NOWAIT'], 'async')));\n            // For the matching Resolvables, start their async fetch process.\n            var subContext = _this.subContext(node.state);\n            var getResult = function (r) {\n                return r\n                    .get(subContext, trans)\n                    // Return a tuple that includes the Resolvable's token\n                    .then(function (value) { return ({ token: r.token, value: value }); });\n            };\n            nowait.forEach(getResult);\n            return acc.concat(wait.map(getResult));\n        }, []);\n        // Wait for all the \"WAIT\" resolvables\n        return services.$q.all(promises);\n    };\n    ResolveContext.prototype.injector = function () {\n        return this._injector || (this._injector = new UIInjectorImpl(this));\n    };\n    ResolveContext.prototype.findNode = function (resolvable) {\n        return find(this._path, function (node) { return inArray(node.resolvables, resolvable); });\n    };\n    /**\n     * Gets the async dependencies of a Resolvable\n     *\n     * Given a Resolvable, returns its dependencies as a Resolvable[]\n     */\n    ResolveContext.prototype.getDependencies = function (resolvable) {\n        var _this = this;\n        var node = this.findNode(resolvable);\n        // Find which other resolvables are \"visible\" to the `resolvable` argument\n        // subpath stopping at resolvable's node, or the whole path (if the resolvable isn't in the path)\n        var subPath = PathUtils.subPath(this._path, function (x) { return x === node; }) || this._path;\n        var availableResolvables = subPath\n            .reduce(function (acc, _node) { return acc.concat(_node.resolvables); }, []) // all of subpath's resolvables\n            .filter(function (res) { return res !== resolvable; }); // filter out the `resolvable` argument\n        var getDependency = function (token) {\n            var matching = availableResolvables.filter(function (r) { return r.token === token; });\n            if (matching.length)\n                return tail(matching);\n            var fromInjector = _this.injector().getNative(token);\n            if (isUndefined(fromInjector)) {\n                throw new Error('Could not find Dependency Injection token: ' + stringify(token));\n            }\n            return new Resolvable(token, function () { return fromInjector; }, [], fromInjector);\n        };\n        return resolvable.deps.map(getDependency);\n    };\n    return ResolveContext;\n}());\nexport { ResolveContext };\n/** @internalapi */\nvar UIInjectorImpl = /** @class */ (function () {\n    function UIInjectorImpl(context) {\n        this.context = context;\n        this.native = this.get(NATIVE_INJECTOR_TOKEN) || services.$injector;\n    }\n    UIInjectorImpl.prototype.get = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable) {\n            if (this.context.getPolicy(resolvable).async === 'NOWAIT') {\n                return resolvable.get(this.context);\n            }\n            if (!resolvable.resolved) {\n                throw new Error('Resolvable async .get() not complete:' + stringify(resolvable.token));\n            }\n            return resolvable.data;\n        }\n        return this.getNative(token);\n    };\n    UIInjectorImpl.prototype.getAsync = function (token) {\n        var resolvable = this.context.getResolvable(token);\n        if (resolvable)\n            return resolvable.get(this.context);\n        return services.$q.when(this.native.get(token));\n    };\n    UIInjectorImpl.prototype.getNative = function (token) {\n        return this.native && this.native.get(token);\n    };\n    return UIInjectorImpl;\n}());\n//# sourceMappingURL=resolveContext.js.map","/** @publicapi @module state */ /** */\nimport { applyPairs, extend, identity, inherit, mapObj, noop, omit, tail, values } from '../common/common';\nimport { isArray, isDefined, isFunction, isString } from '../common/predicates';\nimport { stringify } from '../common/strings';\nimport { is, pattern, pipe, prop, val } from '../common/hof';\nimport { Resolvable } from '../resolve/resolvable';\nimport { services } from '../common/coreservices';\nvar parseUrl = function (url) {\n    if (!isString(url))\n        return false;\n    var root = url.charAt(0) === '^';\n    return { val: root ? url.substring(1) : url, root: root };\n};\nfunction nameBuilder(state) {\n    return state.name;\n}\nfunction selfBuilder(state) {\n    state.self.$$state = function () { return state; };\n    return state.self;\n}\nfunction dataBuilder(state) {\n    if (state.parent && state.parent.data) {\n        state.data = state.self.data = inherit(state.parent.data, state.data);\n    }\n    return state.data;\n}\nvar getUrlBuilder = function ($urlMatcherFactoryProvider, root) {\n    return function urlBuilder(stateObject) {\n        var state = stateObject.self;\n        // For future states, i.e., states whose name ends with `.**`,\n        // match anything that starts with the url prefix\n        if (state && state.url && state.name && state.name.match(/\\.\\*\\*$/)) {\n            state.url += '{remainder:any}'; // match any path (.*)\n        }\n        var parent = stateObject.parent;\n        var parsed = parseUrl(state.url);\n        var url = !parsed ? state.url : $urlMatcherFactoryProvider.compile(parsed.val, { state: state });\n        if (!url)\n            return null;\n        if (!$urlMatcherFactoryProvider.isMatcher(url))\n            throw new Error(\"Invalid url '\" + url + \"' in state '\" + stateObject + \"'\");\n        return parsed && parsed.root ? url : ((parent && parent.navigable) || root()).url.append(url);\n    };\n};\nvar getNavigableBuilder = function (isRoot) {\n    return function navigableBuilder(state) {\n        return !isRoot(state) && state.url ? state : state.parent ? state.parent.navigable : null;\n    };\n};\nvar getParamsBuilder = function (paramFactory) {\n    return function paramsBuilder(state) {\n        var makeConfigParam = function (config, id) { return paramFactory.fromConfig(id, null, state.self); };\n        var urlParams = (state.url && state.url.parameters({ inherit: false })) || [];\n        var nonUrlParams = values(mapObj(omit(state.params || {}, urlParams.map(prop('id'))), makeConfigParam));\n        return urlParams\n            .concat(nonUrlParams)\n            .map(function (p) { return [p.id, p]; })\n            .reduce(applyPairs, {});\n    };\n};\nfunction pathBuilder(state) {\n    return state.parent ? state.parent.path.concat(state) : /*root*/ [state];\n}\nfunction includesBuilder(state) {\n    var includes = state.parent ? extend({}, state.parent.includes) : {};\n    includes[state.name] = true;\n    return includes;\n}\n/**\n * This is a [[StateBuilder.builder]] function for the `resolve:` block on a [[StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * validates the `resolve` property and converts it to a [[Resolvable]] array.\n *\n * resolve: input value can be:\n *\n * {\n *   // analyzed but not injected\n *   myFooResolve: function() { return \"myFooData\"; },\n *\n *   // function.toString() parsed, \"DependencyName\" dep as string (not min-safe)\n *   myBarResolve: function(DependencyName) { return DependencyName.fetchSomethingAsPromise() },\n *\n *   // Array split; \"DependencyName\" dep as string\n *   myBazResolve: [ \"DependencyName\", function(dep) { return dep.fetchSomethingAsPromise() },\n *\n *   // Array split; DependencyType dep as token (compared using ===)\n *   myQuxResolve: [ DependencyType, function(dep) { return dep.fetchSometingAsPromise() },\n *\n *   // val.$inject used as deps\n *   // where:\n *   //     corgeResolve.$inject = [\"DependencyName\"];\n *   //     function corgeResolve(dep) { dep.fetchSometingAsPromise() }\n *   // then \"DependencyName\" dep as string\n *   myCorgeResolve: corgeResolve,\n *\n *  // inject service by name\n *  // When a string is found, desugar creating a resolve that injects the named service\n *   myGraultResolve: \"SomeService\"\n * }\n *\n * or:\n *\n * [\n *   new Resolvable(\"myFooResolve\", function() { return \"myFooData\" }),\n *   new Resolvable(\"myBarResolve\", function(dep) { return dep.fetchSomethingAsPromise() }, [ \"DependencyName\" ]),\n *   { provide: \"myBazResolve\", useFactory: function(dep) { dep.fetchSomethingAsPromise() }, deps: [ \"DependencyName\" ] }\n * ]\n */\nexport function resolvablesBuilder(state) {\n    /** convert resolve: {} and resolvePolicy: {} objects to an array of tuples */\n    var objects2Tuples = function (resolveObj, resolvePolicies) {\n        return Object.keys(resolveObj || {}).map(function (token) { return ({\n            token: token,\n            val: resolveObj[token],\n            deps: undefined,\n            policy: resolvePolicies[token],\n        }); });\n    };\n    /** fetch DI annotations from a function or ng1-style array */\n    var annotate = function (fn) {\n        var $injector = services.$injector;\n        // ng1 doesn't have an $injector until runtime.\n        // If the $injector doesn't exist, use \"deferred\" literal as a\n        // marker indicating they should be annotated when runtime starts\n        return fn['$inject'] || ($injector && $injector.annotate(fn, $injector.strictDi)) || 'deferred';\n    };\n    /** true if the object has both `token` and `resolveFn`, and is probably a [[ResolveLiteral]] */\n    var isResolveLiteral = function (obj) { return !!(obj.token && obj.resolveFn); };\n    /** true if the object looks like a provide literal, or a ng2 Provider */\n    var isLikeNg2Provider = function (obj) {\n        return !!((obj.provide || obj.token) && (obj.useValue || obj.useFactory || obj.useExisting || obj.useClass));\n    };\n    /** true if the object looks like a tuple from obj2Tuples */\n    var isTupleFromObj = function (obj) {\n        return !!(obj && obj.val && (isString(obj.val) || isArray(obj.val) || isFunction(obj.val)));\n    };\n    /** extracts the token from a Provider or provide literal */\n    var getToken = function (p) { return p.provide || p.token; };\n    // prettier-ignore: Given a literal resolve or provider object, returns a Resolvable\n    var literal2Resolvable = pattern([\n        [prop('resolveFn'), function (p) { return new Resolvable(getToken(p), p.resolveFn, p.deps, p.policy); }],\n        [prop('useFactory'), function (p) { return new Resolvable(getToken(p), p.useFactory, p.deps || p.dependencies, p.policy); }],\n        [prop('useClass'), function (p) { return new Resolvable(getToken(p), function () { return new p.useClass(); }, [], p.policy); }],\n        [prop('useValue'), function (p) { return new Resolvable(getToken(p), function () { return p.useValue; }, [], p.policy, p.useValue); }],\n        [prop('useExisting'), function (p) { return new Resolvable(getToken(p), identity, [p.useExisting], p.policy); }],\n    ]);\n    // prettier-ignore\n    var tuple2Resolvable = pattern([\n        [pipe(prop('val'), isString), function (tuple) { return new Resolvable(tuple.token, identity, [tuple.val], tuple.policy); }],\n        [pipe(prop('val'), isArray), function (tuple) { return new Resolvable(tuple.token, tail(tuple.val), tuple.val.slice(0, -1), tuple.policy); }],\n        [pipe(prop('val'), isFunction), function (tuple) { return new Resolvable(tuple.token, tuple.val, annotate(tuple.val), tuple.policy); }],\n    ]);\n    // prettier-ignore\n    var item2Resolvable = pattern([\n        [is(Resolvable), function (r) { return r; }],\n        [isResolveLiteral, literal2Resolvable],\n        [isLikeNg2Provider, literal2Resolvable],\n        [isTupleFromObj, tuple2Resolvable],\n        [val(true), function (obj) { throw new Error('Invalid resolve value: ' + stringify(obj)); },],\n    ]);\n    // If resolveBlock is already an array, use it as-is.\n    // Otherwise, assume it's an object and convert to an Array of tuples\n    var decl = state.resolve;\n    var items = isArray(decl) ? decl : objects2Tuples(decl, state.resolvePolicy || {});\n    return items.map(item2Resolvable);\n}\n/**\n * @internalapi A internal global service\n *\n * StateBuilder is a factory for the internal [[StateObject]] objects.\n *\n * When you register a state with the [[StateRegistry]], you register a plain old javascript object which\n * conforms to the [[StateDeclaration]] interface.  This factory takes that object and builds the corresponding\n * [[StateObject]] object, which has an API and is used internally.\n *\n * Custom properties or API may be added to the internal [[StateObject]] object by registering a decorator function\n * using the [[builder]] method.\n */\nvar StateBuilder = /** @class */ (function () {\n    function StateBuilder(matcher, urlMatcherFactory) {\n        this.matcher = matcher;\n        var self = this;\n        var root = function () { return matcher.find(''); };\n        var isRoot = function (state) { return state.name === ''; };\n        function parentBuilder(state) {\n            if (isRoot(state))\n                return null;\n            return matcher.find(self.parentName(state)) || root();\n        }\n        this.builders = {\n            name: [nameBuilder],\n            self: [selfBuilder],\n            parent: [parentBuilder],\n            data: [dataBuilder],\n            // Build a URLMatcher if necessary, either via a relative or absolute URL\n            url: [getUrlBuilder(urlMatcherFactory, root)],\n            // Keep track of the closest ancestor state that has a URL (i.e. is navigable)\n            navigable: [getNavigableBuilder(isRoot)],\n            params: [getParamsBuilder(urlMatcherFactory.paramFactory)],\n            // Each framework-specific ui-router implementation should define its own `views` builder\n            // e.g., src/ng1/statebuilders/views.ts\n            views: [],\n            // Keep a full path from the root down to this state as this is needed for state activation.\n            path: [pathBuilder],\n            // Speed up $state.includes() as it's used a lot\n            includes: [includesBuilder],\n            resolvables: [resolvablesBuilder],\n        };\n    }\n    /**\n     * Registers a [[BuilderFunction]] for a specific [[StateObject]] property (e.g., `parent`, `url`, or `path`).\n     * More than one BuilderFunction can be registered for a given property.\n     *\n     * The BuilderFunction(s) will be used to define the property on any subsequently built [[StateObject]] objects.\n     *\n     * @param name The name of the State property being registered for.\n     * @param fn The BuilderFunction which will be used to build the State property\n     * @returns a function which deregisters the BuilderFunction\n     */\n    StateBuilder.prototype.builder = function (name, fn) {\n        var builders = this.builders;\n        var array = builders[name] || [];\n        // Backwards compat: if only one builder exists, return it, else return whole arary.\n        if (isString(name) && !isDefined(fn))\n            return array.length > 1 ? array : array[0];\n        if (!isString(name) || !isFunction(fn))\n            return;\n        builders[name] = array;\n        builders[name].push(fn);\n        return function () { return builders[name].splice(builders[name].indexOf(fn, 1)) && null; };\n    };\n    /**\n     * Builds all of the properties on an essentially blank State object, returning a State object which has all its\n     * properties and API built.\n     *\n     * @param state an uninitialized State object\n     * @returns the built State object\n     */\n    StateBuilder.prototype.build = function (state) {\n        var _a = this, matcher = _a.matcher, builders = _a.builders;\n        var parent = this.parentName(state);\n        if (parent && !matcher.find(parent, undefined, false)) {\n            return null;\n        }\n        for (var key in builders) {\n            if (!builders.hasOwnProperty(key))\n                continue;\n            var chain = builders[key].reduce(function (parentFn, step) { return function (_state) { return step(_state, parentFn); }; }, noop);\n            state[key] = chain(state);\n        }\n        return state;\n    };\n    StateBuilder.prototype.parentName = function (state) {\n        // name = 'foo.bar.baz.**'\n        var name = state.name || '';\n        // segments = ['foo', 'bar', 'baz', '.**']\n        var segments = name.split('.');\n        // segments = ['foo', 'bar', 'baz']\n        var lastSegment = segments.pop();\n        // segments = ['foo', 'bar'] (ignore .** segment for future states)\n        if (lastSegment === '**')\n            segments.pop();\n        if (segments.length) {\n            if (state.parent) {\n                throw new Error(\"States that specify the 'parent:' property should not have a '.' in their name (\" + name + \")\");\n            }\n            // 'foo.bar'\n            return segments.join('.');\n        }\n        if (!state.parent)\n            return '';\n        return isString(state.parent) ? state.parent : state.parent.name;\n    };\n    StateBuilder.prototype.name = function (state) {\n        var name = state.name;\n        if (name.indexOf('.') !== -1 || !state.parent)\n            return name;\n        var parentName = isString(state.parent) ? state.parent : state.parent.name;\n        return parentName ? parentName + '.' + name : name;\n    };\n    return StateBuilder;\n}());\nexport { StateBuilder };\n//# sourceMappingURL=stateBuilder.js.map","var TransitionHookPhase;\n(function (TransitionHookPhase) {\n    TransitionHookPhase[TransitionHookPhase[\"CREATE\"] = 0] = \"CREATE\";\n    TransitionHookPhase[TransitionHookPhase[\"BEFORE\"] = 1] = \"BEFORE\";\n    TransitionHookPhase[TransitionHookPhase[\"RUN\"] = 2] = \"RUN\";\n    TransitionHookPhase[TransitionHookPhase[\"SUCCESS\"] = 3] = \"SUCCESS\";\n    TransitionHookPhase[TransitionHookPhase[\"ERROR\"] = 4] = \"ERROR\";\n})(TransitionHookPhase || (TransitionHookPhase = {}));\nvar TransitionHookScope;\n(function (TransitionHookScope) {\n    TransitionHookScope[TransitionHookScope[\"TRANSITION\"] = 0] = \"TRANSITION\";\n    TransitionHookScope[TransitionHookScope[\"STATE\"] = 1] = \"STATE\";\n})(TransitionHookScope || (TransitionHookScope = {}));\nexport { TransitionHookPhase, TransitionHookScope };\n//# sourceMappingURL=interface.js.map","import { defaults, values, find, inherit } from '../common/common';\nimport { propEq } from '../common/hof';\nimport { Glob } from '../common/glob';\nimport { isObject, isFunction } from '../common/predicates';\n/**\n * Internal representation of a UI-Router state.\n *\n * Instances of this class are created when a [[StateDeclaration]] is registered with the [[StateRegistry]].\n *\n * A registered [[StateDeclaration]] is augmented with a getter ([[StateDeclaration.$$state]]) which returns the corresponding [[StateObject]] object.\n *\n * This class prototypally inherits from the corresponding [[StateDeclaration]].\n * Each of its own properties (i.e., `hasOwnProperty`) are built using builders from the [[StateBuilder]].\n */\nvar StateObject = /** @class */ (function () {\n    /** @deprecated use State.create() */\n    function StateObject(config) {\n        return StateObject.create(config || {});\n    }\n    /**\n     * Create a state object to put the private/internal implementation details onto.\n     * The object's prototype chain looks like:\n     * (Internal State Object) -> (Copy of State.prototype) -> (State Declaration object) -> (State Declaration's prototype...)\n     *\n     * @param stateDecl the user-supplied State Declaration\n     * @returns {StateObject} an internal State object\n     */\n    StateObject.create = function (stateDecl) {\n        stateDecl = StateObject.isStateClass(stateDecl) ? new stateDecl() : stateDecl;\n        var state = inherit(inherit(stateDecl, StateObject.prototype));\n        stateDecl.$$state = function () { return state; };\n        state.self = stateDecl;\n        state.__stateObjectCache = {\n            nameGlob: Glob.fromString(state.name),\n        };\n        return state;\n    };\n    /**\n     * Returns true if the provided parameter is the same state.\n     *\n     * Compares the identity of the state against the passed value, which is either an object\n     * reference to the actual `State` instance, the original definition object passed to\n     * `$stateProvider.state()`, or the fully-qualified name.\n     *\n     * @param ref Can be one of (a) a `State` instance, (b) an object that was passed\n     *        into `$stateProvider.state()`, (c) the fully-qualified name of a state as a string.\n     * @returns Returns `true` if `ref` matches the current `State` instance.\n     */\n    StateObject.prototype.is = function (ref) {\n        return this === ref || this.self === ref || this.fqn() === ref;\n    };\n    /**\n     * @deprecated this does not properly handle dot notation\n     * @returns Returns a dot-separated name of the state.\n     */\n    StateObject.prototype.fqn = function () {\n        if (!this.parent || !(this.parent instanceof this.constructor))\n            return this.name;\n        var name = this.parent.fqn();\n        return name ? name + '.' + this.name : this.name;\n    };\n    /**\n     * Returns the root node of this state's tree.\n     *\n     * @returns The root of this state's tree.\n     */\n    StateObject.prototype.root = function () {\n        return (this.parent && this.parent.root()) || this;\n    };\n    /**\n     * Gets the state's `Param` objects\n     *\n     * Gets the list of [[Param]] objects owned by the state.\n     * If `opts.inherit` is true, it also includes the ancestor states' [[Param]] objects.\n     * If `opts.matchingKeys` exists, returns only `Param`s whose `id` is a key on the `matchingKeys` object\n     *\n     * @param opts options\n     */\n    StateObject.prototype.parameters = function (opts) {\n        opts = defaults(opts, { inherit: true, matchingKeys: null });\n        var inherited = (opts.inherit && this.parent && this.parent.parameters()) || [];\n        return inherited\n            .concat(values(this.params))\n            .filter(function (param) { return !opts.matchingKeys || opts.matchingKeys.hasOwnProperty(param.id); });\n    };\n    /**\n     * Returns a single [[Param]] that is owned by the state\n     *\n     * If `opts.inherit` is true, it also searches the ancestor states` [[Param]]s.\n     * @param id the name of the [[Param]] to return\n     * @param opts options\n     */\n    StateObject.prototype.parameter = function (id, opts) {\n        if (opts === void 0) { opts = {}; }\n        return ((this.url && this.url.parameter(id, opts)) ||\n            find(values(this.params), propEq('id', id)) ||\n            (opts.inherit && this.parent && this.parent.parameter(id)));\n    };\n    StateObject.prototype.toString = function () {\n        return this.fqn();\n    };\n    /** Predicate which returns true if the object is an class with @State() decorator */\n    StateObject.isStateClass = function (stateDecl) {\n        return isFunction(stateDecl) && stateDecl['__uiRouterState'] === true;\n    };\n    /** Predicate which returns true if the object is an internal [[StateObject]] object */\n    StateObject.isState = function (obj) { return isObject(obj['__stateObjectCache']); };\n    return StateObject;\n}());\nexport { StateObject };\n//# sourceMappingURL=stateObject.js.map","/** @publicapi @module state */ /** */\nimport { isString } from '../common/predicates';\nimport { values } from '../common/common';\nvar StateMatcher = /** @class */ (function () {\n    function StateMatcher(_states) {\n        this._states = _states;\n    }\n    StateMatcher.prototype.isRelative = function (stateName) {\n        stateName = stateName || '';\n        return stateName.indexOf('.') === 0 || stateName.indexOf('^') === 0;\n    };\n    StateMatcher.prototype.find = function (stateOrName, base, matchGlob) {\n        if (matchGlob === void 0) { matchGlob = true; }\n        if (!stateOrName && stateOrName !== '')\n            return undefined;\n        var isStr = isString(stateOrName);\n        var name = isStr ? stateOrName : stateOrName.name;\n        if (this.isRelative(name))\n            name = this.resolvePath(name, base);\n        var state = this._states[name];\n        if (state && (isStr || (!isStr && (state === stateOrName || state.self === stateOrName)))) {\n            return state;\n        }\n        else if (isStr && matchGlob) {\n            var _states = values(this._states);\n            var matches = _states.filter(function (_state) { return _state.__stateObjectCache.nameGlob && _state.__stateObjectCache.nameGlob.matches(name); });\n            if (matches.length > 1) {\n                // tslint:disable-next-line:no-console\n                console.log(\"stateMatcher.find: Found multiple matches for \" + name + \" using glob: \", matches.map(function (match) { return match.name; }));\n            }\n            return matches[0];\n        }\n        return undefined;\n    };\n    StateMatcher.prototype.resolvePath = function (name, base) {\n        if (!base)\n            throw new Error(\"No reference point given for path '\" + name + \"'\");\n        var baseState = this.find(base);\n        var splitName = name.split('.');\n        var pathLength = splitName.length;\n        var i = 0, current = baseState;\n        for (; i < pathLength; i++) {\n            if (splitName[i] === '' && i === 0) {\n                current = baseState;\n                continue;\n            }\n            if (splitName[i] === '^') {\n                if (!current.parent)\n                    throw new Error(\"Path '\" + name + \"' not valid for state '\" + baseState.name + \"'\");\n                current = current.parent;\n                continue;\n            }\n            break;\n        }\n        var relName = splitName.slice(i).join('.');\n        return current.name + (current.name && relName ? '.' : '') + relName;\n    };\n    return StateMatcher;\n}());\nexport { StateMatcher };\n//# sourceMappingURL=stateMatcher.js.map","/** @publicapi @module state */ /** */\nimport { inArray, isString, prop } from '../common';\nimport { StateObject } from './stateObject';\n/** @internalapi */\nvar StateQueueManager = /** @class */ (function () {\n    function StateQueueManager(router, states, builder, listeners) {\n        this.router = router;\n        this.states = states;\n        this.builder = builder;\n        this.listeners = listeners;\n        this.queue = [];\n    }\n    /** @internalapi */\n    StateQueueManager.prototype.dispose = function () {\n        this.queue = [];\n    };\n    StateQueueManager.prototype.register = function (stateDecl) {\n        var queue = this.queue;\n        var state = StateObject.create(stateDecl);\n        var name = state.name;\n        if (!isString(name))\n            throw new Error('State must have a valid name');\n        if (this.states.hasOwnProperty(name) || inArray(queue.map(prop('name')), name))\n            throw new Error(\"State '\" + name + \"' is already defined\");\n        queue.push(state);\n        this.flush();\n        return state;\n    };\n    StateQueueManager.prototype.flush = function () {\n        var _this = this;\n        var _a = this, queue = _a.queue, states = _a.states, builder = _a.builder;\n        var registered = [], // states that got registered\n        orphans = [], // states that don't yet have a parent registered\n        previousQueueLength = {}; // keep track of how long the queue when an orphan was first encountered\n        var getState = function (name) { return _this.states.hasOwnProperty(name) && _this.states[name]; };\n        var notifyListeners = function () {\n            if (registered.length) {\n                _this.listeners.forEach(function (listener) { return listener('registered', registered.map(function (s) { return s.self; })); });\n            }\n        };\n        while (queue.length > 0) {\n            var state = queue.shift();\n            var name_1 = state.name;\n            var result = builder.build(state);\n            var orphanIdx = orphans.indexOf(state);\n            if (result) {\n                var existingState = getState(name_1);\n                if (existingState && existingState.name === name_1) {\n                    throw new Error(\"State '\" + name_1 + \"' is already defined\");\n                }\n                var existingFutureState = getState(name_1 + '.**');\n                if (existingFutureState) {\n                    // Remove future state of the same name\n                    this.router.stateRegistry.deregister(existingFutureState);\n                }\n                states[name_1] = state;\n                this.attachRoute(state);\n                if (orphanIdx >= 0)\n                    orphans.splice(orphanIdx, 1);\n                registered.push(state);\n                continue;\n            }\n            var prev = previousQueueLength[name_1];\n            previousQueueLength[name_1] = queue.length;\n            if (orphanIdx >= 0 && prev === queue.length) {\n                // Wait until two consecutive iterations where no additional states were dequeued successfully.\n                // throw new Error(`Cannot register orphaned state '${name}'`);\n                queue.push(state);\n                notifyListeners();\n                return states;\n            }\n            else if (orphanIdx < 0) {\n                orphans.push(state);\n            }\n            queue.push(state);\n        }\n        notifyListeners();\n        return states;\n    };\n    StateQueueManager.prototype.attachRoute = function (state) {\n        if (state.abstract || !state.url)\n            return;\n        var rulesApi = this.router.urlService.rules;\n        rulesApi.rule(rulesApi.urlRuleFactory.create(state));\n    };\n    return StateQueueManager;\n}());\nexport { StateQueueManager };\n//# sourceMappingURL=stateQueueManager.js.map","/** @publicapi @module state */ /** */\nimport { StateMatcher } from './stateMatcher';\nimport { StateBuilder } from './stateBuilder';\nimport { StateQueueManager } from './stateQueueManager';\nimport { removeFrom } from '../common/common';\nimport { propEq } from '../common/hof';\nvar StateRegistry = /** @class */ (function () {\n    /** @internalapi */\n    function StateRegistry(router) {\n        this.router = router;\n        this.states = {};\n        this.listeners = [];\n        this.matcher = new StateMatcher(this.states);\n        this.builder = new StateBuilder(this.matcher, router.urlMatcherFactory);\n        this.stateQueue = new StateQueueManager(router, this.states, this.builder, this.listeners);\n        this._registerRoot();\n    }\n    /** @internalapi */\n    StateRegistry.prototype._registerRoot = function () {\n        var rootStateDef = {\n            name: '',\n            url: '^',\n            views: null,\n            params: {\n                '#': { value: null, type: 'hash', dynamic: true },\n            },\n            abstract: true,\n        };\n        var _root = (this._root = this.stateQueue.register(rootStateDef));\n        _root.navigable = null;\n    };\n    /** @internalapi */\n    StateRegistry.prototype.dispose = function () {\n        var _this = this;\n        this.stateQueue.dispose();\n        this.listeners = [];\n        this.get().forEach(function (state) { return _this.get(state) && _this.deregister(state); });\n    };\n    /**\n     * Listen for a State Registry events\n     *\n     * Adds a callback that is invoked when states are registered or deregistered with the StateRegistry.\n     *\n     * #### Example:\n     * ```js\n     * let allStates = registry.get();\n     *\n     * // Later, invoke deregisterFn() to remove the listener\n     * let deregisterFn = registry.onStatesChanged((event, states) => {\n     *   switch(event) {\n     *     case: 'registered':\n     *       states.forEach(state => allStates.push(state));\n     *       break;\n     *     case: 'deregistered':\n     *       states.forEach(state => {\n     *         let idx = allStates.indexOf(state);\n     *         if (idx !== -1) allStates.splice(idx, 1);\n     *       });\n     *       break;\n     *   }\n     * });\n     * ```\n     *\n     * @param listener a callback function invoked when the registered states changes.\n     *        The function receives two parameters, `event` and `state`.\n     *        See [[StateRegistryListener]]\n     * @return a function that deregisters the listener\n     */\n    StateRegistry.prototype.onStatesChanged = function (listener) {\n        this.listeners.push(listener);\n        return function deregisterListener() {\n            removeFrom(this.listeners)(listener);\n        }.bind(this);\n    };\n    /**\n     * Gets the implicit root state\n     *\n     * Gets the root of the state tree.\n     * The root state is implicitly created by UI-Router.\n     * Note: this returns the internal [[StateObject]] representation, not a [[StateDeclaration]]\n     *\n     * @return the root [[StateObject]]\n     */\n    StateRegistry.prototype.root = function () {\n        return this._root;\n    };\n    /**\n     * Adds a state to the registry\n     *\n     * Registers a [[StateDeclaration]] or queues it for registration.\n     *\n     * Note: a state will be queued if the state's parent isn't yet registered.\n     *\n     * @param stateDefinition the definition of the state to register.\n     * @returns the internal [[StateObject]] object.\n     *          If the state was successfully registered, then the object is fully built (See: [[StateBuilder]]).\n     *          If the state was only queued, then the object is not fully built.\n     */\n    StateRegistry.prototype.register = function (stateDefinition) {\n        return this.stateQueue.register(stateDefinition);\n    };\n    /** @hidden */\n    StateRegistry.prototype._deregisterTree = function (state) {\n        var _this = this;\n        var all = this.get().map(function (s) { return s.$$state(); });\n        var getChildren = function (states) {\n            var _children = all.filter(function (s) { return states.indexOf(s.parent) !== -1; });\n            return _children.length === 0 ? _children : _children.concat(getChildren(_children));\n        };\n        var children = getChildren([state]);\n        var deregistered = [state].concat(children).reverse();\n        deregistered.forEach(function (_state) {\n            var rulesApi = _this.router.urlService.rules;\n            // Remove URL rule\n            rulesApi\n                .rules()\n                .filter(propEq('state', _state))\n                .forEach(function (rule) { return rulesApi.removeRule(rule); });\n            // Remove state from registry\n            delete _this.states[_state.name];\n        });\n        return deregistered;\n    };\n    /**\n     * Removes a state from the registry\n     *\n     * This removes a state from the registry.\n     * If the state has children, they are are also removed from the registry.\n     *\n     * @param stateOrName the state's name or object representation\n     * @returns {StateObject[]} a list of removed states\n     */\n    StateRegistry.prototype.deregister = function (stateOrName) {\n        var _state = this.get(stateOrName);\n        if (!_state)\n            throw new Error(\"Can't deregister state; not found: \" + stateOrName);\n        var deregisteredStates = this._deregisterTree(_state.$$state());\n        this.listeners.forEach(function (listener) { return listener('deregistered', deregisteredStates.map(function (s) { return s.self; })); });\n        return deregisteredStates;\n    };\n    StateRegistry.prototype.get = function (stateOrName, base) {\n        var _this = this;\n        if (arguments.length === 0)\n            return Object.keys(this.states).map(function (name) { return _this.states[name].self; });\n        var found = this.matcher.find(stateOrName, base);\n        return (found && found.self) || null;\n    };\n    StateRegistry.prototype.decorator = function (name, func) {\n        return this.builder.builder(name, func);\n    };\n    return StateRegistry;\n}());\nexport { StateRegistry };\n//# sourceMappingURL=stateRegistry.js.map","/** @publicapi @module transition */ /** */\nimport { TransitionHookPhase } from './interface';\nimport { defaults, noop, silentRejection } from '../common/common';\nimport { fnToString, maxLength } from '../common/strings';\nimport { isPromise } from '../common/predicates';\nimport { is, parse } from '../common/hof';\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { Rejection } from './rejectFactory';\nimport { TargetState } from '../state/targetState';\nvar defaultOptions = {\n    current: noop,\n    transition: null,\n    traceData: {},\n    bind: null,\n};\n/** @hidden */\nvar TransitionHook = /** @class */ (function () {\n    function TransitionHook(transition, stateContext, registeredHook, options) {\n        var _this = this;\n        this.transition = transition;\n        this.stateContext = stateContext;\n        this.registeredHook = registeredHook;\n        this.options = options;\n        this.isSuperseded = function () { return _this.type.hookPhase === TransitionHookPhase.RUN && !_this.options.transition.isActive(); };\n        this.options = defaults(options, defaultOptions);\n        this.type = registeredHook.eventType;\n    }\n    /**\n     * Chains together an array of TransitionHooks.\n     *\n     * Given a list of [[TransitionHook]] objects, chains them together.\n     * Each hook is invoked after the previous one completes.\n     *\n     * #### Example:\n     * ```js\n     * var hooks: TransitionHook[] = getHooks();\n     * let promise: Promise<any> = TransitionHook.chain(hooks);\n     *\n     * promise.then(handleSuccess, handleError);\n     * ```\n     *\n     * @param hooks the list of hooks to chain together\n     * @param waitFor if provided, the chain is `.then()`'ed off this promise\n     * @returns a `Promise` for sequentially invoking the hooks (in order)\n     */\n    TransitionHook.chain = function (hooks, waitFor) {\n        // Chain the next hook off the previous\n        var createHookChainR = function (prev, nextHook) { return prev.then(function () { return nextHook.invokeHook(); }); };\n        return hooks.reduce(createHookChainR, waitFor || services.$q.when());\n    };\n    /**\n     * Invokes all the provided TransitionHooks, in order.\n     * Each hook's return value is checked.\n     * If any hook returns a promise, then the rest of the hooks are chained off that promise, and the promise is returned.\n     * If no hook returns a promise, then all hooks are processed synchronously.\n     *\n     * @param hooks the list of TransitionHooks to invoke\n     * @param doneCallback a callback that is invoked after all the hooks have successfully completed\n     *\n     * @returns a promise for the async result, or the result of the callback\n     */\n    TransitionHook.invokeHooks = function (hooks, doneCallback) {\n        for (var idx = 0; idx < hooks.length; idx++) {\n            var hookResult = hooks[idx].invokeHook();\n            if (isPromise(hookResult)) {\n                var remainingHooks = hooks.slice(idx + 1);\n                return TransitionHook.chain(remainingHooks, hookResult).then(doneCallback);\n            }\n        }\n        return doneCallback();\n    };\n    /**\n     * Run all TransitionHooks, ignoring their return value.\n     */\n    TransitionHook.runAllHooks = function (hooks) {\n        hooks.forEach(function (hook) { return hook.invokeHook(); });\n    };\n    TransitionHook.prototype.logError = function (err) {\n        this.transition.router.stateService.defaultErrorHandler()(err);\n    };\n    TransitionHook.prototype.invokeHook = function () {\n        var _this = this;\n        var hook = this.registeredHook;\n        if (hook._deregistered)\n            return;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        var options = this.options;\n        trace.traceHookInvocation(this, this.transition, options);\n        var invokeCallback = function () { return hook.callback.call(options.bind, _this.transition, _this.stateContext); };\n        var normalizeErr = function (err) { return Rejection.normalize(err).toPromise(); };\n        var handleError = function (err) { return hook.eventType.getErrorHandler(_this)(err); };\n        var handleResult = function (result) { return hook.eventType.getResultHandler(_this)(result); };\n        try {\n            var result = invokeCallback();\n            if (!this.type.synchronous && isPromise(result)) {\n                return result.catch(normalizeErr).then(handleResult, handleError);\n            }\n            else {\n                return handleResult(result);\n            }\n        }\n        catch (err) {\n            // If callback throws (synchronously)\n            return handleError(Rejection.normalize(err));\n        }\n        finally {\n            if (hook.invokeLimit && ++hook.invokeCount >= hook.invokeLimit) {\n                hook.deregister();\n            }\n        }\n    };\n    /**\n     * This method handles the return value of a Transition Hook.\n     *\n     * A hook can return false (cancel), a TargetState (redirect),\n     * or a promise (which may later resolve to false or a redirect)\n     *\n     * This also handles \"transition superseded\" -- when a new transition\n     * was started while the hook was still running\n     */\n    TransitionHook.prototype.handleHookResult = function (result) {\n        var _this = this;\n        var notCurrent = this.getNotCurrentRejection();\n        if (notCurrent)\n            return notCurrent;\n        // Hook returned a promise\n        if (isPromise(result)) {\n            // Wait for the promise, then reprocess with the resulting value\n            return result.then(function (val) { return _this.handleHookResult(val); });\n        }\n        trace.traceHookResult(result, this.transition, this.options);\n        // Hook returned false\n        if (result === false) {\n            // Abort this Transition\n            return Rejection.aborted('Hook aborted transition').toPromise();\n        }\n        var isTargetState = is(TargetState);\n        // hook returned a TargetState\n        if (isTargetState(result)) {\n            // Halt the current Transition and redirect (a new Transition) to the TargetState.\n            return Rejection.redirected(result).toPromise();\n        }\n    };\n    /**\n     * Return a Rejection promise if the transition is no longer current due\n     * to a stopped router (disposed), or a new transition has started and superseded this one.\n     */\n    TransitionHook.prototype.getNotCurrentRejection = function () {\n        var router = this.transition.router;\n        // The router is stopped\n        if (router._disposed) {\n            return Rejection.aborted(\"UIRouter instance #\" + router.$id + \" has been stopped (disposed)\").toPromise();\n        }\n        if (this.transition._aborted) {\n            return Rejection.aborted().toPromise();\n        }\n        // This transition is no longer current.\n        // Another transition started while this hook was still running.\n        if (this.isSuperseded()) {\n            // Abort this transition\n            return Rejection.superseded(this.options.current()).toPromise();\n        }\n    };\n    TransitionHook.prototype.toString = function () {\n        var _a = this, options = _a.options, registeredHook = _a.registeredHook;\n        var event = parse('traceData.hookType')(options) || 'internal', context = parse('traceData.context.state.name')(options) || parse('traceData.context')(options) || 'unknown', name = fnToString(registeredHook.callback);\n        return event + \" context: \" + context + \", \" + maxLength(200, name);\n    };\n    /**\n     * These GetResultHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetResultHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.HANDLE_RESULT = function (hook) { return function (result) {\n        return hook.handleHookResult(result);\n    }; };\n    /**\n     * If the result is a promise rejection, log it.\n     * Otherwise, ignore the result.\n     */\n    TransitionHook.LOG_REJECTED_RESULT = function (hook) { return function (result) {\n        isPromise(result) && result.catch(function (err) { return hook.logError(Rejection.normalize(err)); });\n        return undefined;\n    }; };\n    /**\n     * These GetErrorHandler(s) are used by [[invokeHook]] below\n     * Each HookType chooses a GetErrorHandler (See: [[TransitionService._defineCoreEvents]])\n     */\n    TransitionHook.LOG_ERROR = function (hook) { return function (error) { return hook.logError(error); }; };\n    TransitionHook.REJECT_ERROR = function (hook) { return function (error) { return silentRejection(error); }; };\n    TransitionHook.THROW_ERROR = function (hook) { return function (error) {\n        throw error;\n    }; };\n    return TransitionHook;\n}());\nexport { TransitionHook };\n//# sourceMappingURL=transitionHook.js.map","/** @publicapi @module transition */ /** */\nimport { isString, isFunction, Glob, extend, removeFrom, tail, values, identity, mapObj } from '../common';\nimport { // has or is using\nTransitionHookScope, } from './interface';\n/**\n * Determines if the given state matches the matchCriteria\n *\n * @hidden\n *\n * @param state a State Object to test against\n * @param criterion\n * - If a string, matchState uses the string as a glob-matcher against the state name\n * - If an array (of strings), matchState uses each string in the array as a glob-matchers against the state name\n *   and returns a positive match if any of the globs match.\n * - If a function, matchState calls the function with the state and returns true if the function's result is truthy.\n * @returns {boolean}\n */\nexport function matchState(state, criterion) {\n    var toMatch = isString(criterion) ? [criterion] : criterion;\n    function matchGlobs(_state) {\n        var globStrings = toMatch;\n        for (var i = 0; i < globStrings.length; i++) {\n            var glob = new Glob(globStrings[i]);\n            if ((glob && glob.matches(_state.name)) || (!glob && globStrings[i] === _state.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    var matchFn = (isFunction(toMatch) ? toMatch : matchGlobs);\n    return !!matchFn(state);\n}\n/**\n * @internalapi\n * The registration data for a registered transition hook\n */\nvar RegisteredHook = /** @class */ (function () {\n    function RegisteredHook(tranSvc, eventType, callback, matchCriteria, removeHookFromRegistry, options) {\n        if (options === void 0) { options = {}; }\n        this.tranSvc = tranSvc;\n        this.eventType = eventType;\n        this.callback = callback;\n        this.matchCriteria = matchCriteria;\n        this.removeHookFromRegistry = removeHookFromRegistry;\n        this.invokeCount = 0;\n        this._deregistered = false;\n        this.priority = options.priority || 0;\n        this.bind = options.bind || null;\n        this.invokeLimit = options.invokeLimit;\n    }\n    /**\n     * Gets the matching [[PathNode]]s\n     *\n     * Given an array of [[PathNode]]s, and a [[HookMatchCriterion]], returns an array containing\n     * the [[PathNode]]s that the criteria matches, or `null` if there were no matching nodes.\n     *\n     * Returning `null` is significant to distinguish between the default\n     * \"match-all criterion value\" of `true` compared to a `() => true` function,\n     * when the nodes is an empty array.\n     *\n     * This is useful to allow a transition match criteria of `entering: true`\n     * to still match a transition, even when `entering === []`.  Contrast that\n     * with `entering: (state) => true` which only matches when a state is actually\n     * being entered.\n     */\n    RegisteredHook.prototype._matchingNodes = function (nodes, criterion) {\n        if (criterion === true)\n            return nodes;\n        var matching = nodes.filter(function (node) { return matchState(node.state, criterion); });\n        return matching.length ? matching : null;\n    };\n    /**\n     * Gets the default match criteria (all `true`)\n     *\n     * Returns an object which has all the criteria match paths as keys and `true` as values, i.e.:\n     *\n     * ```js\n     * {\n     *   to: true,\n     *   from: true,\n     *   entering: true,\n     *   exiting: true,\n     *   retained: true,\n     * }\n     */\n    RegisteredHook.prototype._getDefaultMatchCriteria = function () {\n        return mapObj(this.tranSvc._pluginapi._getPathTypes(), function () { return true; });\n    };\n    /**\n     * Gets matching nodes as [[IMatchingNodes]]\n     *\n     * Create a IMatchingNodes object from the TransitionHookTypes that is roughly equivalent to:\n     *\n     * ```js\n     * let matches: IMatchingNodes = {\n     *   to:       _matchingNodes([tail(treeChanges.to)],   mc.to),\n     *   from:     _matchingNodes([tail(treeChanges.from)], mc.from),\n     *   exiting:  _matchingNodes(treeChanges.exiting,      mc.exiting),\n     *   retained: _matchingNodes(treeChanges.retained,     mc.retained),\n     *   entering: _matchingNodes(treeChanges.entering,     mc.entering),\n     * };\n     * ```\n     */\n    RegisteredHook.prototype._getMatchingNodes = function (treeChanges) {\n        var _this = this;\n        var criteria = extend(this._getDefaultMatchCriteria(), this.matchCriteria);\n        var paths = values(this.tranSvc._pluginapi._getPathTypes());\n        return paths.reduce(function (mn, pathtype) {\n            // STATE scope criteria matches against every node in the path.\n            // TRANSITION scope criteria matches against only the last node in the path\n            var isStateHook = pathtype.scope === TransitionHookScope.STATE;\n            var path = treeChanges[pathtype.name] || [];\n            var nodes = isStateHook ? path : [tail(path)];\n            mn[pathtype.name] = _this._matchingNodes(nodes, criteria[pathtype.name]);\n            return mn;\n        }, {});\n    };\n    /**\n     * Determines if this hook's [[matchCriteria]] match the given [[TreeChanges]]\n     *\n     * @returns an IMatchingNodes object, or null. If an IMatchingNodes object is returned, its values\n     * are the matching [[PathNode]]s for each [[HookMatchCriterion]] (to, from, exiting, retained, entering)\n     */\n    RegisteredHook.prototype.matches = function (treeChanges) {\n        var matches = this._getMatchingNodes(treeChanges);\n        // Check if all the criteria matched the TreeChanges object\n        var allMatched = values(matches).every(identity);\n        return allMatched ? matches : null;\n    };\n    RegisteredHook.prototype.deregister = function () {\n        this.removeHookFromRegistry(this);\n        this._deregistered = true;\n    };\n    return RegisteredHook;\n}());\nexport { RegisteredHook };\n/** @hidden Return a registration function of the requested type. */\nexport function makeEvent(registry, transitionService, eventType) {\n    // Create the object which holds the registered transition hooks.\n    var _registeredHooks = (registry._registeredHooks = registry._registeredHooks || {});\n    var hooks = (_registeredHooks[eventType.name] = []);\n    var removeHookFn = removeFrom(hooks);\n    // Create hook registration function on the IHookRegistry for the event\n    registry[eventType.name] = hookRegistrationFn;\n    function hookRegistrationFn(matchObject, callback, options) {\n        if (options === void 0) { options = {}; }\n        var registeredHook = new RegisteredHook(transitionService, eventType, callback, matchObject, removeHookFn, options);\n        hooks.push(registeredHook);\n        return registeredHook.deregister.bind(registeredHook);\n    }\n    return hookRegistrationFn;\n}\n//# sourceMappingURL=hookRegistry.js.map","/** @publicapi @module transition */ /** */\nimport { extend, assertPredicate, unnestR, identity } from '../common/common';\nimport { isArray } from '../common/predicates';\nimport { TransitionHookPhase, TransitionHookScope, } from './interface';\nimport { TransitionHook } from './transitionHook';\n/**\n * This class returns applicable TransitionHooks for a specific Transition instance.\n *\n * Hooks ([[RegisteredHook]]) may be registered globally, e.g., $transitions.onEnter(...), or locally, e.g.\n * myTransition.onEnter(...).  The HookBuilder finds matching RegisteredHooks (where the match criteria is\n * determined by the type of hook)\n *\n * The HookBuilder also converts RegisteredHooks objects to TransitionHook objects, which are used to run a Transition.\n *\n * The HookBuilder constructor is given the $transitions service and a Transition instance.  Thus, a HookBuilder\n * instance may only be used for one specific Transition object. (side note: the _treeChanges accessor is private\n * in the Transition class, so we must also provide the Transition's _treeChanges)\n *\n */\nvar HookBuilder = /** @class */ (function () {\n    function HookBuilder(transition) {\n        this.transition = transition;\n    }\n    HookBuilder.prototype.buildHooksForPhase = function (phase) {\n        var _this = this;\n        var $transitions = this.transition.router.transitionService;\n        return $transitions._pluginapi\n            ._getEvents(phase)\n            .map(function (type) { return _this.buildHooks(type); })\n            .reduce(unnestR, [])\n            .filter(identity);\n    };\n    /**\n     * Returns an array of newly built TransitionHook objects.\n     *\n     * - Finds all RegisteredHooks registered for the given `hookType` which matched the transition's [[TreeChanges]].\n     * - Finds [[PathNode]] (or `PathNode[]`) to use as the TransitionHook context(s)\n     * - For each of the [[PathNode]]s, creates a TransitionHook\n     *\n     * @param hookType the type of the hook registration function, e.g., 'onEnter', 'onFinish'.\n     */\n    HookBuilder.prototype.buildHooks = function (hookType) {\n        var transition = this.transition;\n        var treeChanges = transition.treeChanges();\n        // Find all the matching registered hooks for a given hook type\n        var matchingHooks = this.getMatchingHooks(hookType, treeChanges);\n        if (!matchingHooks)\n            return [];\n        var baseHookOptions = {\n            transition: transition,\n            current: transition.options().current,\n        };\n        var makeTransitionHooks = function (hook) {\n            // Fetch the Nodes that caused this hook to match.\n            var matches = hook.matches(treeChanges);\n            // Select the PathNode[] that will be used as TransitionHook context objects\n            var matchingNodes = matches[hookType.criteriaMatchPath.name];\n            // Return an array of HookTuples\n            return matchingNodes.map(function (node) {\n                var _options = extend({\n                    bind: hook.bind,\n                    traceData: { hookType: hookType.name, context: node },\n                }, baseHookOptions);\n                var state = hookType.criteriaMatchPath.scope === TransitionHookScope.STATE ? node.state.self : null;\n                var transitionHook = new TransitionHook(transition, state, hook, _options);\n                return { hook: hook, node: node, transitionHook: transitionHook };\n            });\n        };\n        return matchingHooks\n            .map(makeTransitionHooks)\n            .reduce(unnestR, [])\n            .sort(tupleSort(hookType.reverseSort))\n            .map(function (tuple) { return tuple.transitionHook; });\n    };\n    /**\n     * Finds all RegisteredHooks from:\n     * - The Transition object instance hook registry\n     * - The TransitionService ($transitions) global hook registry\n     *\n     * which matched:\n     * - the eventType\n     * - the matchCriteria (to, from, exiting, retained, entering)\n     *\n     * @returns an array of matched [[RegisteredHook]]s\n     */\n    HookBuilder.prototype.getMatchingHooks = function (hookType, treeChanges) {\n        var isCreate = hookType.hookPhase === TransitionHookPhase.CREATE;\n        // Instance and Global hook registries\n        var $transitions = this.transition.router.transitionService;\n        var registries = isCreate ? [$transitions] : [this.transition, $transitions];\n        return registries\n            .map(function (reg) { return reg.getHooks(hookType.name); }) // Get named hooks from registries\n            .filter(assertPredicate(isArray, \"broken event named: \" + hookType.name)) // Sanity check\n            .reduce(unnestR, []) // Un-nest RegisteredHook[][] to RegisteredHook[] array\n            .filter(function (hook) { return hook.matches(treeChanges); }); // Only those satisfying matchCriteria\n    };\n    return HookBuilder;\n}());\nexport { HookBuilder };\n/**\n * A factory for a sort function for HookTuples.\n *\n * The sort function first compares the PathNode depth (how deep in the state tree a node is), then compares\n * the EventHook priority.\n *\n * @param reverseDepthSort a boolean, when true, reverses the sort order for the node depth\n * @returns a tuple sort function\n */\nfunction tupleSort(reverseDepthSort) {\n    if (reverseDepthSort === void 0) { reverseDepthSort = false; }\n    return function nodeDepthThenPriority(l, r) {\n        var factor = reverseDepthSort ? -1 : 1;\n        var depthDelta = (l.node.state.path.length - r.node.state.path.length) * factor;\n        return depthDelta !== 0 ? depthDelta : r.hook.priority - l.hook.priority;\n    };\n}\n//# sourceMappingURL=hookBuilder.js.map","/** @publicapi @module transition */ /** */\nimport { trace } from '../common/trace';\nimport { services } from '../common/coreservices';\nimport { stringify } from '../common/strings';\nimport { map, find, extend, mergeR, tail, omit, arrayTuples, unnestR, identity, anyTrueR } from '../common/common';\nimport { isObject, isUndefined } from '../common/predicates';\nimport { prop, propEq, val, not, is } from '../common/hof';\nimport { TransitionHookPhase, } from './interface'; // has or is using\nimport { TransitionHook } from './transitionHook';\nimport { matchState, makeEvent } from './hookRegistry';\nimport { HookBuilder } from './hookBuilder';\nimport { PathUtils } from '../path/pathUtils';\nimport { Param } from '../params/param';\nimport { Resolvable } from '../resolve/resolvable';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { Rejection } from './rejectFactory';\nimport { flattenR, uniqR } from '../common';\n/** @hidden */\nvar stateSelf = prop('self');\n/**\n * Represents a transition between two states.\n *\n * When navigating to a state, we are transitioning **from** the current state **to** the new state.\n *\n * This object contains all contextual information about the to/from states, parameters, resolves.\n * It has information about all states being entered and exited as a result of the transition.\n */\nvar Transition = /** @class */ (function () {\n    /**\n     * Creates a new Transition object.\n     *\n     * If the target state is not valid, an error is thrown.\n     *\n     * @internalapi\n     *\n     * @param fromPath The path of [[PathNode]]s from which the transition is leaving.  The last node in the `fromPath`\n     *        encapsulates the \"from state\".\n     * @param targetState The target state and parameters being transitioned to (also, the transition options)\n     * @param router The [[UIRouter]] instance\n     */\n    function Transition(fromPath, targetState, router) {\n        var _this = this;\n        /** @hidden */\n        this._deferred = services.$q.defer();\n        /**\n         * This promise is resolved or rejected based on the outcome of the Transition.\n         *\n         * When the transition is successful, the promise is resolved\n         * When the transition is unsuccessful, the promise is rejected with the [[Rejection]] or javascript error\n         */\n        this.promise = this._deferred.promise;\n        /** @hidden Holds the hook registration functions such as those passed to Transition.onStart() */\n        this._registeredHooks = {};\n        /** @hidden */\n        this._hookBuilder = new HookBuilder(this);\n        /** Checks if this transition is currently active/running. */\n        this.isActive = function () { return _this.router.globals.transition === _this; };\n        this.router = router;\n        this._targetState = targetState;\n        if (!targetState.valid()) {\n            throw new Error(targetState.error());\n        }\n        // current() is assumed to come from targetState.options, but provide a naive implementation otherwise.\n        this._options = extend({ current: val(this) }, targetState.options());\n        this.$id = router.transitionService._transitionCount++;\n        var toPath = PathUtils.buildToPath(fromPath, targetState);\n        this._treeChanges = PathUtils.treeChanges(fromPath, toPath, this._options.reloadState);\n        this.createTransitionHookRegFns();\n        var onCreateHooks = this._hookBuilder.buildHooksForPhase(TransitionHookPhase.CREATE);\n        TransitionHook.invokeHooks(onCreateHooks, function () { return null; });\n        this.applyViewConfigs(router);\n    }\n    /** @hidden */\n    Transition.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    Transition.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /** @hidden\n     * Creates the transition-level hook registration functions\n     * (which can then be used to register hooks)\n     */\n    Transition.prototype.createTransitionHookRegFns = function () {\n        var _this = this;\n        this.router.transitionService._pluginapi\n            ._getEvents()\n            .filter(function (type) { return type.hookPhase !== TransitionHookPhase.CREATE; })\n            .forEach(function (type) { return makeEvent(_this, _this.router.transitionService, type); });\n    };\n    /** @internalapi */\n    Transition.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    Transition.prototype.applyViewConfigs = function (router) {\n        var enteringStates = this._treeChanges.entering.map(function (node) { return node.state; });\n        PathUtils.applyViewConfigs(router.transitionService.$view, this._treeChanges.to, enteringStates);\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal from [State] object\n     */\n    Transition.prototype.$from = function () {\n        return tail(this._treeChanges.from).state;\n    };\n    /**\n     * @internalapi\n     *\n     * @returns the internal to [State] object\n     */\n    Transition.prototype.$to = function () {\n        return tail(this._treeChanges.to).state;\n    };\n    /**\n     * Returns the \"from state\"\n     *\n     * Returns the state that the transition is coming *from*.\n     *\n     * @returns The state declaration object for the Transition's (\"from state\").\n     */\n    Transition.prototype.from = function () {\n        return this.$from().self;\n    };\n    /**\n     * Returns the \"to state\"\n     *\n     * Returns the state that the transition is going *to*.\n     *\n     * @returns The state declaration object for the Transition's target state (\"to state\").\n     */\n    Transition.prototype.to = function () {\n        return this.$to().self;\n    };\n    /**\n     * Gets the Target State\n     *\n     * A transition's [[TargetState]] encapsulates the [[to]] state, the [[params]], and the [[options]] as a single object.\n     *\n     * @returns the [[TargetState]] of this Transition\n     */\n    Transition.prototype.targetState = function () {\n        return this._targetState;\n    };\n    /**\n     * Determines whether two transitions are equivalent.\n     * @deprecated\n     */\n    Transition.prototype.is = function (compare) {\n        if (compare instanceof Transition) {\n            // TODO: Also compare parameters\n            return this.is({ to: compare.$to().name, from: compare.$from().name });\n        }\n        return !((compare.to && !matchState(this.$to(), compare.to)) ||\n            (compare.from && !matchState(this.$from(), compare.from)));\n    };\n    Transition.prototype.params = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return Object.freeze(this._treeChanges[pathname].map(prop('paramValues')).reduce(mergeR, {}));\n    };\n    Transition.prototype.paramsChanged = function () {\n        var fromParams = this.params('from');\n        var toParams = this.params('to');\n        // All the parameters declared on both the \"to\" and \"from\" paths\n        var allParamDescriptors = []\n            .concat(this._treeChanges.to)\n            .concat(this._treeChanges.from)\n            .map(function (pathNode) { return pathNode.paramSchema; })\n            .reduce(flattenR, [])\n            .reduce(uniqR, []);\n        var changedParamDescriptors = Param.changed(allParamDescriptors, fromParams, toParams);\n        return changedParamDescriptors.reduce(function (changedValues, descriptor) {\n            changedValues[descriptor.id] = toParams[descriptor.id];\n            return changedValues;\n        }, {});\n    };\n    /**\n     * Creates a [[UIInjector]] Dependency Injector\n     *\n     * Returns a Dependency Injector for the Transition's target state (to state).\n     * The injector provides resolve values which the target state has access to.\n     *\n     * The `UIInjector` can also provide values from the native root/global injector (ng1/ng2).\n     *\n     * #### Example:\n     * ```js\n     * .onEnter({ entering: 'myState' }, trans => {\n     *   var myResolveValue = trans.injector().get('myResolve');\n     *   // Inject a global service from the global/native injector (if it exists)\n     *   var MyService = trans.injector().get('MyService');\n     * })\n     * ```\n     *\n     * In some cases (such as `onBefore`), you may need access to some resolve data but it has not yet been fetched.\n     * You can use [[UIInjector.getAsync]] to get a promise for the data.\n     * #### Example:\n     * ```js\n     * .onBefore({}, trans => {\n     *   return trans.injector().getAsync('myResolve').then(myResolveValue =>\n     *     return myResolveValue !== 'ABORT';\n     *   });\n     * });\n     * ```\n     *\n     * If a `state` is provided, the injector that is returned will be limited to resolve values that the provided state has access to.\n     * This can be useful if both a parent state `foo` and a child state `foo.bar` have both defined a resolve such as `data`.\n     * #### Example:\n     * ```js\n     * .onEnter({ to: 'foo.bar' }, trans => {\n     *   // returns result of `foo` state's `myResolve` resolve\n     *   // even though `foo.bar` also has a `myResolve` resolve\n     *   var fooData = trans.injector('foo').get('myResolve');\n     * });\n     * ```\n     *\n     * If you need resolve data from the exiting states, pass `'from'` as `pathName`.\n     * The resolve data from the `from` path will be returned.\n     * #### Example:\n     * ```js\n     * .onExit({ exiting: 'foo.bar' }, trans => {\n     *   // Gets the resolve value of `myResolve` from the state being exited\n     *   var fooData = trans.injector(null, 'from').get('myResolve');\n     * });\n     * ```\n     *\n     *\n     * @param state Limits the resolves provided to only the resolves the provided state has access to.\n     * @param pathName Default: `'to'`: Chooses the path for which to create the injector. Use this to access resolves for `exiting` states.\n     *\n     * @returns a [[UIInjector]]\n     */\n    Transition.prototype.injector = function (state, pathName) {\n        if (pathName === void 0) { pathName = 'to'; }\n        var path = this._treeChanges[pathName];\n        if (state)\n            path = PathUtils.subPath(path, function (node) { return node.state === state || node.state.name === state; });\n        return new ResolveContext(path).injector();\n    };\n    /**\n     * Gets all available resolve tokens (keys)\n     *\n     * This method can be used in conjunction with [[injector]] to inspect the resolve values\n     * available to the Transition.\n     *\n     * This returns all the tokens defined on [[StateDeclaration.resolve]] blocks, for the states\n     * in the Transition's [[TreeChanges.to]] path.\n     *\n     * #### Example:\n     * This example logs all resolve values\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * tokens.forEach(token => console.log(token + \" = \" + trans.injector().get(token)));\n     * ```\n     *\n     * #### Example:\n     * This example creates promises for each resolve value.\n     * This triggers fetches of resolves (if any have not yet been fetched).\n     * When all promises have all settled, it logs the resolve values.\n     * ```js\n     * let tokens = trans.getResolveTokens();\n     * let promise = tokens.map(token => trans.injector().getAsync(token));\n     * Promise.all(promises).then(values => console.log(\"Resolved values: \" + values));\n     * ```\n     *\n     * Note: Angular 1 users whould use `$q.all()`\n     *\n     * @param pathname resolve context's path name (e.g., `to` or `from`)\n     *\n     * @returns an array of resolve tokens (keys)\n     */\n    Transition.prototype.getResolveTokens = function (pathname) {\n        if (pathname === void 0) { pathname = 'to'; }\n        return new ResolveContext(this._treeChanges[pathname]).getTokens();\n    };\n    /**\n     * Dynamically adds a new [[Resolvable]] (i.e., [[StateDeclaration.resolve]]) to this transition.\n     *\n     * Allows a transition hook to dynamically add a Resolvable to this Transition.\n     *\n     * Use the [[Transition.injector]] to retrieve the resolved data in subsequent hooks ([[UIInjector.get]]).\n     *\n     * If a `state` argument is provided, the Resolvable is processed when that state is being entered.\n     * If no `state` is provided then the root state is used.\n     * If the given `state` has already been entered, the Resolvable is processed when any child state is entered.\n     * If no child states will be entered, the Resolvable is processed during the `onFinish` phase of the Transition.\n     *\n     * The `state` argument also scopes the resolved data.\n     * The resolved data is available from the injector for that `state` and any children states.\n     *\n     * #### Example:\n     * ```js\n     * transitionService.onBefore({}, transition => {\n     *   transition.addResolvable({\n     *     token: 'myResolve',\n     *     deps: ['MyService'],\n     *     resolveFn: myService => myService.getData()\n     *   });\n     * });\n     * ```\n     *\n     * @param resolvable a [[ResolvableLiteral]] object (or a [[Resolvable]])\n     * @param state the state in the \"to path\" which should receive the new resolve (otherwise, the root state)\n     */\n    Transition.prototype.addResolvable = function (resolvable, state) {\n        if (state === void 0) { state = ''; }\n        resolvable = is(Resolvable)(resolvable) ? resolvable : new Resolvable(resolvable);\n        var stateName = typeof state === 'string' ? state : state.name;\n        var topath = this._treeChanges.to;\n        var targetNode = find(topath, function (node) { return node.state.name === stateName; });\n        var resolveContext = new ResolveContext(topath);\n        resolveContext.addResolvables([resolvable], targetNode.state);\n    };\n    /**\n     * Gets the transition from which this transition was redirected.\n     *\n     * If the current transition is a redirect, this method returns the transition that was redirected.\n     *\n     * #### Example:\n     * ```js\n     * let transitionA = $state.go('A').transition\n     * transitionA.onStart({}, () => $state.target('B'));\n     * $transitions.onSuccess({ to: 'B' }, (trans) => {\n     *   trans.to().name === 'B'; // true\n     *   trans.redirectedFrom() === transitionA; // true\n     * });\n     * ```\n     *\n     * @returns The previous Transition, or null if this Transition is not the result of a redirection\n     */\n    Transition.prototype.redirectedFrom = function () {\n        return this._options.redirectedFrom || null;\n    };\n    /**\n     * Gets the original transition in a redirect chain\n     *\n     * A transition might belong to a long chain of multiple redirects.\n     * This method walks the [[redirectedFrom]] chain back to the original (first) transition in the chain.\n     *\n     * #### Example:\n     * ```js\n     * // states\n     * registry.register({ name: 'A', redirectTo: 'B' });\n     * registry.register({ name: 'B', redirectTo: 'C' });\n     * registry.register({ name: 'C', redirectTo: 'D' });\n     * registry.register({ name: 'D' });\n     *\n     * let transitionA = $state.go('A').transition\n     *\n     * $transitions.onSuccess({ to: 'D' }, (trans) => {\n     *   trans.to().name === 'D'; // true\n     *   trans.redirectedFrom().to().name === 'C'; // true\n     *   trans.originalTransition() === transitionA; // true\n     *   trans.originalTransition().to().name === 'A'; // true\n     * });\n     * ```\n     *\n     * @returns The original Transition that started a redirect chain\n     */\n    Transition.prototype.originalTransition = function () {\n        var rf = this.redirectedFrom();\n        return (rf && rf.originalTransition()) || this;\n    };\n    /**\n     * Get the transition options\n     *\n     * @returns the options for this Transition.\n     */\n    Transition.prototype.options = function () {\n        return this._options;\n    };\n    /**\n     * Gets the states being entered.\n     *\n     * @returns an array of states that will be entered during this transition.\n     */\n    Transition.prototype.entering = function () {\n        return map(this._treeChanges.entering, prop('state')).map(stateSelf);\n    };\n    /**\n     * Gets the states being exited.\n     *\n     * @returns an array of states that will be exited during this transition.\n     */\n    Transition.prototype.exiting = function () {\n        return map(this._treeChanges.exiting, prop('state'))\n            .map(stateSelf)\n            .reverse();\n    };\n    /**\n     * Gets the states being retained.\n     *\n     * @returns an array of states that are already entered from a previous Transition, that will not be\n     *    exited during this Transition\n     */\n    Transition.prototype.retained = function () {\n        return map(this._treeChanges.retained, prop('state')).map(stateSelf);\n    };\n    /**\n     * Get the [[ViewConfig]]s associated with this Transition\n     *\n     * Each state can define one or more views (template/controller), which are encapsulated as `ViewConfig` objects.\n     * This method fetches the `ViewConfigs` for a given path in the Transition (e.g., \"to\" or \"entering\").\n     *\n     * @param pathname the name of the path to fetch views for:\n     *   (`'to'`, `'from'`, `'entering'`, `'exiting'`, `'retained'`)\n     * @param state If provided, only returns the `ViewConfig`s for a single state in the path\n     *\n     * @returns a list of ViewConfig objects for the given path.\n     */\n    Transition.prototype.views = function (pathname, state) {\n        if (pathname === void 0) { pathname = 'entering'; }\n        var path = this._treeChanges[pathname];\n        path = !state ? path : path.filter(propEq('state', state));\n        return path\n            .map(prop('views'))\n            .filter(identity)\n            .reduce(unnestR, []);\n    };\n    Transition.prototype.treeChanges = function (pathname) {\n        return pathname ? this._treeChanges[pathname] : this._treeChanges;\n    };\n    /**\n     * Creates a new transition that is a redirection of the current one.\n     *\n     * This transition can be returned from a [[TransitionService]] hook to\n     * redirect a transition to a new state and/or set of parameters.\n     *\n     * @internalapi\n     *\n     * @returns Returns a new [[Transition]] instance.\n     */\n    Transition.prototype.redirect = function (targetState) {\n        var redirects = 1, trans = this;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((trans = trans.redirectedFrom()) != null) {\n            if (++redirects > 20)\n                throw new Error(\"Too many consecutive Transition redirects (20+)\");\n        }\n        var redirectOpts = { redirectedFrom: this, source: 'redirect' };\n        // If the original transition was caused by URL sync, then use { location: 'replace' }\n        // on the new transition (unless the target state explicitly specifies location: false).\n        // This causes the original url to be replaced with the url for the redirect target\n        // so the original url disappears from the browser history.\n        if (this.options().source === 'url' && targetState.options().location !== false) {\n            redirectOpts.location = 'replace';\n        }\n        var newOptions = extend({}, this.options(), targetState.options(), redirectOpts);\n        targetState = targetState.withOptions(newOptions, true);\n        var newTransition = this.router.transitionService.create(this._treeChanges.from, targetState);\n        var originalEnteringNodes = this._treeChanges.entering;\n        var redirectEnteringNodes = newTransition._treeChanges.entering;\n        // --- Re-use resolve data from original transition ---\n        // When redirecting from a parent state to a child state where the parent parameter values haven't changed\n        // (because of the redirect), the resolves fetched by the original transition are still valid in the\n        // redirected transition.\n        //\n        // This allows you to define a redirect on a parent state which depends on an async resolve value.\n        // You can wait for the resolve, then redirect to a child state based on the result.\n        // The redirected transition does not have to re-fetch the resolve.\n        // ---------------------------------------------------------\n        var nodeIsReloading = function (reloadState) { return function (node) {\n            return reloadState && node.state.includes[reloadState.name];\n        }; };\n        // Find any \"entering\" nodes in the redirect path that match the original path and aren't being reloaded\n        var matchingEnteringNodes = PathUtils.matching(redirectEnteringNodes, originalEnteringNodes, PathUtils.nonDynamicParams).filter(not(nodeIsReloading(targetState.options().reloadState)));\n        // Use the existing (possibly pre-resolved) resolvables for the matching entering nodes.\n        matchingEnteringNodes.forEach(function (node, idx) {\n            node.resolvables = originalEnteringNodes[idx].resolvables;\n        });\n        return newTransition;\n    };\n    /** @hidden If a transition doesn't exit/enter any states, returns any [[Param]] whose value changed */\n    Transition.prototype._changedParams = function () {\n        var tc = this._treeChanges;\n        /** Return undefined if it's not a \"dynamic\" transition, for the following reasons */\n        // If user explicitly wants a reload\n        if (this._options.reload)\n            return undefined;\n        // If any states are exiting or entering\n        if (tc.exiting.length || tc.entering.length)\n            return undefined;\n        // If to/from path lengths differ\n        if (tc.to.length !== tc.from.length)\n            return undefined;\n        // If the to/from paths are different\n        var pathsDiffer = arrayTuples(tc.to, tc.from)\n            .map(function (tuple) { return tuple[0].state !== tuple[1].state; })\n            .reduce(anyTrueR, false);\n        if (pathsDiffer)\n            return undefined;\n        // Find any parameter values that differ\n        var nodeSchemas = tc.to.map(function (node) { return node.paramSchema; });\n        var _a = [tc.to, tc.from].map(function (path) { return path.map(function (x) { return x.paramValues; }); }), toValues = _a[0], fromValues = _a[1];\n        var tuples = arrayTuples(nodeSchemas, toValues, fromValues);\n        return tuples.map(function (_a) {\n            var schema = _a[0], toVals = _a[1], fromVals = _a[2];\n            return Param.changed(schema, toVals, fromVals);\n        }).reduce(unnestR, []);\n    };\n    /**\n     * Returns true if the transition is dynamic.\n     *\n     * A transition is dynamic if no states are entered nor exited, but at least one dynamic parameter has changed.\n     *\n     * @returns true if the Transition is dynamic\n     */\n    Transition.prototype.dynamic = function () {\n        var changes = this._changedParams();\n        return !changes ? false : changes.map(function (x) { return x.dynamic; }).reduce(anyTrueR, false);\n    };\n    /**\n     * Returns true if the transition is ignored.\n     *\n     * A transition is ignored if no states are entered nor exited, and no parameter values have changed.\n     *\n     * @returns true if the Transition is ignored.\n     */\n    Transition.prototype.ignored = function () {\n        return !!this._ignoredReason();\n    };\n    /** @hidden */\n    Transition.prototype._ignoredReason = function () {\n        var pending = this.router.globals.transition;\n        var reloadState = this._options.reloadState;\n        var same = function (pathA, pathB) {\n            if (pathA.length !== pathB.length)\n                return false;\n            var matching = PathUtils.matching(pathA, pathB);\n            return pathA.length === matching.filter(function (node) { return !reloadState || !node.state.includes[reloadState.name]; }).length;\n        };\n        var newTC = this.treeChanges();\n        var pendTC = pending && pending.treeChanges();\n        if (pendTC && same(pendTC.to, newTC.to) && same(pendTC.exiting, newTC.exiting))\n            return 'SameAsPending';\n        if (newTC.exiting.length === 0 && newTC.entering.length === 0 && same(newTC.from, newTC.to))\n            return 'SameAsCurrent';\n    };\n    /**\n     * Runs the transition\n     *\n     * This method is generally called from the [[StateService.transitionTo]]\n     *\n     * @internalapi\n     *\n     * @returns a promise for a successful transition.\n     */\n    Transition.prototype.run = function () {\n        var _this = this;\n        var runAllHooks = TransitionHook.runAllHooks;\n        // Gets transition hooks array for the given phase\n        var getHooksFor = function (phase) { return _this._hookBuilder.buildHooksForPhase(phase); };\n        // When the chain is complete, then resolve or reject the deferred\n        var transitionSuccess = function () {\n            trace.traceSuccess(_this.$to(), _this);\n            _this.success = true;\n            _this._deferred.resolve(_this.to());\n            runAllHooks(getHooksFor(TransitionHookPhase.SUCCESS));\n        };\n        var transitionError = function (reason) {\n            trace.traceError(reason, _this);\n            _this.success = false;\n            _this._deferred.reject(reason);\n            _this._error = reason;\n            runAllHooks(getHooksFor(TransitionHookPhase.ERROR));\n        };\n        var runTransition = function () {\n            // Wait to build the RUN hook chain until the BEFORE hooks are done\n            // This allows a BEFORE hook to dynamically add additional RUN hooks via the Transition object.\n            var allRunHooks = getHooksFor(TransitionHookPhase.RUN);\n            var done = function () { return services.$q.when(undefined); };\n            return TransitionHook.invokeHooks(allRunHooks, done);\n        };\n        var startTransition = function () {\n            var globals = _this.router.globals;\n            globals.lastStartedTransitionId = _this.$id;\n            globals.transition = _this;\n            globals.transitionHistory.enqueue(_this);\n            trace.traceTransitionStart(_this);\n            return services.$q.when(undefined);\n        };\n        var allBeforeHooks = getHooksFor(TransitionHookPhase.BEFORE);\n        TransitionHook.invokeHooks(allBeforeHooks, startTransition)\n            .then(runTransition)\n            .then(transitionSuccess, transitionError);\n        return this.promise;\n    };\n    /**\n     * Checks if the Transition is valid\n     *\n     * @returns true if the Transition is valid\n     */\n    Transition.prototype.valid = function () {\n        return !this.error() || this.success !== undefined;\n    };\n    /**\n     * Aborts this transition\n     *\n     * Imperative API to abort a Transition.\n     * This only applies to Transitions that are not yet complete.\n     */\n    Transition.prototype.abort = function () {\n        // Do not set flag if the transition is already complete\n        if (isUndefined(this.success)) {\n            this._aborted = true;\n        }\n    };\n    /**\n     * The Transition error reason.\n     *\n     * If the transition is invalid (and could not be run), returns the reason the transition is invalid.\n     * If the transition was valid and ran, but was not successful, returns the reason the transition failed.\n     *\n     * @returns a transition rejection explaining why the transition is invalid, or the reason the transition failed.\n     */\n    Transition.prototype.error = function () {\n        var state = this.$to();\n        if (state.self.abstract) {\n            return Rejection.invalid(\"Cannot transition to abstract state '\" + state.name + \"'\");\n        }\n        var paramDefs = state.parameters();\n        var values = this.params();\n        var invalidParams = paramDefs.filter(function (param) { return !param.validates(values[param.id]); });\n        if (invalidParams.length) {\n            var invalidValues = invalidParams.map(function (param) { return \"[\" + param.id + \":\" + stringify(values[param.id]) + \"]\"; }).join(', ');\n            var detail = \"The following parameter values are not valid for state '\" + state.name + \"': \" + invalidValues;\n            return Rejection.invalid(detail);\n        }\n        if (this.success === false)\n            return this._error;\n    };\n    /**\n     * A string representation of the Transition\n     *\n     * @returns A string representation of the Transition\n     */\n    Transition.prototype.toString = function () {\n        var fromStateOrName = this.from();\n        var toStateOrName = this.to();\n        var avoidEmptyHash = function (params) {\n            return params['#'] !== null && params['#'] !== undefined ? params : omit(params, ['#']);\n        };\n        // (X) means the to state is invalid.\n        var id = this.$id, from = isObject(fromStateOrName) ? fromStateOrName.name : fromStateOrName, fromParams = stringify(avoidEmptyHash(this._treeChanges.from.map(prop('paramValues')).reduce(mergeR, {}))), toValid = this.valid() ? '' : '(X) ', to = isObject(toStateOrName) ? toStateOrName.name : toStateOrName, toParams = stringify(avoidEmptyHash(this.params()));\n        return \"Transition#\" + id + \"( '\" + from + \"'\" + fromParams + \" -> \" + toValid + \"'\" + to + \"'\" + toParams + \" )\";\n    };\n    /** @hidden */\n    Transition.diToken = Transition;\n    return Transition;\n}());\nexport { Transition };\n//# sourceMappingURL=transition.js.map","/** @publicapi @module url */ /** */\nimport { map, inherit, identity, unnest, tail, find, allTrueR, unnestR, arrayTuples } from '../common/common';\nimport { prop, propEq } from '../common/hof';\nimport { isArray, isString, isDefined } from '../common/predicates';\nimport { Param, DefType } from '../params/param';\nimport { joinNeighborsR, splitOnDelim } from '../common/strings';\nimport { defaults } from '../common';\n/** @hidden */\nfunction quoteRegExp(str, param) {\n    var surroundPattern = ['', ''], result = str.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, '\\\\$&');\n    if (!param)\n        return result;\n    switch (param.squash) {\n        case false:\n            surroundPattern = ['(', ')' + (param.isOptional ? '?' : '')];\n            break;\n        case true:\n            result = result.replace(/\\/$/, '');\n            surroundPattern = ['(?:/(', ')|/)?'];\n            break;\n        default:\n            surroundPattern = [\"(\" + param.squash + \"|\", ')?'];\n            break;\n    }\n    return result + surroundPattern[0] + param.type.pattern.source + surroundPattern[1];\n}\n/** @hidden */\nvar memoizeTo = function (obj, _prop, fn) { return (obj[_prop] = obj[_prop] || fn()); };\n/** @hidden */\nvar splitOnSlash = splitOnDelim('/');\n/** @hidden */\nvar defaultConfig = {\n    state: { params: {} },\n    strict: true,\n    caseInsensitive: true,\n};\n/**\n * Matches URLs against patterns.\n *\n * Matches URLs against patterns and extracts named parameters from the path or the search\n * part of the URL.\n *\n * A URL pattern consists of a path pattern, optionally followed by '?' and a list of search (query)\n * parameters. Multiple search parameter names are separated by '&'. Search parameters\n * do not influence whether or not a URL is matched, but their values are passed through into\n * the matched parameters returned by [[UrlMatcher.exec]].\n *\n * - *Path parameters* are defined using curly brace placeholders (`/somepath/{param}`)\n * or colon placeholders (`/somePath/:param`).\n *\n * - *A parameter RegExp* may be defined for a param after a colon\n * (`/somePath/{param:[a-zA-Z0-9]+}`) in a curly brace placeholder.\n * The regexp must match for the url to be matched.\n * Should the regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n *\n * Note: a RegExp parameter will encode its value using either [[ParamTypes.path]] or [[ParamTypes.query]].\n *\n * - *Custom parameter types* may also be specified after a colon (`/somePath/{param:int}`) in curly brace parameters.\n *   See [[UrlMatcherFactory.type]] for more information.\n *\n * - *Catch-all parameters* are defined using an asterisk placeholder (`/somepath/*catchallparam`).\n *   A catch-all * parameter value will contain the remainder of the URL.\n *\n * ---\n *\n * Parameter names may contain only word characters (latin letters, digits, and underscore) and\n * must be unique within the pattern (across both path and search parameters).\n * A path parameter matches any number of characters other than '/'. For catch-all\n * placeholders the path parameter matches any number of characters.\n *\n * Examples:\n *\n * * `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n *   trailing slashes, and patterns have to match the entire path, not just a prefix.\n * * `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n *   '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n * * `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n * * `'/user/{id:[^/]*}'` - Same as the previous example.\n * * `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n *   parameter consists of 1 to 8 hex digits.\n * * `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n *   path into the parameter 'path'.\n * * `'/files/*path'` - ditto.\n * * `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n *   in the built-in  `date` ParamType matches `2014-11-12`) and provides a Date object in $stateParams.start\n *\n */\nvar UrlMatcher = /** @class */ (function () {\n    /**\n     * @param pattern The pattern to compile into a matcher.\n     * @param paramTypes The [[ParamTypes]] registry\n     * @param paramFactory A [[ParamFactory]] object\n     * @param config  A [[UrlMatcherCompileConfig]] configuration object\n     */\n    function UrlMatcher(pattern, paramTypes, paramFactory, config) {\n        var _this = this;\n        /** @hidden */\n        this._cache = { path: [this] };\n        /** @hidden */\n        this._children = [];\n        /** @hidden */\n        this._params = [];\n        /** @hidden */\n        this._segments = [];\n        /** @hidden */\n        this._compiled = [];\n        this.config = config = defaults(config, defaultConfig);\n        this.pattern = pattern;\n        // Find all placeholders and create a compiled pattern, using either classic or curly syntax:\n        //   '*' name\n        //   ':' name\n        //   '{' name '}'\n        //   '{' name ':' regexp '}'\n        // The regular expression is somewhat complicated due to the need to allow curly braces\n        // inside the regular expression. The placeholder regexp breaks down as follows:\n        //    ([:*])([\\w\\[\\]]+)              - classic placeholder ($1 / $2) (search version has - for snake-case)\n        //    \\{([\\w\\[\\]]+)(?:\\:\\s*( ... ))?\\}  - curly brace placeholder ($3) with optional regexp/type ... ($4) (search version has - for snake-case\n        //    (?: ... | ... | ... )+         - the regexp consists of any number of atoms, an atom being either\n        //    [^{}\\\\]+                       - anything other than curly braces or backslash\n        //    \\\\.                            - a backslash escape\n        //    \\{(?:[^{}\\\\]+|\\\\.)*\\}          - a matched set of curly braces containing other atoms\n        var placeholder = /([:*])([\\w\\[\\]]+)|\\{([\\w\\[\\]]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var searchPlaceholder = /([:]?)([\\w\\[\\].-]+)|\\{([\\w\\[\\].-]+)(?:\\:\\s*((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g;\n        var patterns = [];\n        var last = 0;\n        var matchArray;\n        var checkParamErrors = function (id) {\n            if (!UrlMatcher.nameValidator.test(id))\n                throw new Error(\"Invalid parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n            if (find(_this._params, propEq('id', id)))\n                throw new Error(\"Duplicate parameter name '\" + id + \"' in pattern '\" + pattern + \"'\");\n        };\n        // Split into static segments separated by path parameter placeholders.\n        // The number of segments is always 1 more than the number of parameters.\n        var matchDetails = function (m, isSearch) {\n            // IE[78] returns '' for unmatched groups instead of null\n            var id = m[2] || m[3];\n            var regexp = isSearch ? m[4] : m[4] || (m[1] === '*' ? '[\\\\s\\\\S]*' : null);\n            var makeRegexpType = function (str) {\n                return inherit(paramTypes.type(isSearch ? 'query' : 'path'), {\n                    pattern: new RegExp(str, _this.config.caseInsensitive ? 'i' : undefined),\n                });\n            };\n            return {\n                id: id,\n                regexp: regexp,\n                segment: pattern.substring(last, m.index),\n                type: !regexp ? null : paramTypes.type(regexp) || makeRegexpType(regexp),\n            };\n        };\n        var details;\n        var segment;\n        // tslint:disable-next-line:no-conditional-assignment\n        while ((matchArray = placeholder.exec(pattern))) {\n            details = matchDetails(matchArray, false);\n            if (details.segment.indexOf('?') >= 0)\n                break; // we're into the search part\n            checkParamErrors(details.id);\n            this._params.push(paramFactory.fromPath(details.id, details.type, config.state));\n            this._segments.push(details.segment);\n            patterns.push([details.segment, tail(this._params)]);\n            last = placeholder.lastIndex;\n        }\n        segment = pattern.substring(last);\n        // Find any search parameter names and remove them from the last segment\n        var i = segment.indexOf('?');\n        if (i >= 0) {\n            var search = segment.substring(i);\n            segment = segment.substring(0, i);\n            if (search.length > 0) {\n                last = 0;\n                // tslint:disable-next-line:no-conditional-assignment\n                while ((matchArray = searchPlaceholder.exec(search))) {\n                    details = matchDetails(matchArray, true);\n                    checkParamErrors(details.id);\n                    this._params.push(paramFactory.fromSearch(details.id, details.type, config.state));\n                    last = placeholder.lastIndex;\n                    // check if ?&\n                }\n            }\n        }\n        this._segments.push(segment);\n        this._compiled = patterns.map(function (_pattern) { return quoteRegExp.apply(null, _pattern); }).concat(quoteRegExp(segment));\n    }\n    /** @hidden */\n    UrlMatcher.encodeDashes = function (str) {\n        // Replace dashes with encoded \"\\-\"\n        return encodeURIComponent(str).replace(/-/g, function (c) {\n            return \"%5C%\" + c\n                .charCodeAt(0)\n                .toString(16)\n                .toUpperCase();\n        });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's path segments and path params, in order */\n    UrlMatcher.pathSegmentsAndParams = function (matcher) {\n        var staticSegments = matcher._segments;\n        var pathParams = matcher._params.filter(function (p) { return p.location === DefType.PATH; });\n        return arrayTuples(staticSegments, pathParams.concat(undefined))\n            .reduce(unnestR, [])\n            .filter(function (x) { return x !== '' && isDefined(x); });\n    };\n    /** @hidden Given a matcher, return an array with the matcher's query params */\n    UrlMatcher.queryParams = function (matcher) {\n        return matcher._params.filter(function (p) { return p.location === DefType.SEARCH; });\n    };\n    /**\n     * Compare two UrlMatchers\n     *\n     * This comparison function converts a UrlMatcher into static and dynamic path segments.\n     * Each static path segment is a static string between a path separator (slash character).\n     * Each dynamic segment is a path parameter.\n     *\n     * The comparison function sorts static segments before dynamic ones.\n     */\n    UrlMatcher.compare = function (a, b) {\n        /**\n         * Turn a UrlMatcher and all its parent matchers into an array\n         * of slash literals '/', string literals, and Param objects\n         *\n         * This example matcher matches strings like \"/foo/:param/tail\":\n         * var matcher = $umf.compile(\"/foo\").append($umf.compile(\"/:param\")).append($umf.compile(\"/\")).append($umf.compile(\"tail\"));\n         * var result = segments(matcher); // [ '/', 'foo', '/', Param, '/', 'tail' ]\n         *\n         * Caches the result as `matcher._cache.segments`\n         */\n        var segments = function (matcher) {\n            return (matcher._cache.segments =\n                matcher._cache.segments ||\n                    matcher._cache.path\n                        .map(UrlMatcher.pathSegmentsAndParams)\n                        .reduce(unnestR, [])\n                        .reduce(joinNeighborsR, [])\n                        .map(function (x) { return (isString(x) ? splitOnSlash(x) : x); })\n                        .reduce(unnestR, []));\n        };\n        /**\n         * Gets the sort weight for each segment of a UrlMatcher\n         *\n         * Caches the result as `matcher._cache.weights`\n         */\n        var weights = function (matcher) {\n            return (matcher._cache.weights =\n                matcher._cache.weights ||\n                    segments(matcher).map(function (segment) {\n                        // Sort slashes first, then static strings, the Params\n                        if (segment === '/')\n                            return 1;\n                        if (isString(segment))\n                            return 2;\n                        if (segment instanceof Param)\n                            return 3;\n                    }));\n        };\n        /**\n         * Pads shorter array in-place (mutates)\n         */\n        var padArrays = function (l, r, padVal) {\n            var len = Math.max(l.length, r.length);\n            while (l.length < len)\n                l.push(padVal);\n            while (r.length < len)\n                r.push(padVal);\n        };\n        var weightsA = weights(a), weightsB = weights(b);\n        padArrays(weightsA, weightsB, 0);\n        var _pairs = arrayTuples(weightsA, weightsB);\n        var cmp, i;\n        for (i = 0; i < _pairs.length; i++) {\n            cmp = _pairs[i][0] - _pairs[i][1];\n            if (cmp !== 0)\n                return cmp;\n        }\n        return 0;\n    };\n    /**\n     * Creates a new concatenated UrlMatcher\n     *\n     * Builds a new UrlMatcher by appending another UrlMatcher to this one.\n     *\n     * @param url A `UrlMatcher` instance to append as a child of the current `UrlMatcher`.\n     */\n    UrlMatcher.prototype.append = function (url) {\n        this._children.push(url);\n        url._cache = {\n            path: this._cache.path.concat(url),\n            parent: this,\n            pattern: null,\n        };\n        return url;\n    };\n    /** @hidden */\n    UrlMatcher.prototype.isRoot = function () {\n        return this._cache.path[0] === this;\n    };\n    /** Returns the input pattern string */\n    UrlMatcher.prototype.toString = function () {\n        return this.pattern;\n    };\n    /**\n     * Tests the specified url/path against this matcher.\n     *\n     * Tests if the given url matches this matcher's pattern, and returns an object containing the captured\n     * parameter values.  Returns null if the path does not match.\n     *\n     * The returned object contains the values\n     * of any search parameters that are mentioned in the pattern, but their value may be null if\n     * they are not present in `search`. This means that search parameters are always treated\n     * as optional.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n     *   x: '1', q: 'hello'\n     * });\n     * // returns { id: 'bob', q: 'hello', r: null }\n     * ```\n     *\n     * @param path    The URL path to match, e.g. `$location.path()`.\n     * @param search  URL search parameters, e.g. `$location.search()`.\n     * @param hash    URL hash e.g. `$location.hash()`.\n     * @param options\n     *\n     * @returns The captured parameter values.\n     */\n    UrlMatcher.prototype.exec = function (path, search, hash, options) {\n        var _this = this;\n        if (search === void 0) { search = {}; }\n        if (options === void 0) { options = {}; }\n        var match = memoizeTo(this._cache, 'pattern', function () {\n            return new RegExp([\n                '^',\n                unnest(_this._cache.path.map(prop('_compiled'))).join(''),\n                _this.config.strict === false ? '/?' : '',\n                '$',\n            ].join(''), _this.config.caseInsensitive ? 'i' : undefined);\n        }).exec(path);\n        if (!match)\n            return null;\n        // options = defaults(options, { isolate: false });\n        var allParams = this.parameters(), pathParams = allParams.filter(function (param) { return !param.isSearch(); }), searchParams = allParams.filter(function (param) { return param.isSearch(); }), nPathSegments = this._cache.path.map(function (urlm) { return urlm._segments.length - 1; }).reduce(function (a, x) { return a + x; }), values = {};\n        if (nPathSegments !== match.length - 1)\n            throw new Error(\"Unbalanced capture group in route '\" + this.pattern + \"'\");\n        function decodePathArray(paramVal) {\n            var reverseString = function (str) {\n                return str\n                    .split('')\n                    .reverse()\n                    .join('');\n            };\n            var unquoteDashes = function (str) { return str.replace(/\\\\-/g, '-'); };\n            var split = reverseString(paramVal).split(/-(?!\\\\)/);\n            var allReversed = map(split, reverseString);\n            return map(allReversed, unquoteDashes).reverse();\n        }\n        for (var i = 0; i < nPathSegments; i++) {\n            var param = pathParams[i];\n            var value = match[i + 1];\n            // if the param value matches a pre-replace pair, replace the value before decoding.\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (value && param.array === true)\n                value = decodePathArray(value);\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        }\n        searchParams.forEach(function (param) {\n            var value = search[param.id];\n            for (var j = 0; j < param.replace.length; j++) {\n                if (param.replace[j].from === value)\n                    value = param.replace[j].to;\n            }\n            if (isDefined(value))\n                value = param.type.decode(value);\n            values[param.id] = param.value(value);\n        });\n        if (hash)\n            values['#'] = hash;\n        return values;\n    };\n    /**\n     * @hidden\n     * Returns all the [[Param]] objects of all path and search parameters of this pattern in order of appearance.\n     *\n     * @returns {Array.<Param>}  An array of [[Param]] objects. Must be treated as read-only. If the\n     *    pattern has no parameters, an empty array is returned.\n     */\n    UrlMatcher.prototype.parameters = function (opts) {\n        if (opts === void 0) { opts = {}; }\n        if (opts.inherit === false)\n            return this._params;\n        return unnest(this._cache.path.map(function (matcher) { return matcher._params; }));\n    };\n    /**\n     * @hidden\n     * Returns a single parameter from this UrlMatcher by id\n     *\n     * @param id\n     * @param opts\n     * @returns {T|Param|any|boolean|UrlMatcher|null}\n     */\n    UrlMatcher.prototype.parameter = function (id, opts) {\n        var _this = this;\n        if (opts === void 0) { opts = {}; }\n        var findParam = function () {\n            for (var _i = 0, _a = _this._params; _i < _a.length; _i++) {\n                var param = _a[_i];\n                if (param.id === id)\n                    return param;\n            }\n        };\n        var parent = this._cache.parent;\n        return findParam() || (opts.inherit !== false && parent && parent.parameter(id, opts)) || null;\n    };\n    /**\n     * Validates the input parameter values against this UrlMatcher\n     *\n     * Checks an object hash of parameters to validate their correctness according to the parameter\n     * types of this `UrlMatcher`.\n     *\n     * @param params The object hash of parameters to validate.\n     * @returns Returns `true` if `params` validates, otherwise `false`.\n     */\n    UrlMatcher.prototype.validates = function (params) {\n        var validParamVal = function (param, val) { return !param || param.validates(val); };\n        params = params || {};\n        // I'm not sure why this checks only the param keys passed in, and not all the params known to the matcher\n        var paramSchema = this.parameters().filter(function (paramDef) { return params.hasOwnProperty(paramDef.id); });\n        return paramSchema.map(function (paramDef) { return validParamVal(paramDef, params[paramDef.id]); }).reduce(allTrueR, true);\n    };\n    /**\n     * Given a set of parameter values, creates a URL from this UrlMatcher.\n     *\n     * Creates a URL that matches this pattern by substituting the specified values\n     * for the path and search parameters.\n     *\n     * #### Example:\n     * ```js\n     * new UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n     * // returns '/user/bob?q=yes'\n     * ```\n     *\n     * @param values  the values to substitute for the parameters in this pattern.\n     * @returns the formatted URL (path and optionally search part).\n     */\n    UrlMatcher.prototype.format = function (values) {\n        if (values === void 0) { values = {}; }\n        // Build the full path of UrlMatchers (including all parent UrlMatchers)\n        var urlMatchers = this._cache.path;\n        // Extract all the static segments and Params (processed as ParamDetails)\n        // into an ordered array\n        var pathSegmentsAndParams = urlMatchers\n            .map(UrlMatcher.pathSegmentsAndParams)\n            .reduce(unnestR, [])\n            .map(function (x) { return (isString(x) ? x : getDetails(x)); });\n        // Extract the query params into a separate array\n        var queryParams = urlMatchers\n            .map(UrlMatcher.queryParams)\n            .reduce(unnestR, [])\n            .map(getDetails);\n        var isInvalid = function (param) { return param.isValid === false; };\n        if (pathSegmentsAndParams.concat(queryParams).filter(isInvalid).length) {\n            return null;\n        }\n        /**\n         * Given a Param, applies the parameter value, then returns detailed information about it\n         */\n        function getDetails(param) {\n            // Normalize to typed value\n            var value = param.value(values[param.id]);\n            var isValid = param.validates(value);\n            var isDefaultValue = param.isDefaultValue(value);\n            // Check if we're in squash mode for the parameter\n            var squash = isDefaultValue ? param.squash : false;\n            // Allow the Parameter's Type to encode the value\n            var encoded = param.type.encode(value);\n            return { param: param, value: value, isValid: isValid, isDefaultValue: isDefaultValue, squash: squash, encoded: encoded };\n        }\n        // Build up the path-portion from the list of static segments and parameters\n        var pathString = pathSegmentsAndParams.reduce(function (acc, x) {\n            // The element is a static segment (a raw string); just append it\n            if (isString(x))\n                return acc + x;\n            // Otherwise, it's a ParamDetails.\n            var squash = x.squash, encoded = x.encoded, param = x.param;\n            // If squash is === true, try to remove a slash from the path\n            if (squash === true)\n                return acc.match(/\\/$/) ? acc.slice(0, -1) : acc;\n            // If squash is a string, use the string for the param value\n            if (isString(squash))\n                return acc + squash;\n            if (squash !== false)\n                return acc; // ?\n            if (encoded == null)\n                return acc;\n            // If this parameter value is an array, encode the value using encodeDashes\n            if (isArray(encoded))\n                return acc + map(encoded, UrlMatcher.encodeDashes).join('-');\n            // If the parameter type is \"raw\", then do not encodeURIComponent\n            if (param.raw)\n                return acc + encoded;\n            // Encode the value\n            return acc + encodeURIComponent(encoded);\n        }, '');\n        // Build the query string by applying parameter values (array or regular)\n        // then mapping to key=value, then flattening and joining using \"&\"\n        var queryString = queryParams\n            .map(function (paramDetails) {\n            var param = paramDetails.param, squash = paramDetails.squash, encoded = paramDetails.encoded, isDefaultValue = paramDetails.isDefaultValue;\n            if (encoded == null || (isDefaultValue && squash !== false))\n                return;\n            if (!isArray(encoded))\n                encoded = [encoded];\n            if (encoded.length === 0)\n                return;\n            if (!param.raw)\n                encoded = map(encoded, encodeURIComponent);\n            return encoded.map(function (val) { return param.id + \"=\" + val; });\n        })\n            .filter(identity)\n            .reduce(unnestR, [])\n            .join('&');\n        // Concat the pathstring with the queryString (if exists) and the hashString (if exists)\n        return pathString + (queryString ? \"?\" + queryString : '') + (values['#'] ? '#' + values['#'] : '');\n    };\n    /** @hidden */\n    UrlMatcher.nameValidator = /^\\w+([-.]+\\w+)*(?:\\[\\])?$/;\n    return UrlMatcher;\n}());\nexport { UrlMatcher };\n//# sourceMappingURL=urlMatcher.js.map","var __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\n/** @publicapi @module url */ /** */\nimport { extend, forEach, isDefined, isFunction, isObject } from '../common';\nimport { UrlMatcher } from './urlMatcher';\nimport { DefType, Param } from '../params';\n/** @internalapi */\nvar ParamFactory = /** @class */ (function () {\n    function ParamFactory(router) {\n        this.router = router;\n    }\n    ParamFactory.prototype.fromConfig = function (id, type, state) {\n        return new Param(id, type, DefType.CONFIG, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromPath = function (id, type, state) {\n        return new Param(id, type, DefType.PATH, this.router.urlService.config, state);\n    };\n    ParamFactory.prototype.fromSearch = function (id, type, state) {\n        return new Param(id, type, DefType.SEARCH, this.router.urlService.config, state);\n    };\n    return ParamFactory;\n}());\nexport { ParamFactory };\n/**\n * Factory for [[UrlMatcher]] instances.\n *\n * The factory is available to ng1 services as\n * `$urlMatcherFactory` or ng1 providers as `$urlMatcherFactoryProvider`.\n *\n * @internalapi\n */\nvar UrlMatcherFactory = /** @class */ (function () {\n    // TODO: move implementations to UrlConfig (urlService.config)\n    function UrlMatcherFactory(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @internalapi Creates a new [[Param]] for a given location (DefType) */\n        this.paramFactory = new ParamFactory(this.router);\n        /** @deprecated use [[UrlConfig.caseInsensitive]] */\n        this.caseInsensitive = function (value) { return _this.router.urlService.config.caseInsensitive(value); };\n        /** @deprecated use [[UrlConfig.defaultSquashPolicy]] */\n        this.defaultSquashPolicy = function (value) { return _this.router.urlService.config.defaultSquashPolicy(value); };\n        /** @deprecated use [[UrlConfig.strictMode]] */\n        this.strictMode = function (value) { return _this.router.urlService.config.strictMode(value); };\n        /** @deprecated use [[UrlConfig.type]] */\n        this.type = function (name, definition, definitionFn) {\n            return _this.router.urlService.config.type(name, definition, definitionFn) || _this;\n        };\n        extend(this, { UrlMatcher: UrlMatcher, Param: Param });\n    }\n    /**\n     * Creates a [[UrlMatcher]] for the specified pattern.\n     *\n     * @param pattern  The URL pattern.\n     * @param config  The config object hash.\n     * @returns The UrlMatcher.\n     */\n    UrlMatcherFactory.prototype.compile = function (pattern, config) {\n        var urlConfig = this.router.urlService.config;\n        // backward-compatible support for config.params -> config.state.params\n        var params = config && !config.state && config.params;\n        config = params ? __assign({ state: { params: params } }, config) : config;\n        var globalConfig = { strict: urlConfig._isStrictMode, caseInsensitive: urlConfig._isCaseInsensitive };\n        return new UrlMatcher(pattern, urlConfig.paramTypes, this.paramFactory, extend(globalConfig, config));\n    };\n    /**\n     * Returns true if the specified object is a [[UrlMatcher]], or false otherwise.\n     *\n     * @param object  The object to perform the type check against.\n     * @returns `true` if the object matches the `UrlMatcher` interface, by\n     *          implementing all the same methods.\n     */\n    UrlMatcherFactory.prototype.isMatcher = function (object) {\n        // TODO: typeof?\n        if (!isObject(object))\n            return false;\n        var result = true;\n        forEach(UrlMatcher.prototype, function (val, name) {\n            if (isFunction(val))\n                result = result && (isDefined(object[name]) && isFunction(object[name]));\n        });\n        return result;\n    };\n    /** @hidden */\n    UrlMatcherFactory.prototype.$get = function () {\n        var urlConfig = this.router.urlService.config;\n        urlConfig.paramTypes.enqueue = false;\n        urlConfig.paramTypes._flushTypeQueue();\n        return this;\n    };\n    return UrlMatcherFactory;\n}());\nexport { UrlMatcherFactory };\n//# sourceMappingURL=urlMatcherFactory.js.map","/** @publicapi @module url */ /** */\nimport { UrlMatcher } from './urlMatcher';\nimport { isString, isDefined, isFunction } from '../common/predicates';\nimport { identity, extend } from '../common/common';\nimport { is, pattern } from '../common/hof';\nimport { StateObject } from '../state/stateObject';\n/**\n * Creates a [[UrlRule]]\n *\n * Creates a [[UrlRule]] from a:\n *\n * - `string`\n * - [[UrlMatcher]]\n * - `RegExp`\n * - [[StateObject]]\n * @internalapi\n */\nvar UrlRuleFactory = /** @class */ (function () {\n    function UrlRuleFactory(router) {\n        this.router = router;\n    }\n    UrlRuleFactory.prototype.compile = function (str) {\n        return this.router.urlMatcherFactory.compile(str);\n    };\n    UrlRuleFactory.prototype.create = function (what, handler) {\n        var _this = this;\n        var isState = StateObject.isState;\n        var makeRule = pattern([\n            [isString, function (_what) { return makeRule(_this.compile(_what)); }],\n            [is(UrlMatcher), function (_what) { return _this.fromUrlMatcher(_what, handler); }],\n            [isState, function (_what) { return _this.fromState(_what, _this.router); }],\n            [is(RegExp), function (_what) { return _this.fromRegExp(_what, handler); }],\n            [isFunction, function (_what) { return new BaseUrlRule(_what, handler); }],\n        ]);\n        var rule = makeRule(what);\n        if (!rule)\n            throw new Error(\"invalid 'what' in when()\");\n        return rule;\n    };\n    /**\n     * A UrlRule which matches based on a UrlMatcher\n     *\n     * The `handler` may be either a `string`, a [[UrlRuleHandlerFn]] or another [[UrlMatcher]]\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - matched parameter values ([[RawParams]] from [[UrlMatcher.exec]])\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, match => \"/home/\" + match.fooId + \"/\" + match.barId);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     *\n     * ## Handler as UrlMatcher\n     *\n     * If `handler` is a UrlMatcher, the handler matcher is used to create the new url.\n     * The `handler` UrlMatcher is formatted using the matched param from the first matcher.\n     * The url is replaced with the result.\n     *\n     * #### Example:\n     * ```js\n     * var urlMatcher = $umf.compile(\"/foo/:fooId/:barId\");\n     * var handler = $umf.compile(\"/home/:fooId/:barId\");\n     * var rule = factory.fromUrlMatcher(urlMatcher, handler);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match); // '/home/123/456'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromUrlMatcher = function (urlMatcher, handler) {\n        var _handler = handler;\n        if (isString(handler))\n            handler = this.router.urlMatcherFactory.compile(handler);\n        if (is(UrlMatcher)(handler))\n            _handler = function (match) { return handler.format(match); };\n        function matchUrlParamters(url) {\n            var params = urlMatcher.exec(url.path, url.search, url.hash);\n            return urlMatcher.validates(params) && params;\n        }\n        // Prioritize URLs, lowest to highest:\n        // - Some optional URL parameters, but none matched\n        // - No optional parameters in URL\n        // - Some optional parameters, some matched\n        // - Some optional parameters, all matched\n        function matchPriority(params) {\n            var optional = urlMatcher.parameters().filter(function (param) { return param.isOptional; });\n            if (!optional.length)\n                return 0.000001;\n            var matched = optional.filter(function (param) { return params[param.id]; });\n            return matched.length / optional.length;\n        }\n        var details = { urlMatcher: urlMatcher, matchPriority: matchPriority, type: 'URLMATCHER' };\n        return extend(new BaseUrlRule(matchUrlParamters, _handler), details);\n    };\n    /**\n     * A UrlRule which matches a state by its url\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromState($state.get('foo'), router);\n     * var match = rule.match('/foo/123/456'); // results in { fooId: '123', barId: '456' }\n     * var result = rule.handler(match);\n     * // Starts a transition to 'foo' with params: { fooId: '123', barId: '456' }\n     * ```\n     */\n    UrlRuleFactory.prototype.fromState = function (state, router) {\n        /**\n         * Handles match by transitioning to matched state\n         *\n         * First checks if the router should start a new transition.\n         * A new transition is not required if the current state's URL\n         * and the new URL are already identical\n         */\n        var handler = function (match) {\n            var $state = router.stateService;\n            var globals = router.globals;\n            if ($state.href(state, match) !== $state.href(globals.current, globals.params)) {\n                $state.transitionTo(state, match, { inherit: true, source: 'url' });\n            }\n        };\n        var details = { state: state, type: 'STATE' };\n        return extend(this.fromUrlMatcher(state.url, handler), details);\n    };\n    /**\n     * A UrlRule which matches based on a regular expression\n     *\n     * The `handler` may be either a [[UrlRuleHandlerFn]] or a string.\n     *\n     * ## Handler as a function\n     *\n     * If `handler` is a function, the function is invoked with:\n     *\n     * - regexp match array (from `regexp`)\n     * - url: the current Url ([[UrlParts]])\n     * - router: the router object ([[UIRouter]])\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, match => \"/home/\" + match[1])\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     *\n     * ## Handler as string\n     *\n     * If `handler` is a string, the url is *replaced by the string* when the Rule is invoked.\n     * The string is first interpolated using `string.replace()` style pattern.\n     *\n     * #### Example:\n     * ```js\n     * var rule = factory.fromRegExp(/^\\/foo\\/(bar|baz)$/, \"/home/$1\")\n     * var match = rule.match('/foo/bar'); // results in [ '/foo/bar', 'bar' ]\n     * var result = rule.handler(match); // '/home/bar'\n     * ```\n     */\n    UrlRuleFactory.prototype.fromRegExp = function (regexp, handler) {\n        if (regexp.global || regexp.sticky)\n            throw new Error('Rule RegExp must not be global or sticky');\n        /**\n         * If handler is a string, the url will be replaced by the string.\n         * If the string has any String.replace() style variables in it (like `$2`),\n         * they will be replaced by the captures from [[match]]\n         */\n        var redirectUrlTo = function (match) {\n            // Interpolates matched values into $1 $2, etc using a String.replace()-style pattern\n            return handler.replace(/\\$(\\$|\\d{1,2})/, function (m, what) { return match[what === '$' ? 0 : Number(what)]; });\n        };\n        var _handler = isString(handler) ? redirectUrlTo : handler;\n        var matchParamsFromRegexp = function (url) { return regexp.exec(url.path); };\n        var details = { regexp: regexp, type: 'REGEXP' };\n        return extend(new BaseUrlRule(matchParamsFromRegexp, _handler), details);\n    };\n    UrlRuleFactory.isUrlRule = function (obj) { return obj && ['type', 'match', 'handler'].every(function (key) { return isDefined(obj[key]); }); };\n    return UrlRuleFactory;\n}());\nexport { UrlRuleFactory };\n/**\n * A base rule which calls `match`\n *\n * The value from the `match` function is passed through to the `handler`.\n * @internalapi\n */\nvar BaseUrlRule = /** @class */ (function () {\n    function BaseUrlRule(match, handler) {\n        var _this = this;\n        this.match = match;\n        this.type = 'RAW';\n        this.matchPriority = function (match) { return 0 - _this.$id; };\n        this.handler = handler || identity;\n    }\n    return BaseUrlRule;\n}());\nexport { BaseUrlRule };\n//# sourceMappingURL=urlRule.js.map","/** @publicapi @module url */ /** */\nimport { stripLastPathElement } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nfunction appendBasePath(url, isHtml5, absolute, baseHref) {\n    if (baseHref === '/')\n        return url;\n    if (isHtml5)\n        return stripLastPathElement(baseHref) + url;\n    if (absolute)\n        return baseHref.slice(1) + url;\n    return url;\n}\n/**\n * Updates URL and responds to URL changes\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRules]] which can be found as [[UrlService.rules]].\n *\n * @internalapi\n */\nvar UrlRouter = /** @class */ (function () {\n    /** @hidden */\n    function UrlRouter(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        // Delegate these calls to [[UrlService]]\n        /** @deprecated use [[UrlService.sync]]*/\n        this.sync = function (evt) { return _this.router.urlService.sync(evt); };\n        /** @deprecated use [[UrlService.listen]]*/\n        this.listen = function (enabled) { return _this.router.urlService.listen(enabled); };\n        /** @deprecated use [[UrlService.deferIntercept]]*/\n        this.deferIntercept = function (defer) { return _this.router.urlService.deferIntercept(defer); };\n        /** @deprecated use [[UrlService.match]]*/\n        this.match = function (urlParts) { return _this.router.urlService.match(urlParts); };\n        // Delegate these calls to [[UrlRules]]\n        /** @deprecated use [[UrlRules.initial]]*/\n        this.initial = function (handler) {\n            return _this.router.urlService.rules.initial(handler);\n        };\n        /** @deprecated use [[UrlRules.otherwise]]*/\n        this.otherwise = function (handler) {\n            return _this.router.urlService.rules.otherwise(handler);\n        };\n        /** @deprecated use [[UrlRules.removeRule]]*/\n        this.removeRule = function (rule) { return _this.router.urlService.rules.removeRule(rule); };\n        /** @deprecated use [[UrlRules.rule]]*/\n        this.rule = function (rule) { return _this.router.urlService.rules.rule(rule); };\n        /** @deprecated use [[UrlRules.rules]]*/\n        this.rules = function () { return _this.router.urlService.rules.rules(); };\n        /** @deprecated use [[UrlRules.sort]]*/\n        this.sort = function (compareFn) { return _this.router.urlService.rules.sort(compareFn); };\n        /** @deprecated use [[UrlRules.when]]*/\n        this.when = function (matcher, handler, options) { return _this.router.urlService.rules.when(matcher, handler, options); };\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /**\n     * Internal API.\n     * @internalapi\n     */\n    UrlRouter.prototype.update = function (read) {\n        var $url = this.router.locationService;\n        if (read) {\n            this.location = $url.url();\n            return;\n        }\n        if ($url.url() === this.location)\n            return;\n        $url.url(this.location, true);\n    };\n    /**\n     * Internal API.\n     *\n     * Pushes a new location to the browser history.\n     *\n     * @internalapi\n     * @param urlMatcher\n     * @param params\n     * @param options\n     */\n    UrlRouter.prototype.push = function (urlMatcher, params, options) {\n        var replace = options && !!options.replace;\n        this.router.urlService.url(urlMatcher.format(params || {}), replace);\n    };\n    /**\n     * Builds and returns a URL with interpolated parameters\n     *\n     * #### Example:\n     * ```js\n     * matcher = $umf.compile(\"/about/:person\");\n     * params = { person: \"bob\" };\n     * $bob = $urlRouter.href(matcher, params);\n     * // $bob == \"/about/bob\";\n     * ```\n     *\n     * @param urlMatcher The [[UrlMatcher]] object which is used as the template of the URL to generate.\n     * @param params An object of parameter values to fill the matcher's required parameters.\n     * @param options Options object. The options are:\n     *\n     * - **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".\n     *\n     * @returns Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`\n     */\n    UrlRouter.prototype.href = function (urlMatcher, params, options) {\n        var url = urlMatcher.format(params);\n        if (url == null)\n            return null;\n        options = options || { absolute: false };\n        var cfg = this.router.urlService.config;\n        var isHtml5 = cfg.html5Mode();\n        if (!isHtml5 && url !== null) {\n            url = '#' + cfg.hashPrefix() + url;\n        }\n        url = appendBasePath(url, isHtml5, options.absolute, cfg.baseHref());\n        if (!options.absolute || !url) {\n            return url;\n        }\n        var slash = !isHtml5 && url ? '/' : '';\n        var cfgPort = cfg.port();\n        var port = (cfgPort === 80 || cfgPort === 443 ? '' : ':' + cfgPort);\n        return [cfg.protocol(), '://', cfg.host(), port, slash, url].join('');\n    };\n    Object.defineProperty(UrlRouter.prototype, \"interceptDeferred\", {\n        /** @deprecated use [[UrlService.interceptDeferred]]*/\n        get: function () {\n            return this.router.urlService.interceptDeferred;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return UrlRouter;\n}());\nexport { UrlRouter };\n//# sourceMappingURL=urlRouter.js.map","import { TargetState } from '../state';\nimport { UrlMatcher } from './urlMatcher';\nimport { is, isDefined, isFunction, isString, removeFrom, val } from '../common';\nimport { UrlRuleFactory } from './urlRule';\n/** @hidden */\nvar prioritySort = function (a, b) { return (b.priority || 0) - (a.priority || 0); };\n/** @hidden */\nvar typeSort = function (a, b) {\n    var weights = { STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1 };\n    return (weights[a.type] || 0) - (weights[b.type] || 0);\n};\n/** @hidden */\nvar urlMatcherSort = function (a, b) {\n    return !a.urlMatcher || !b.urlMatcher ? 0 : UrlMatcher.compare(a.urlMatcher, b.urlMatcher);\n};\n/** @hidden */\nvar idSort = function (a, b) {\n    // Identically sorted STATE and URLMATCHER best rule will be chosen by `matchPriority` after each rule matches the URL\n    var useMatchPriority = { STATE: true, URLMATCHER: true };\n    var equal = useMatchPriority[a.type] && useMatchPriority[b.type];\n    return equal ? 0 : (a.$id || 0) - (b.$id || 0);\n};\n/**\n * Default rule priority sorting function.\n *\n * Sorts rules by:\n *\n * - Explicit priority (set rule priority using [[UrlRules.when]])\n * - Rule type (STATE: 4, URLMATCHER: 4, REGEXP: 3, RAW: 2, OTHER: 1)\n * - `UrlMatcher` specificity ([[UrlMatcher.compare]]): works for STATE and URLMATCHER types to pick the most specific rule.\n * - Rule registration order (for rule types other than STATE and URLMATCHER)\n *   - Equally sorted State and UrlMatcher rules will each match the URL.\n *     Then, the *best* match is chosen based on how many parameter values were matched.\n *\n * @publicapi\n */\nvar defaultRuleSortFn;\ndefaultRuleSortFn = function (a, b) {\n    var cmp = prioritySort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = typeSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    cmp = urlMatcherSort(a, b);\n    if (cmp !== 0)\n        return cmp;\n    return idSort(a, b);\n};\n/** @hidden */\nfunction getHandlerFn(handler) {\n    if (!isFunction(handler) && !isString(handler) && !is(TargetState)(handler) && !TargetState.isDef(handler)) {\n        throw new Error(\"'handler' must be a string, function, TargetState, or have a state: 'newtarget' property\");\n    }\n    return isFunction(handler) ? handler : val(handler);\n}\n/**\n * API for managing URL rules\n *\n * This API is used to create and manage URL rules.\n * URL rules are a mechanism to respond to specific URL patterns.\n *\n * The most commonly used methods are [[otherwise]] and [[when]].\n *\n * This API is a property of [[UrlService]] as [[UrlService.rules]]\n *\n * @publicapi\n */\nvar UrlRules = /** @class */ (function () {\n    /** @hidden */\n    function UrlRules(/** @hidden */ router) {\n        this.router = router;\n        /** @hidden */ this._sortFn = defaultRuleSortFn;\n        /** @hidden */ this._rules = [];\n        /** @hidden */ this._id = 0;\n        this.urlRuleFactory = new UrlRuleFactory(router);\n    }\n    /** @hidden */\n    UrlRules.prototype.dispose = function (router) {\n        this._rules = [];\n        delete this._otherwiseFn;\n    };\n    /**\n     * Defines the initial state, path, or behavior to use when the app starts.\n     *\n     * This rule defines the initial/starting state for the application.\n     *\n     * This rule is triggered the first time the URL is checked (when the app initially loads).\n     * The rule is triggered only when the url matches either `\"\"` or `\"/\"`.\n     *\n     * Note: The rule is intended to be used when the root of the application is directly linked to.\n     * When the URL is *not* `\"\"` or `\"/\"` and doesn't match other rules, the [[otherwise]] rule is triggered.\n     * This allows 404-like behavior when an unknown URL is deep-linked.\n     *\n     * #### Example:\n     * Start app at `home` state.\n     * ```js\n     * .initial({ state: 'home' });\n     * ```\n     *\n     * #### Example:\n     * Start app at `/home` (by url)\n     * ```js\n     * .initial('/home');\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .initial((matchValue, url, router) => {\n     *   console.log('initial state');\n     *   return { state: 'home' };\n     * })\n     * ```\n     *\n     * @param handler The initial state or url path, or a function which returns the state or url path (or performs custom logic).\n     */\n    UrlRules.prototype.initial = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        var matchFn = function (urlParts, router) {\n            return router.globals.transitionHistory.size() === 0 && !!/^\\/?$/.exec(urlParts.path);\n        };\n        this.rule(this.urlRuleFactory.create(matchFn, handlerFn));\n    };\n    /**\n     * Defines the state, url, or behavior to use when no other rule matches the URL.\n     *\n     * This rule is matched when *no other rule* matches.\n     * It is generally used to handle unknown URLs (similar to \"404\" behavior, but on the client side).\n     *\n     * - If `handler` a string, it is treated as a url redirect\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `/index`\n     * ```js\n     * .otherwise('/index');\n     * ```\n     *\n     * - If `handler` is an object with a `state` property, the state is activated.\n     *\n     * #### Example:\n     * When no other url rule matches, redirect to `home` and provide a `dashboard` parameter value.\n     * ```js\n     * .otherwise({ state: 'home', params: { dashboard: 'default' } });\n     * ```\n     *\n     * - If `handler` is a function, the function receives the current url ([[UrlParts]]) and the [[UIRouter]] object.\n     *   The function can perform actions, and/or return a value.\n     *\n     * #### Example:\n     * When no other url rule matches, manually trigger a transition to the `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   router.stateService.go('home');\n     * });\n     * ```\n     *\n     * #### Example:\n     * When no other url rule matches, go to `home` state\n     * ```js\n     * .otherwise((matchValue, urlParts, router) => {\n     *   return { state: 'home' };\n     * });\n     * ```\n     *\n     * @param handler The url path to redirect to, or a function which returns the url path (or performs custom logic).\n     */\n    UrlRules.prototype.otherwise = function (handler) {\n        var handlerFn = getHandlerFn(handler);\n        this._otherwiseFn = this.urlRuleFactory.create(val(true), handlerFn);\n        this._sorted = false;\n    };\n    /**\n     * Remove a rule previously registered\n     *\n     * @param rule the matcher rule that was previously registered using [[rule]]\n     */\n    UrlRules.prototype.removeRule = function (rule) {\n        removeFrom(this._rules, rule);\n    };\n    /**\n     * Manually adds a URL Rule.\n     *\n     * Usually, a url rule is added using [[StateDeclaration.url]] or [[when]].\n     * This api can be used directly for more control (to register a [[BaseUrlRule]], for example).\n     * Rules can be created using [[urlRuleFactory]], or created manually as simple objects.\n     *\n     * A rule should have a `match` function which returns truthy if the rule matched.\n     * It should also have a `handler` function which is invoked if the rule is the best match.\n     *\n     * @return a function that deregisters the rule\n     */\n    UrlRules.prototype.rule = function (rule) {\n        var _this = this;\n        if (!UrlRuleFactory.isUrlRule(rule))\n            throw new Error('invalid rule');\n        rule.$id = this._id++;\n        rule.priority = rule.priority || 0;\n        this._rules.push(rule);\n        this._sorted = false;\n        return function () { return _this.removeRule(rule); };\n    };\n    /**\n     * Gets all registered rules\n     *\n     * @returns an array of all the registered rules\n     */\n    UrlRules.prototype.rules = function () {\n        this.ensureSorted();\n        return this._rules.concat(this._otherwiseFn ? [this._otherwiseFn] : []);\n    };\n    /**\n     * Defines URL Rule priorities\n     *\n     * More than one rule ([[UrlRule]]) might match a given URL.\n     * This `compareFn` is used to sort the rules by priority.\n     * Higher priority rules should sort earlier.\n     *\n     * The [[defaultRuleSortFn]] is used by default.\n     *\n     * You only need to call this function once.\n     * The `compareFn` will be used to sort the rules as each is registered.\n     *\n     * If called without any parameter, it will re-sort the rules.\n     *\n     * ---\n     *\n     * Url rules may come from multiple sources: states's urls ([[StateDeclaration.url]]), [[when]], and [[rule]].\n     * Each rule has a (user-provided) [[UrlRule.priority]], a [[UrlRule.type]], and a [[UrlRule.$id]]\n     * The `$id` is is the order in which the rule was registered.\n     *\n     * The sort function should use these data, or data found on a specific type\n     * of [[UrlRule]] (such as [[StateRule.state]]), to order the rules as desired.\n     *\n     * #### Example:\n     * This compare function prioritizes rules by the order in which the rules were registered.\n     * A rule registered earlier has higher priority.\n     *\n     * ```js\n     * function compareFn(a, b) {\n     *   return a.$id - b.$id;\n     * }\n     * ```\n     *\n     * @param compareFn a function that compares to [[UrlRule]] objects.\n     *    The `compareFn` should abide by the `Array.sort` compare function rules.\n     *    Given two rules, `a` and `b`, return a negative number if `a` should be higher priority.\n     *    Return a positive number if `b` should be higher priority.\n     *    Return `0` if the rules are identical.\n     *\n     *    See the [mozilla reference](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Description)\n     *    for details.\n     */\n    UrlRules.prototype.sort = function (compareFn) {\n        var sorted = this.stableSort(this._rules, (this._sortFn = compareFn || this._sortFn));\n        // precompute _sortGroup values and apply to each rule\n        var group = 0;\n        for (var i = 0; i < sorted.length; i++) {\n            sorted[i]._group = group;\n            if (i < sorted.length - 1 && this._sortFn(sorted[i], sorted[i + 1]) !== 0) {\n                group++;\n            }\n        }\n        this._rules = sorted;\n        this._sorted = true;\n    };\n    /** @hidden */\n    UrlRules.prototype.ensureSorted = function () {\n        this._sorted || this.sort();\n    };\n    /** @hidden */\n    UrlRules.prototype.stableSort = function (arr, compareFn) {\n        var arrOfWrapper = arr.map(function (elem, idx) { return ({ elem: elem, idx: idx }); });\n        arrOfWrapper.sort(function (wrapperA, wrapperB) {\n            var cmpDiff = compareFn(wrapperA.elem, wrapperB.elem);\n            return cmpDiff === 0 ? wrapperA.idx - wrapperB.idx : cmpDiff;\n        });\n        return arrOfWrapper.map(function (wrapper) { return wrapper.elem; });\n    };\n    /**\n     * Registers a `matcher` and `handler` for custom URLs handling.\n     *\n     * The `matcher` can be:\n     *\n     * - a [[UrlMatcher]]: See: [[UrlMatcherFactory.compile]]\n     * - a `string`: The string is compiled to a [[UrlMatcher]]\n     * - a `RegExp`: The regexp is used to match the url.\n     *\n     * The `handler` can be:\n     *\n     * - a string: The url is redirected to the value of the string.\n     * - a function: The url is redirected to the return value of the function.\n     *\n     * ---\n     *\n     * When the `handler` is a `string` and the `matcher` is a `UrlMatcher` (or string), the redirect\n     * string is interpolated with parameter values.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(\"/foo/:param1\", \"/bar/:param1\")\n     * ```\n     *\n     * ---\n     *\n     * When the `handler` is a string and the `matcher` is a `RegExp`, the redirect string is\n     * interpolated with capture groups from the RegExp.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), \"/bar/$1\");\n     * ```\n     *\n     * ---\n     *\n     * When the handler is a function, it receives the matched value, the current URL, and the `UIRouter` object (See [[UrlRuleHandlerFn]]).\n     * The \"matched value\" differs based on the `matcher`.\n     * For [[UrlMatcher]]s, it will be the matched state params.\n     * For `RegExp`, it will be the match array from `regexp.exec()`.\n     *\n     * If the handler returns a string, the URL is redirected to the string.\n     *\n     * #### Example:\n     * When the URL is `/foo/123` the rule will redirect to `/bar/123`.\n     * ```js\n     * .when(new RegExp(\"^/foo/(.*)$\"), match => \"/bar/\" + match[1]);\n     * ```\n     *\n     * Note: the `handler` may also invoke arbitrary code, such as `$state.go()`\n     *\n     * @param matcher A pattern `string` to match, compiled as a [[UrlMatcher]], or a `RegExp`.\n     * @param handler The path to redirect to, or a function that returns the path.\n     * @param options `{ priority: number }`\n     *\n     * @return the registered [[UrlRule]]\n     */\n    UrlRules.prototype.when = function (matcher, handler, options) {\n        var rule = this.urlRuleFactory.create(matcher, handler);\n        if (isDefined(options && options.priority))\n            rule.priority = options.priority;\n        this.rule(rule);\n        return rule;\n    };\n    return UrlRules;\n}());\nexport { UrlRules };\n//# sourceMappingURL=urlRules.js.map","/** @publicapi @module view */ /** */\nimport { equals, applyPairs, removeFrom, inArray, find } from '../common/common';\nimport { curry, prop } from '../common/hof';\nimport { isString, isArray } from '../common/predicates';\nimport { trace } from '../common/trace';\n/**\n * The View service\n *\n * This service pairs existing `ui-view` components (which live in the DOM)\n * with view configs (from the state declaration objects: [[StateDeclaration.views]]).\n *\n * - After a successful Transition, the views from the newly entered states are activated via [[activateViewConfig]].\n *   The views from exited states are deactivated via [[deactivateViewConfig]].\n *   (See: the [[registerActivateViews]] Transition Hook)\n *\n * - As `ui-view` components pop in and out of existence, they register themselves using [[registerUIView]].\n *\n * - When the [[sync]] function is called, the registered `ui-view`(s) ([[ActiveUIView]])\n * are configured with the matching [[ViewConfig]](s)\n *\n */\nvar ViewService = /** @class */ (function () {\n    /** @hidden */\n    function ViewService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this._uiViews = [];\n        /** @hidden */ this._viewConfigs = [];\n        /** @hidden */ this._viewConfigFactories = {};\n        /** @hidden */ this._listeners = [];\n        /** @internalapi */\n        this._pluginapi = {\n            _rootViewContext: this._rootViewContext.bind(this),\n            _viewConfigFactory: this._viewConfigFactory.bind(this),\n            _registeredUIView: function (id) { return find(_this._uiViews, function (view) { return _this.router.$id + \".\" + view.id === id; }); },\n            _registeredUIViews: function () { return _this._uiViews; },\n            _activeViewConfigs: function () { return _this._viewConfigs; },\n            _onSync: function (listener) {\n                _this._listeners.push(listener);\n                return function () { return removeFrom(_this._listeners, listener); };\n            },\n        };\n    }\n    /**\n     * Normalizes a view's name from a state.views configuration block.\n     *\n     * This should be used by a framework implementation to calculate the values for\n     * [[_ViewDeclaration.$uiViewName]] and [[_ViewDeclaration.$uiViewContextAnchor]].\n     *\n     * @param context the context object (state declaration) that the view belongs to\n     * @param rawViewName the name of the view, as declared in the [[StateDeclaration.views]]\n     *\n     * @returns the normalized uiViewName and uiViewContextAnchor that the view targets\n     */\n    ViewService.normalizeUIViewTarget = function (context, rawViewName) {\n        if (rawViewName === void 0) { rawViewName = ''; }\n        // TODO: Validate incoming view name with a regexp to allow:\n        // ex: \"view.name@foo.bar\" , \"^.^.view.name\" , \"view.name@^.^\" , \"\" ,\n        // \"@\" , \"$default@^\" , \"!$default.$default\" , \"!foo.bar\"\n        var viewAtContext = rawViewName.split('@');\n        var uiViewName = viewAtContext[0] || '$default'; // default to unnamed view\n        var uiViewContextAnchor = isString(viewAtContext[1]) ? viewAtContext[1] : '^'; // default to parent context\n        // Handle relative view-name sugar syntax.\n        // Matches rawViewName \"^.^.^.foo.bar\" into array: [\"^.^.^.foo.bar\", \"^.^.^\", \"foo.bar\"],\n        var relativeViewNameSugar = /^(\\^(?:\\.\\^)*)\\.(.*$)/.exec(uiViewName);\n        if (relativeViewNameSugar) {\n            // Clobbers existing contextAnchor (rawViewName validation will fix this)\n            uiViewContextAnchor = relativeViewNameSugar[1]; // set anchor to \"^.^.^\"\n            uiViewName = relativeViewNameSugar[2]; // set view-name to \"foo.bar\"\n        }\n        if (uiViewName.charAt(0) === '!') {\n            uiViewName = uiViewName.substr(1);\n            uiViewContextAnchor = ''; // target absolutely from root\n        }\n        // handle parent relative targeting \"^.^.^\"\n        var relativeMatch = /^(\\^(?:\\.\\^)*)$/;\n        if (relativeMatch.exec(uiViewContextAnchor)) {\n            var anchorState = uiViewContextAnchor.split('.').reduce(function (anchor, x) { return anchor.parent; }, context);\n            uiViewContextAnchor = anchorState.name;\n        }\n        else if (uiViewContextAnchor === '.') {\n            uiViewContextAnchor = context.name;\n        }\n        return { uiViewName: uiViewName, uiViewContextAnchor: uiViewContextAnchor };\n    };\n    /** @hidden */\n    ViewService.prototype._rootViewContext = function (context) {\n        return (this._rootContext = context || this._rootContext);\n    };\n    /** @hidden */\n    ViewService.prototype._viewConfigFactory = function (viewType, factory) {\n        this._viewConfigFactories[viewType] = factory;\n    };\n    ViewService.prototype.createViewConfig = function (path, decl) {\n        var cfgFactory = this._viewConfigFactories[decl.$type];\n        if (!cfgFactory)\n            throw new Error('ViewService: No view config factory registered for type ' + decl.$type);\n        var cfgs = cfgFactory(path, decl);\n        return isArray(cfgs) ? cfgs : [cfgs];\n    };\n    /**\n     * Deactivates a ViewConfig.\n     *\n     * This function deactivates a `ViewConfig`.\n     * After calling [[sync]], it will un-pair from any `ui-view` with which it is currently paired.\n     *\n     * @param viewConfig The ViewConfig view to deregister.\n     */\n    ViewService.prototype.deactivateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('<- Removing', viewConfig);\n        removeFrom(this._viewConfigs, viewConfig);\n    };\n    ViewService.prototype.activateViewConfig = function (viewConfig) {\n        trace.traceViewServiceEvent('-> Registering', viewConfig);\n        this._viewConfigs.push(viewConfig);\n    };\n    ViewService.prototype.sync = function () {\n        var _this = this;\n        var uiViewsByFqn = this._uiViews.map(function (uiv) { return [uiv.fqn, uiv]; }).reduce(applyPairs, {});\n        // Return a weighted depth value for a uiView.\n        // The depth is the nesting depth of ui-views (based on FQN; times 10,000)\n        // plus the depth of the state that is populating the uiView\n        function uiViewDepth(uiView) {\n            var stateDepth = function (context) { return (context && context.parent ? stateDepth(context.parent) + 1 : 1); };\n            return uiView.fqn.split('.').length * 10000 + stateDepth(uiView.creationContext);\n        }\n        // Return the ViewConfig's context's depth in the context tree.\n        function viewConfigDepth(config) {\n            var context = config.viewDecl.$context, count = 0;\n            while (++count && context.parent)\n                context = context.parent;\n            return count;\n        }\n        // Given a depth function, returns a compare function which can return either ascending or descending order\n        var depthCompare = curry(function (depthFn, posNeg, left, right) { return posNeg * (depthFn(left) - depthFn(right)); });\n        var matchingConfigPair = function (uiView) {\n            var matchingConfigs = _this._viewConfigs.filter(ViewService.matches(uiViewsByFqn, uiView));\n            if (matchingConfigs.length > 1) {\n                // This is OK.  Child states can target a ui-view that the parent state also targets (the child wins)\n                // Sort by depth and return the match from the deepest child\n                // console.log(`Multiple matching view configs for ${uiView.fqn}`, matchingConfigs);\n                matchingConfigs.sort(depthCompare(viewConfigDepth, -1)); // descending\n            }\n            return { uiView: uiView, viewConfig: matchingConfigs[0] };\n        };\n        var configureUIView = function (tuple) {\n            // If a parent ui-view is reconfigured, it could destroy child ui-views.\n            // Before configuring a child ui-view, make sure it's still in the active uiViews array.\n            if (_this._uiViews.indexOf(tuple.uiView) !== -1)\n                tuple.uiView.configUpdated(tuple.viewConfig);\n        };\n        // Sort views by FQN and state depth. Process uiviews nearest the root first.\n        var uiViewTuples = this._uiViews.sort(depthCompare(uiViewDepth, 1)).map(matchingConfigPair);\n        var matchedViewConfigs = uiViewTuples.map(function (tuple) { return tuple.viewConfig; });\n        var unmatchedConfigTuples = this._viewConfigs\n            .filter(function (config) { return !inArray(matchedViewConfigs, config); })\n            .map(function (viewConfig) { return ({ uiView: undefined, viewConfig: viewConfig }); });\n        uiViewTuples.forEach(configureUIView);\n        var allTuples = uiViewTuples.concat(unmatchedConfigTuples);\n        this._listeners.forEach(function (cb) { return cb(allTuples); });\n        trace.traceViewSync(allTuples);\n    };\n    /**\n     * Registers a `ui-view` component\n     *\n     * When a `ui-view` component is created, it uses this method to register itself.\n     * After registration the [[sync]] method is used to ensure all `ui-view` are configured with the proper [[ViewConfig]].\n     *\n     * Note: the `ui-view` component uses the `ViewConfig` to determine what view should be loaded inside the `ui-view`,\n     * and what the view's state context is.\n     *\n     * Note: There is no corresponding `deregisterUIView`.\n     *       A `ui-view` should hang on to the return value of `registerUIView` and invoke it to deregister itself.\n     *\n     * @param uiView The metadata for a UIView\n     * @return a de-registration function used when the view is destroyed.\n     */\n    ViewService.prototype.registerUIView = function (uiView) {\n        trace.traceViewServiceUIViewEvent('-> Registering', uiView);\n        var uiViews = this._uiViews;\n        var fqnAndTypeMatches = function (uiv) { return uiv.fqn === uiView.fqn && uiv.$type === uiView.$type; };\n        if (uiViews.filter(fqnAndTypeMatches).length)\n            trace.traceViewServiceUIViewEvent('!!!! duplicate uiView named:', uiView);\n        uiViews.push(uiView);\n        this.sync();\n        return function () {\n            var idx = uiViews.indexOf(uiView);\n            if (idx === -1) {\n                trace.traceViewServiceUIViewEvent('Tried removing non-registered uiView', uiView);\n                return;\n            }\n            trace.traceViewServiceUIViewEvent('<- Deregistering', uiView);\n            removeFrom(uiViews)(uiView);\n        };\n    };\n    /**\n     * Returns the list of views currently available on the page, by fully-qualified name.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.available = function () {\n        return this._uiViews.map(prop('fqn'));\n    };\n    /**\n     * Returns the list of views on the page containing loaded content.\n     *\n     * @return {Array} Returns an array of fully-qualified view names.\n     */\n    ViewService.prototype.active = function () {\n        return this._uiViews.filter(prop('$config')).map(prop('name'));\n    };\n    /**\n     * Given a ui-view and a ViewConfig, determines if they \"match\".\n     *\n     * A ui-view has a fully qualified name (fqn) and a context object.  The fqn is built from its overall location in\n     * the DOM, describing its nesting relationship to any parent ui-view tags it is nested inside of.\n     *\n     * A ViewConfig has a target ui-view name and a context anchor.  The ui-view name can be a simple name, or\n     * can be a segmented ui-view path, describing a portion of a ui-view fqn.\n     *\n     * In order for a ui-view to match ViewConfig, ui-view's $type must match the ViewConfig's $type\n     *\n     * If the ViewConfig's target ui-view name is a simple name (no dots), then a ui-view matches if:\n     * - the ui-view's name matches the ViewConfig's target name\n     * - the ui-view's context matches the ViewConfig's anchor\n     *\n     * If the ViewConfig's target ui-view name is a segmented name (with dots), then a ui-view matches if:\n     * - There exists a parent ui-view where:\n     *    - the parent ui-view's name matches the first segment (index 0) of the ViewConfig's target name\n     *    - the parent ui-view's context matches the ViewConfig's anchor\n     * - And the remaining segments (index 1..n) of the ViewConfig's target name match the tail of the ui-view's fqn\n     *\n     * Example:\n     *\n     * DOM:\n     * <ui-view>                        <!-- created in the root context (name: \"\") -->\n     *   <ui-view name=\"foo\">                <!-- created in the context named: \"A\"      -->\n     *     <ui-view>                    <!-- created in the context named: \"A.B\"    -->\n     *       <ui-view name=\"bar\">            <!-- created in the context named: \"A.B.C\"  -->\n     *       </ui-view>\n     *     </ui-view>\n     *   </ui-view>\n     * </ui-view>\n     *\n     * uiViews: [\n     *  { fqn: \"$default\",                  creationContext: { name: \"\" } },\n     *  { fqn: \"$default.foo\",              creationContext: { name: \"A\" } },\n     *  { fqn: \"$default.foo.$default\",     creationContext: { name: \"A.B\" } }\n     *  { fqn: \"$default.foo.$default.bar\", creationContext: { name: \"A.B.C\" } }\n     * ]\n     *\n     * These four view configs all match the ui-view with the fqn: \"$default.foo.$default.bar\":\n     *\n     * - ViewConfig1: { uiViewName: \"bar\",                       uiViewContextAnchor: \"A.B.C\" }\n     * - ViewConfig2: { uiViewName: \"$default.bar\",              uiViewContextAnchor: \"A.B\" }\n     * - ViewConfig3: { uiViewName: \"foo.$default.bar\",          uiViewContextAnchor: \"A\" }\n     * - ViewConfig4: { uiViewName: \"$default.foo.$default.bar\", uiViewContextAnchor: \"\" }\n     *\n     * Using ViewConfig3 as an example, it matches the ui-view with fqn \"$default.foo.$default.bar\" because:\n     * - The ViewConfig's segmented target name is: [ \"foo\", \"$default\", \"bar\" ]\n     * - There exists a parent ui-view (which has fqn: \"$default.foo\") where:\n     *    - the parent ui-view's name \"foo\" matches the first segment \"foo\" of the ViewConfig's target name\n     *    - the parent ui-view's context \"A\" matches the ViewConfig's anchor context \"A\"\n     * - And the remaining segments [ \"$default\", \"bar\" ].join(\".\"_ of the ViewConfig's target name match\n     *   the tail of the ui-view's fqn \"default.bar\"\n     *\n     * @internalapi\n     */\n    ViewService.matches = function (uiViewsByFqn, uiView) { return function (viewConfig) {\n        // Don't supply an ng1 ui-view with an ng2 ViewConfig, etc\n        if (uiView.$type !== viewConfig.viewDecl.$type)\n            return false;\n        // Split names apart from both viewConfig and uiView into segments\n        var vc = viewConfig.viewDecl;\n        var vcSegments = vc.$uiViewName.split('.');\n        var uivSegments = uiView.fqn.split('.');\n        // Check if the tails of the segment arrays match. ex, these arrays' tails match:\n        // vc: [\"foo\", \"bar\"], uiv fqn: [\"$default\", \"foo\", \"bar\"]\n        if (!equals(vcSegments, uivSegments.slice(0 - vcSegments.length)))\n            return false;\n        // Now check if the fqn ending at the first segment of the viewConfig matches the context:\n        // [\"$default\", \"foo\"].join(\".\") == \"$default.foo\", does the ui-view $default.foo context match?\n        var negOffset = 1 - vcSegments.length || undefined;\n        var fqnToFirstSegment = uivSegments.slice(0, negOffset).join('.');\n        var uiViewContext = uiViewsByFqn[fqnToFirstSegment].creationContext;\n        return vc.$uiViewContextAnchor === (uiViewContext && uiViewContext.name);\n    }; };\n    return ViewService;\n}());\nexport { ViewService };\n//# sourceMappingURL=view.js.map","/** @publicapi @module core */ /** */\nimport { StateParams } from './params/stateParams';\nimport { Queue } from './common/queue';\n/**\n * Global router state\n *\n * This is where we hold the global mutable state such as current state, current\n * params, current transition, etc.\n */\nvar UIRouterGlobals = /** @class */ (function () {\n    function UIRouterGlobals() {\n        /**\n         * Current parameter values\n         *\n         * The parameter values from the latest successful transition\n         */\n        this.params = new StateParams();\n        /** @internalapi */\n        this.lastStartedTransitionId = -1;\n        /** @internalapi */\n        this.transitionHistory = new Queue([], 1);\n        /** @internalapi */\n        this.successfulTransitions = new Queue([], 1);\n    }\n    UIRouterGlobals.prototype.dispose = function () {\n        this.transitionHistory.clear();\n        this.successfulTransitions.clear();\n        this.transition = null;\n    };\n    return UIRouterGlobals;\n}());\nexport { UIRouterGlobals };\n//# sourceMappingURL=globals.js.map","import { ParamTypes } from '../params';\nimport { isDefined, isString } from '../common';\n/**\n * An API to customize the URL behavior and retrieve URL configuration\n *\n * This API is used to customize the behavior of the URL.\n * This includes optional trailing slashes ([[strictMode]]), case sensitivity ([[caseInsensitive]]),\n * and custom parameter encoding (custom [[type]]).\n *\n * It also has information about the location (url) configuration such as [[port]] and [[baseHref]].\n * This information can be used to build absolute URLs, such as\n * `https://example.com:443/basepath/state/substate?param1=a#hashvalue`;\n *\n * This API is a property of [[UrlService]] as [[UrlService.config]].\n */\nvar UrlConfig = /** @class */ (function () {\n    /** @hidden */ function UrlConfig(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.paramTypes = new ParamTypes();\n        /** @hidden */ this._isCaseInsensitive = false;\n        /** @hidden */ this._isStrictMode = true;\n        /** @hidden */ this._defaultSquashPolicy = false;\n        /** @internalapi */ this.dispose = function () { return _this.paramTypes.dispose(); };\n        // Delegate these calls to the current LocationConfig implementation\n        /**\n         * Gets the base Href, e.g., `http://localhost/approot/`\n         *\n         * @return the application's base href\n         */\n        this.baseHref = function () { return _this.router.locationConfig.baseHref(); };\n        /**\n         * Gets or sets the hashPrefix\n         *\n         * This only applies when not running in [[html5Mode]] (pushstate mode)\n         *\n         * If the current url is `http://localhost/app#!/uirouter/path/#anchor`, it returns `!` which is the prefix for the \"hashbang\" portion.\n         *\n         * @return the hash prefix\n         */\n        this.hashPrefix = function (newprefix) { return _this.router.locationConfig.hashPrefix(newprefix); };\n        /**\n         * Gets the host, e.g., `localhost`\n         *\n         * @return the protocol\n         */\n        this.host = function () { return _this.router.locationConfig.host(); };\n        /**\n         * Returns true when running in pushstate mode\n         *\n         * @return true when running in html5 mode (pushstate mode).\n         */\n        this.html5Mode = function () { return _this.router.locationConfig.html5Mode(); };\n        /**\n         * Gets the port, e.g., `80`\n         *\n         * @return the port number\n         */\n        this.port = function () { return _this.router.locationConfig.port(); };\n        /**\n         * Gets the protocol, e.g., `http`\n         *\n         * @return the protocol\n         */\n        this.protocol = function () { return _this.router.locationConfig.protocol(); };\n    }\n    /**\n     * Defines whether URL matching should be case sensitive (the default behavior), or not.\n     *\n     * #### Example:\n     * ```js\n     * // Allow case insensitive url matches\n     * urlService.config.caseInsensitive(true);\n     * ```\n     *\n     * @param value `false` to match URL in a case sensitive manner; otherwise `true`;\n     * @returns the current value of caseInsensitive\n     */\n    UrlConfig.prototype.caseInsensitive = function (value) {\n        return (this._isCaseInsensitive = isDefined(value) ? value : this._isCaseInsensitive);\n    };\n    /**\n     * Sets the default behavior when generating or matching URLs with default parameter values.\n     *\n     * #### Example:\n     * ```js\n     * // Remove default parameter values from the url\n     * urlService.config.defaultSquashPolicy(true);\n     * ```\n     *\n     * @param value A string that defines the default parameter URL squashing behavior.\n     *    - `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n     *    - `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n     *      parameter is surrounded by slashes, squash (remove) one slash from the URL\n     *    - any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n     *      the parameter value from the URL and replace it with this string.\n     * @returns the current value of defaultSquashPolicy\n     */\n    UrlConfig.prototype.defaultSquashPolicy = function (value) {\n        if (isDefined(value) && value !== true && value !== false && !isString(value))\n            throw new Error(\"Invalid squash policy: \" + value + \". Valid policies: false, true, arbitrary-string\");\n        return (this._defaultSquashPolicy = isDefined(value) ? value : this._defaultSquashPolicy);\n    };\n    /**\n     * Defines whether URLs should match trailing slashes, or not (the default behavior).\n     *\n     * #### Example:\n     * ```js\n     * // Allow optional trailing slashes\n     * urlService.config.strictMode(false);\n     * ```\n     *\n     * @param value `false` to match trailing slashes in URLs, otherwise `true`.\n     * @returns the current value of strictMode\n     */\n    UrlConfig.prototype.strictMode = function (value) {\n        return (this._isStrictMode = isDefined(value) ? value : this._isStrictMode);\n    };\n    /**\n     * Creates and registers a custom [[ParamType]] object\n     *\n     * A custom parameter type can be used to generate URLs with typed parameters or custom encoding/decoding.\n     *\n     * #### Note: Register custom types *before using them* in a state definition.\n     *\n     * #### Example:\n     * ```js\n     * // Encode object parameter as JSON string\n     * urlService.config.type('myjson', {\n     *   encode: (obj) => JSON.stringify(obj),\n     *   decode: (str) => JSON.parse(str),\n     *   is: (val) => typeof(val) === 'object',\n     *   pattern: /[^/]+/,\n     *   equals: (a, b) => _.isEqual(a, b),\n     * });\n     * ```\n     *\n     * See [[ParamTypeDefinition]] for more examples\n     *\n     * @param name The type name.\n     * @param definition The type definition. See [[ParamTypeDefinition]] for information on the values accepted.\n     * @param definitionFn A function that is injected before the app runtime starts.\n     *        The result of this function should be a [[ParamTypeDefinition]].\n     *        The result is merged into the existing `definition`.\n     *        See [[ParamType]] for information on the values accepted.\n     *\n     * @returns if only the `name` parameter was specified: the currently registered [[ParamType]] object, or undefined\n     */\n    UrlConfig.prototype.type = function (name, definition, definitionFn) {\n        var type = this.paramTypes.type(name, definition, definitionFn);\n        return !isDefined(definition) ? type : this;\n    };\n    return UrlConfig;\n}());\nexport { UrlConfig };\n//# sourceMappingURL=urlConfig.js.map","import { extend, is, isString, pattern } from '../common';\nimport { UrlRules } from './urlRules';\nimport { UrlConfig } from './urlConfig';\nimport { TargetState } from '../state';\n/** API for URL management */\nvar UrlService = /** @class */ (function () {\n    /** @hidden */\n    function UrlService(/** @hidden */ router) {\n        var _this = this;\n        this.router = router;\n        /** @hidden */ this.interceptDeferred = false;\n        /**\n         * The nested [[UrlRules]] API for managing URL rules and rewrites\n         *\n         * See: [[UrlRules]] for details\n         */\n        this.rules = new UrlRules(this.router);\n        /**\n         * The nested [[UrlConfig]] API to configure the URL and retrieve URL information\n         *\n         * See: [[UrlConfig]] for details\n         */\n        this.config = new UrlConfig(this.router);\n        // Delegate these calls to the current LocationServices implementation\n        /**\n         * Gets the current url, or updates the url\n         *\n         * ### Getting the current URL\n         *\n         * When no arguments are passed, returns the current URL.\n         * The URL is normalized using the internal [[path]]/[[search]]/[[hash]] values.\n         *\n         * For example, the URL may be stored in the hash ([[HashLocationServices]]) or\n         * have a base HREF prepended ([[PushStateLocationServices]]).\n         *\n         * The raw URL in the browser might be:\n         *\n         * ```\n         * http://mysite.com/somepath/index.html#/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * or\n         *\n         * ```\n         * http://mysite.com/basepath/internal/path/123?param1=foo#anchor\n         * ```\n         *\n         * then this method returns:\n         *\n         * ```\n         * /internal/path/123?param1=foo#anchor\n         * ```\n         *\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(); // \"/some/path?query=value#anchor\"\n         * ```\n         *\n         * ### Updating the URL\n         *\n         * When `newurl` arguments is provided, changes the URL to reflect `newurl`\n         *\n         * #### Example:\n         * ```js\n         * locationServices.url(\"/some/path?query=value#anchor\", true);\n         * ```\n         *\n         * @param newurl The new value for the URL.\n         *               This url should reflect only the new internal [[path]], [[search]], and [[hash]] values.\n         *               It should not include the protocol, site, port, or base path of an absolute HREF.\n         * @param replace When true, replaces the current history entry (instead of appending it) with this new url\n         * @param state The history's state object, i.e., pushState (if the LocationServices implementation supports it)\n         *\n         * @return the url (after potentially being processed)\n         */\n        this.url = function (newurl, replace, state) {\n            return _this.router.locationService.url(newurl, replace, state);\n        };\n        /**\n         * Gets the path part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `/some/path`\n         *\n         * @return the path portion of the url\n         */\n        this.path = function () { return _this.router.locationService.path(); };\n        /**\n         * Gets the search part of the current url as an object\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `{ query: 'value' }`\n         *\n         * @return the search (query) portion of the url, as an object\n         */\n        this.search = function () { return _this.router.locationService.search(); };\n        /**\n         * Gets the hash part of the current url\n         *\n         * If the current URL is `/some/path?query=value#anchor`, this returns `anchor`\n         *\n         * @return the hash (anchor) portion of the url\n         */\n        this.hash = function () { return _this.router.locationService.hash(); };\n        /**\n         * @internalapi\n         *\n         * Registers a low level url change handler\n         *\n         * Note: Because this is a low level handler, it's not recommended for general use.\n         *\n         * #### Example:\n         * ```js\n         * let deregisterFn = locationServices.onChange((evt) => console.log(\"url change\", evt));\n         * ```\n         *\n         * @param callback a function that will be called when the url is changing\n         * @return a function that de-registers the callback\n         */\n        this.onChange = function (callback) { return _this.router.locationService.onChange(callback); };\n    }\n    /** @hidden */\n    UrlService.prototype.dispose = function () {\n        this.listen(false);\n        this.rules.dispose();\n    };\n    /**\n     * Gets the current URL parts\n     *\n     * This method returns the different parts of the current URL (the [[path]], [[search]], and [[hash]]) as a [[UrlParts]] object.\n     */\n    UrlService.prototype.parts = function () {\n        return { path: this.path(), search: this.search(), hash: this.hash() };\n    };\n    /**\n     * Activates the best rule for the current URL\n     *\n     * Checks the current URL for a matching [[UrlRule]], then invokes that rule's handler.\n     * This method is called internally any time the URL has changed.\n     *\n     * This effectively activates the state (or redirect, etc) which matches the current URL.\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   // Find the matching URL and invoke the handler.\n     *   urlService.sync();\n     * });\n     * ```\n     */\n    UrlService.prototype.sync = function (evt) {\n        if (evt && evt.defaultPrevented)\n            return;\n        var _a = this.router, urlService = _a.urlService, stateService = _a.stateService;\n        var url = { path: urlService.path(), search: urlService.search(), hash: urlService.hash() };\n        var best = this.match(url);\n        var applyResult = pattern([\n            [isString, function (newurl) { return urlService.url(newurl, true); }],\n            [TargetState.isDef, function (def) { return stateService.go(def.state, def.params, def.options); }],\n            [is(TargetState), function (target) { return stateService.go(target.state(), target.params(), target.options()); }],\n        ]);\n        applyResult(best && best.rule.handler(best.match, url, this.router));\n    };\n    /**\n     * Starts or stops listening for URL changes\n     *\n     * Call this sometime after calling [[deferIntercept]] to start monitoring the url.\n     * This causes UI-Router to start listening for changes to the URL, if it wasn't already listening.\n     *\n     * If called with `false`, UI-Router will stop listening (call listen(true) to start listening again).\n     *\n     * #### Example:\n     * ```js\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   // Start responding to URL changes\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param enabled `true` or `false` to start or stop listening to URL changes\n     */\n    UrlService.prototype.listen = function (enabled) {\n        var _this = this;\n        if (enabled === false) {\n            this._stopListeningFn && this._stopListeningFn();\n            delete this._stopListeningFn;\n        }\n        else {\n            return (this._stopListeningFn = this._stopListeningFn || this.router.urlService.onChange(function (evt) { return _this.sync(evt); }));\n        }\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * // Prevent UI-Router from automatically intercepting URL changes when it starts;\n     * urlService.deferIntercept();\n     *\n     * fetch('/states.json').then(resp => resp.json()).then(data => {\n     *   data.forEach(state => $stateRegistry.register(state));\n     *   urlService.listen();\n     *   urlService.sync();\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlService.prototype.deferIntercept = function (defer) {\n        if (defer === undefined)\n            defer = true;\n        this.interceptDeferred = defer;\n    };\n    /**\n     * Matches a URL\n     *\n     * Given a URL (as a [[UrlParts]] object), check all rules and determine the best matching rule.\n     * Return the result as a [[MatchResult]].\n     */\n    UrlService.prototype.match = function (url) {\n        var _this = this;\n        url = extend({ path: '', search: {}, hash: '' }, url);\n        var rules = this.rules.rules();\n        // Checks a single rule. Returns { rule: rule, match: match, weight: weight } if it matched, or undefined\n        var checkRule = function (rule) {\n            var match = rule.match(url, _this.router);\n            return match && { match: match, rule: rule, weight: rule.matchPriority(match) };\n        };\n        // The rules are pre-sorted.\n        // - Find the first matching rule.\n        // - Find any other matching rule that sorted *exactly the same*, according to `.sort()`.\n        // - Choose the rule with the highest match weight.\n        var best;\n        for (var i = 0; i < rules.length; i++) {\n            // Stop when there is a 'best' rule and the next rule sorts differently than it.\n            if (best && best.rule._group !== rules[i]._group)\n                break;\n            var current = checkRule(rules[i]);\n            // Pick the best MatchResult\n            best = !best || (current && current.weight > best.weight) ? current : best;\n        }\n        return best;\n    };\n    return UrlService;\n}());\nexport { UrlService };\n//# sourceMappingURL=urlService.js.map","/** @publicapi @module core */ /** */\nimport { UrlMatcherFactory } from './url/urlMatcherFactory';\nimport { UrlRouter } from './url/urlRouter';\nimport { TransitionService } from './transition/transitionService';\nimport { ViewService } from './view/view';\nimport { StateRegistry } from './state/stateRegistry';\nimport { StateService } from './state/stateService';\nimport { UIRouterGlobals } from './globals';\nimport { values, removeFrom } from './common/common';\nimport { isFunction } from './common/predicates';\nimport { UrlService } from './url/urlService';\nimport { trace } from './common/trace';\nimport { makeStub } from './common';\n/** @hidden */\nvar _routerInstance = 0;\n/** @hidden */\nvar locSvcFns = ['url', 'path', 'search', 'hash', 'onChange'];\n/** @hidden */\nvar locCfgFns = ['port', 'protocol', 'host', 'baseHref', 'html5Mode', 'hashPrefix'];\n/** @hidden */\nvar locationServiceStub = makeStub('LocationServices', locSvcFns);\n/** @hidden */\nvar locationConfigStub = makeStub('LocationConfig', locCfgFns);\n/**\n * The master class used to instantiate an instance of UI-Router.\n *\n * UI-Router (for each specific framework) will create an instance of this class during bootstrap.\n * This class instantiates and wires the UI-Router services together.\n *\n * After a new instance of the UIRouter class is created, it should be configured for your app.\n * For instance, app states should be registered with the [[UIRouter.stateRegistry]].\n *\n * ---\n *\n * Normally the framework code will bootstrap UI-Router.\n * If you are bootstrapping UIRouter manually, tell it to monitor the URL by calling\n * [[UrlService.listen]] then [[UrlService.sync]].\n */\nvar UIRouter = /** @class */ (function () {\n    /**\n     * Creates a new `UIRouter` object\n     *\n     * @param locationService a [[LocationServices]] implementation\n     * @param locationConfig a [[LocationConfig]] implementation\n     * @internalapi\n     */\n    function UIRouter(locationService, locationConfig) {\n        if (locationService === void 0) { locationService = locationServiceStub; }\n        if (locationConfig === void 0) { locationConfig = locationConfigStub; }\n        this.locationService = locationService;\n        this.locationConfig = locationConfig;\n        /** @hidden */ this.$id = _routerInstance++;\n        /** @hidden */ this._disposed = false;\n        /** @hidden */ this._disposables = [];\n        /** Provides trace information to the console */\n        this.trace = trace;\n        /** Provides services related to ui-view synchronization */\n        this.viewService = new ViewService(this);\n        /** Global router state */\n        this.globals = new UIRouterGlobals();\n        /** Provides services related to Transitions */\n        this.transitionService = new TransitionService(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlMatcherFactory = new UrlMatcherFactory(this);\n        /**\n         * Deprecated for public use. Use [[urlService]] instead.\n         * @deprecated Use [[urlService]] instead\n         */\n        this.urlRouter = new UrlRouter(this);\n        /** Provides services related to the URL */\n        this.urlService = new UrlService(this);\n        /** Provides a registry for states, and related registration services */\n        this.stateRegistry = new StateRegistry(this);\n        /** Provides services related to states */\n        this.stateService = new StateService(this);\n        /** @hidden plugin instances are registered here */\n        this._plugins = {};\n        this.viewService._pluginapi._rootViewContext(this.stateRegistry.root());\n        this.globals.$current = this.stateRegistry.root();\n        this.globals.current = this.globals.$current.self;\n        this.disposable(this.globals);\n        this.disposable(this.stateService);\n        this.disposable(this.stateRegistry);\n        this.disposable(this.transitionService);\n        this.disposable(this.urlService);\n        this.disposable(locationService);\n        this.disposable(locationConfig);\n    }\n    /** Registers an object to be notified when the router is disposed */\n    UIRouter.prototype.disposable = function (disposable) {\n        this._disposables.push(disposable);\n    };\n    /**\n     * Disposes this router instance\n     *\n     * When called, clears resources retained by the router by calling `dispose(this)` on all\n     * registered [[disposable]] objects.\n     *\n     * Or, if a `disposable` object is provided, calls `dispose(this)` on that object only.\n     *\n     * @param disposable (optional) the disposable to dispose\n     */\n    UIRouter.prototype.dispose = function (disposable) {\n        var _this = this;\n        if (disposable && isFunction(disposable.dispose)) {\n            disposable.dispose(this);\n            return undefined;\n        }\n        this._disposed = true;\n        this._disposables.slice().forEach(function (d) {\n            try {\n                typeof d.dispose === 'function' && d.dispose(_this);\n                removeFrom(_this._disposables, d);\n            }\n            catch (ignored) { }\n        });\n    };\n    /**\n     * Adds a plugin to UI-Router\n     *\n     * This method adds a UI-Router Plugin.\n     * A plugin can enhance or change UI-Router behavior using any public API.\n     *\n     * #### Example:\n     * ```js\n     * import { MyCoolPlugin } from \"ui-router-cool-plugin\";\n     *\n     * var plugin = router.addPlugin(MyCoolPlugin);\n     * ```\n     *\n     * ### Plugin authoring\n     *\n     * A plugin is simply a class (or constructor function) which accepts a [[UIRouter]] instance and (optionally) an options object.\n     *\n     * The plugin can implement its functionality using any of the public APIs of [[UIRouter]].\n     * For example, it may configure router options or add a Transition Hook.\n     *\n     * The plugin can then be published as a separate module.\n     *\n     * #### Example:\n     * ```js\n     * export class MyAuthPlugin implements UIRouterPlugin {\n     *   constructor(router: UIRouter, options: any) {\n     *     this.name = \"MyAuthPlugin\";\n     *     let $transitions = router.transitionService;\n     *     let $state = router.stateService;\n     *\n     *     let authCriteria = {\n     *       to: (state) => state.data && state.data.requiresAuth\n     *     };\n     *\n     *     function authHook(transition: Transition) {\n     *       let authService = transition.injector().get('AuthService');\n     *       if (!authService.isAuthenticated()) {\n     *         return $state.target('login');\n     *       }\n     *     }\n     *\n     *     $transitions.onStart(authCriteria, authHook);\n     *   }\n     * }\n     * ```\n     *\n     * @param plugin one of:\n     *        - a plugin class which implements [[UIRouterPlugin]]\n     *        - a constructor function for a [[UIRouterPlugin]] which accepts a [[UIRouter]] instance\n     *        - a factory function which accepts a [[UIRouter]] instance and returns a [[UIRouterPlugin]] instance\n     * @param options options to pass to the plugin class/factory\n     * @returns the registered plugin instance\n     */\n    UIRouter.prototype.plugin = function (plugin, options) {\n        if (options === void 0) { options = {}; }\n        var pluginInstance = new plugin(this, options);\n        if (!pluginInstance.name)\n            throw new Error('Required property `name` missing on plugin: ' + pluginInstance);\n        this._disposables.push(pluginInstance);\n        return (this._plugins[pluginInstance.name] = pluginInstance);\n    };\n    UIRouter.prototype.getPlugin = function (pluginName) {\n        return pluginName ? this._plugins[pluginName] : values(this._plugins);\n    };\n    return UIRouter;\n}());\nexport { UIRouter };\n//# sourceMappingURL=router.js.map","/** @internalapi @module hooks */ /** */\nimport { Transition } from '../transition/transition';\nimport { UIRouter } from '../router';\nimport { Resolvable } from '../resolve';\nimport { inArray, uniqR, unnestR, values } from '../common';\nfunction addCoreResolvables(trans) {\n    trans.addResolvable(Resolvable.fromData(UIRouter, trans.router), '');\n    trans.addResolvable(Resolvable.fromData(Transition, trans), '');\n    trans.addResolvable(Resolvable.fromData('$transition$', trans), '');\n    trans.addResolvable(Resolvable.fromData('$stateParams', trans.params()), '');\n    trans.entering().forEach(function (state) {\n        trans.addResolvable(Resolvable.fromData('$state$', state), state);\n    });\n}\nexport var registerAddCoreResolvables = function (transitionService) {\n    return transitionService.onCreate({}, addCoreResolvables);\n};\nvar TRANSITION_TOKENS = ['$transition$', Transition];\nvar isTransition = inArray(TRANSITION_TOKENS);\n// References to Transition in the treeChanges pathnodes makes all\n// previous Transitions reachable in memory, causing a memory leak\n// This function removes resolves for '$transition$' and `Transition` from the treeChanges.\n// Do not use this on current transitions, only on old ones.\nexport var treeChangesCleanup = function (trans) {\n    var nodes = values(trans.treeChanges())\n        .reduce(unnestR, [])\n        .reduce(uniqR, []);\n    // If the resolvable is a Transition, return a new resolvable with null data\n    var replaceTransitionWithNull = function (r) {\n        return isTransition(r.token) ? Resolvable.fromData(r.token, null) : r;\n    };\n    nodes.forEach(function (node) {\n        node.resolvables = node.resolvables.map(replaceTransitionWithNull);\n    });\n};\n//# sourceMappingURL=coreResolvables.js.map","/** @internalapi @module hooks */ /** */\nimport { isString, isFunction } from '../common/predicates';\nimport { services } from '../common/coreservices';\nimport { TargetState } from '../state/targetState';\n/**\n * A [[TransitionHookFn]] that redirects to a different state or params\n *\n * Registered using `transitionService.onStart({ to: (state) => !!state.redirectTo }, redirectHook);`\n *\n * See [[StateDeclaration.redirectTo]]\n */\nvar redirectToHook = function (trans) {\n    var redirect = trans.to().redirectTo;\n    if (!redirect)\n        return;\n    var $state = trans.router.stateService;\n    function handleResult(result) {\n        if (!result)\n            return;\n        if (result instanceof TargetState)\n            return result;\n        if (isString(result))\n            return $state.target(result, trans.params(), trans.options());\n        if (result['state'] || result['params'])\n            return $state.target(result['state'] || trans.to(), result['params'] || trans.params(), trans.options());\n    }\n    if (isFunction(redirect)) {\n        return services.$q.when(redirect(trans)).then(handleResult);\n    }\n    return handleResult(redirect);\n};\nexport var registerRedirectToHook = function (transitionService) {\n    return transitionService.onStart({ to: function (state) { return !!state.redirectTo; } }, redirectToHook);\n};\n//# sourceMappingURL=redirectTo.js.map","/**\n * A factory which creates an onEnter, onExit or onRetain transition hook function\n *\n * The returned function invokes the (for instance) state.onEnter hook when the\n * state is being entered.\n *\n * @hidden\n */\nfunction makeEnterExitRetainHook(hookName) {\n    return function (transition, state) {\n        var _state = state.$$state();\n        var hookFn = _state[hookName];\n        return hookFn(transition, state);\n    };\n}\n/**\n * The [[TransitionStateHookFn]] for onExit\n *\n * When the state is being exited, the state's .onExit function is invoked.\n *\n * Registered using `transitionService.onExit({ exiting: (state) => !!state.onExit }, onExitHook);`\n *\n * See: [[IHookRegistry.onExit]]\n */\nvar onExitHook = makeEnterExitRetainHook('onExit');\nexport var registerOnExitHook = function (transitionService) {\n    return transitionService.onExit({ exiting: function (state) { return !!state.onExit; } }, onExitHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onRetain\n *\n * When the state was already entered, and is not being exited or re-entered, the state's .onRetain function is invoked.\n *\n * Registered using `transitionService.onRetain({ retained: (state) => !!state.onRetain }, onRetainHook);`\n *\n * See: [[IHookRegistry.onRetain]]\n */\nvar onRetainHook = makeEnterExitRetainHook('onRetain');\nexport var registerOnRetainHook = function (transitionService) {\n    return transitionService.onRetain({ retained: function (state) { return !!state.onRetain; } }, onRetainHook);\n};\n/**\n * The [[TransitionStateHookFn]] for onEnter\n *\n * When the state is being entered, the state's .onEnter function is invoked.\n *\n * Registered using `transitionService.onEnter({ entering: (state) => !!state.onEnter }, onEnterHook);`\n *\n * See: [[IHookRegistry.onEnter]]\n */\nvar onEnterHook = makeEnterExitRetainHook('onEnter');\nexport var registerOnEnterHook = function (transitionService) {\n    return transitionService.onEnter({ entering: function (state) { return !!state.onEnter; } }, onEnterHook);\n};\n//# sourceMappingURL=onEnterExitRetain.js.map","/** @internalapi @module hooks */ /** */\nimport { noop } from '../common/common';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { val } from '../common/hof';\nexport var RESOLVE_HOOK_PRIORITY = 1000;\n/**\n * A [[TransitionHookFn]] which resolves all EAGER Resolvables in the To Path\n *\n * Registered using `transitionService.onStart({}, eagerResolvePath, { priority: 1000 });`\n *\n * When a Transition starts, this hook resolves all the EAGER Resolvables, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar eagerResolvePath = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('EAGER', trans).then(noop);\n};\nexport var registerEagerResolvePath = function (transitionService) {\n    return transitionService.onStart({}, eagerResolvePath, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves all LAZY Resolvables for the state (and all its ancestors) in the To Path\n *\n * Registered using `transitionService.onEnter({ entering: () => true }, lazyResolveState, { priority: 1000 });`\n *\n * When a State is being entered, this hook resolves all the Resolvables for this state, which the transition then waits for.\n *\n * See [[StateDeclaration.resolve]]\n */\nvar lazyResolveState = function (trans, state) {\n    return new ResolveContext(trans.treeChanges().to)\n        .subContext(state.$$state())\n        .resolvePath('LAZY', trans)\n        .then(noop);\n};\nexport var registerLazyResolveState = function (transitionService) {\n    return transitionService.onEnter({ entering: val(true) }, lazyResolveState, { priority: RESOLVE_HOOK_PRIORITY });\n};\n/**\n * A [[TransitionHookFn]] which resolves any dynamically added (LAZY or EAGER) Resolvables.\n *\n * Registered using `transitionService.onFinish({}, eagerResolvePath, { priority: 1000 });`\n *\n * After all entering states have been entered, this hook resolves any remaining Resolvables.\n * These are typically dynamic resolves which were added by some Transition Hook using [[Transition.addResolvable]].\n *\n * See [[StateDeclaration.resolve]]\n */\nvar resolveRemaining = function (trans) {\n    return new ResolveContext(trans.treeChanges().to).resolvePath('LAZY', trans).then(noop);\n};\nexport var registerResolveRemaining = function (transitionService) {\n    return transitionService.onFinish({}, resolveRemaining, { priority: RESOLVE_HOOK_PRIORITY });\n};\n//# sourceMappingURL=resolve.js.map","/** @internalapi @module hooks */ /** */\nimport { noop } from '../common/common';\nimport { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] which waits for the views to load\n *\n * Registered using `transitionService.onStart({}, loadEnteringViews);`\n *\n * Allows the views to do async work in [[ViewConfig.load]] before the transition continues.\n * In angular 1, this includes loading the templates.\n */\nvar loadEnteringViews = function (transition) {\n    var $q = services.$q;\n    var enteringViews = transition.views('entering');\n    if (!enteringViews.length)\n        return;\n    return $q.all(enteringViews.map(function (view) { return $q.when(view.load()); })).then(noop);\n};\nexport var registerLoadEnteringViews = function (transitionService) {\n    return transitionService.onFinish({}, loadEnteringViews);\n};\n/**\n * A [[TransitionHookFn]] which activates the new views when a transition is successful.\n *\n * Registered using `transitionService.onSuccess({}, activateViews);`\n *\n * After a transition is complete, this hook deactivates the old views from the previous state,\n * and activates the new views from the destination state.\n *\n * See [[ViewService]]\n */\nvar activateViews = function (transition) {\n    var enteringViews = transition.views('entering');\n    var exitingViews = transition.views('exiting');\n    if (!enteringViews.length && !exitingViews.length)\n        return;\n    var $view = transition.router.viewService;\n    exitingViews.forEach(function (vc) { return $view.deactivateViewConfig(vc); });\n    enteringViews.forEach(function (vc) { return $view.activateViewConfig(vc); });\n    $view.sync();\n};\nexport var registerActivateViews = function (transitionService) {\n    return transitionService.onSuccess({}, activateViews);\n};\n//# sourceMappingURL=views.js.map","import { copy } from '../common/common';\n/**\n * A [[TransitionHookFn]] which updates global UI-Router state\n *\n * Registered using `transitionService.onBefore({}, updateGlobalState);`\n *\n * Before a [[Transition]] starts, updates the global value of \"the current transition\" ([[Globals.transition]]).\n * After a successful [[Transition]], updates the global values of \"the current state\"\n * ([[Globals.current]] and [[Globals.$current]]) and \"the current param values\" ([[Globals.params]]).\n *\n * See also the deprecated properties:\n * [[StateService.transition]], [[StateService.current]], [[StateService.params]]\n */\nvar updateGlobalState = function (trans) {\n    var globals = trans.router.globals;\n    var transitionSuccessful = function () {\n        globals.successfulTransitions.enqueue(trans);\n        globals.$current = trans.$to();\n        globals.current = globals.$current.self;\n        copy(trans.params(), globals.params);\n    };\n    var clearCurrentTransition = function () {\n        // Do not clear globals.transition if a different transition has started in the meantime\n        if (globals.transition === trans)\n            globals.transition = null;\n    };\n    trans.onSuccess({}, transitionSuccessful, { priority: 10000 });\n    trans.promise.then(clearCurrentTransition, clearCurrentTransition);\n};\nexport var registerUpdateGlobalState = function (transitionService) {\n    return transitionService.onCreate({}, updateGlobalState);\n};\n//# sourceMappingURL=updateGlobals.js.map","/**\n * A [[TransitionHookFn]] which updates the URL after a successful transition\n *\n * Registered using `transitionService.onSuccess({}, updateUrl);`\n */\nvar updateUrl = function (transition) {\n    var options = transition.options();\n    var $state = transition.router.stateService;\n    var $urlRouter = transition.router.urlRouter;\n    // Dont update the url in these situations:\n    // The transition was triggered by a URL sync (options.source === 'url')\n    // The user doesn't want the url to update (options.location === false)\n    // The destination state, and all parents have no navigable url\n    if (options.source !== 'url' && options.location && $state.$current.navigable) {\n        var urlOptions = { replace: options.location === 'replace' };\n        $urlRouter.push($state.$current.navigable.url, $state.params, urlOptions);\n    }\n    $urlRouter.update(true);\n};\nexport var registerUpdateUrl = function (transitionService) {\n    return transitionService.onSuccess({}, updateUrl, { priority: 9999 });\n};\n//# sourceMappingURL=url.js.map","import { services } from '../common/coreservices';\n/**\n * A [[TransitionHookFn]] that performs lazy loading\n *\n * When entering a state \"abc\" which has a `lazyLoad` function defined:\n * - Invoke the `lazyLoad` function (unless it is already in process)\n *   - Flag the hook function as \"in process\"\n *   - The function should return a promise (that resolves when lazy loading is complete)\n * - Wait for the promise to settle\n *   - If the promise resolves to a [[LazyLoadResult]], then register those states\n *   - Flag the hook function as \"not in process\"\n * - If the hook was successful\n *   - Remove the `lazyLoad` function from the state declaration\n * - If all the hooks were successful\n *   - Retry the transition (by returning a TargetState)\n *\n * ```\n * .state('abc', {\n *   component: 'fooComponent',\n *   lazyLoad: () => System.import('./fooComponent')\n *   });\n * ```\n *\n * See [[StateDeclaration.lazyLoad]]\n */\nvar lazyLoadHook = function (transition) {\n    var router = transition.router;\n    function retryTransition() {\n        if (transition.originalTransition().options().source !== 'url') {\n            // The original transition was not triggered via url sync\n            // The lazy state should be loaded now, so re-try the original transition\n            var orig = transition.targetState();\n            return router.stateService.target(orig.identifier(), orig.params(), orig.options());\n        }\n        // The original transition was triggered via url sync\n        // Run the URL rules and find the best match\n        var $url = router.urlService;\n        var result = $url.match($url.parts());\n        var rule = result && result.rule;\n        // If the best match is a state, redirect the transition (instead\n        // of calling sync() which supersedes the current transition)\n        if (rule && rule.type === 'STATE') {\n            var state = rule.state;\n            var params = result.match;\n            return router.stateService.target(state, params, transition.options());\n        }\n        // No matching state found, so let .sync() choose the best non-state match/otherwise\n        router.urlService.sync();\n    }\n    var promises = transition\n        .entering()\n        .filter(function (state) { return !!state.$$state().lazyLoad; })\n        .map(function (state) { return lazyLoadState(transition, state); });\n    return services.$q.all(promises).then(retryTransition);\n};\nexport var registerLazyLoadHook = function (transitionService) {\n    return transitionService.onBefore({ entering: function (state) { return !!state.lazyLoad; } }, lazyLoadHook);\n};\n/**\n * Invokes a state's lazy load function\n *\n * @param transition a Transition context\n * @param state the state to lazy load\n * @returns A promise for the lazy load result\n */\nexport function lazyLoadState(transition, state) {\n    var lazyLoadFn = state.$$state().lazyLoad;\n    // Store/get the lazy load promise on/from the hookfn so it doesn't get re-invoked\n    var promise = lazyLoadFn['_promise'];\n    if (!promise) {\n        var success = function (result) {\n            delete state.lazyLoad;\n            delete state.$$state().lazyLoad;\n            delete lazyLoadFn['_promise'];\n            return result;\n        };\n        var error = function (err) {\n            delete lazyLoadFn['_promise'];\n            return services.$q.reject(err);\n        };\n        promise = lazyLoadFn['_promise'] = services.$q\n            .when(lazyLoadFn(transition, state))\n            .then(updateStateRegistry)\n            .then(success, error);\n    }\n    /** Register any lazy loaded state definitions */\n    function updateStateRegistry(result) {\n        if (result && Array.isArray(result.states)) {\n            result.states.forEach(function (_state) { return transition.router.stateRegistry.register(_state); });\n        }\n        return result;\n    }\n    return promise;\n}\n//# sourceMappingURL=lazyLoad.js.map","import { TransitionHook } from './transitionHook';\n/**\n * This class defines a type of hook, such as `onBefore` or `onEnter`.\n * Plugins can define custom hook types, such as sticky states does for `onInactive`.\n *\n * @interalapi\n */\nvar TransitionEventType = /** @class */ (function () {\n    /* tslint:disable:no-inferrable-types */\n    function TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        this.name = name;\n        this.hookPhase = hookPhase;\n        this.hookOrder = hookOrder;\n        this.criteriaMatchPath = criteriaMatchPath;\n        this.reverseSort = reverseSort;\n        this.getResultHandler = getResultHandler;\n        this.getErrorHandler = getErrorHandler;\n        this.synchronous = synchronous;\n    }\n    return TransitionEventType;\n}());\nexport { TransitionEventType };\n//# sourceMappingURL=transitionEventType.js.map","/** @internalapi @module hooks */ /** */\nimport { trace } from '../common/trace';\nimport { Rejection } from '../transition/rejectFactory';\n/**\n * A [[TransitionHookFn]] that skips a transition if it should be ignored\n *\n * This hook is invoked at the end of the onBefore phase.\n *\n * If the transition should be ignored (because no parameter or states changed)\n * then the transition is ignored and not processed.\n */\nfunction ignoredHook(trans) {\n    var ignoredReason = trans._ignoredReason();\n    if (!ignoredReason)\n        return;\n    trace.traceTransitionIgnored(trans);\n    var pending = trans.router.globals.transition;\n    // The user clicked a link going back to the *current state* ('A')\n    // However, there is also a pending transition in flight (to 'B')\n    // Abort the transition to 'B' because the user now wants to be back at 'A'.\n    if (ignoredReason === 'SameAsCurrent' && pending) {\n        pending.abort();\n    }\n    return Rejection.ignored().toPromise();\n}\nexport var registerIgnoredTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, ignoredHook, { priority: -9999 });\n};\n//# sourceMappingURL=ignoredTransition.js.map","/** @internalapi @module hooks */ /** */\n/**\n * A [[TransitionHookFn]] that rejects the Transition if it is invalid\n *\n * This hook is invoked at the end of the onBefore phase.\n * If the transition is invalid (for example, param values do not validate)\n * then the transition is rejected.\n */\nfunction invalidTransitionHook(trans) {\n    if (!trans.valid()) {\n        throw new Error(trans.error().toString());\n    }\n}\nexport var registerInvalidTransitionHook = function (transitionService) {\n    return transitionService.onBefore({}, invalidTransitionHook, { priority: -10000 });\n};\n//# sourceMappingURL=invalidTransition.js.map","/** @publicapi @module transition */ /** */\nimport { TransitionHookScope, TransitionHookPhase, } from './interface';\nimport { Transition } from './transition';\nimport { makeEvent } from './hookRegistry';\nimport { registerAddCoreResolvables, treeChangesCleanup } from '../hooks/coreResolvables';\nimport { registerRedirectToHook } from '../hooks/redirectTo';\nimport { registerOnExitHook, registerOnRetainHook, registerOnEnterHook } from '../hooks/onEnterExitRetain';\nimport { registerEagerResolvePath, registerLazyResolveState, registerResolveRemaining } from '../hooks/resolve';\nimport { registerLoadEnteringViews, registerActivateViews } from '../hooks/views';\nimport { registerUpdateGlobalState } from '../hooks/updateGlobals';\nimport { registerUpdateUrl } from '../hooks/url';\nimport { registerLazyLoadHook } from '../hooks/lazyLoad';\nimport { TransitionEventType } from './transitionEventType';\nimport { TransitionHook } from './transitionHook';\nimport { isDefined } from '../common/predicates';\nimport { removeFrom, values, createProxyFunctions } from '../common/common';\nimport { val } from '../common/hof';\nimport { registerIgnoredTransitionHook } from '../hooks/ignoredTransition';\nimport { registerInvalidTransitionHook } from '../hooks/invalidTransition';\n/**\n * The default [[Transition]] options.\n *\n * Include this object when applying custom defaults:\n * let reloadOpts = { reload: true, notify: true }\n * let options = defaults(theirOpts, customDefaults, defaultOptions);\n */\nexport var defaultTransOpts = {\n    location: true,\n    relative: null,\n    inherit: false,\n    notify: true,\n    reload: false,\n    custom: {},\n    current: function () { return null; },\n    source: 'unknown',\n};\n/**\n * This class provides services related to Transitions.\n *\n * - Most importantly, it allows global Transition Hooks to be registered.\n * - It allows the default transition error handler to be set.\n * - It also has a factory function for creating new [[Transition]] objects, (used internally by the [[StateService]]).\n *\n * At bootstrap, [[UIRouter]] creates a single instance (singleton) of this class.\n */\nvar TransitionService = /** @class */ (function () {\n    /** @hidden */\n    function TransitionService(_router) {\n        /** @hidden */\n        this._transitionCount = 0;\n        /** @hidden The transition hook types, such as `onEnter`, `onStart`, etc */\n        this._eventTypes = [];\n        /** @hidden The registered transition hooks */\n        this._registeredHooks = {};\n        /** @hidden The  paths on a criteria object */\n        this._criteriaPaths = {};\n        this._router = _router;\n        this.$view = _router.viewService;\n        this._deregisterHookFns = {};\n        this._pluginapi = (createProxyFunctions(val(this), {}, val(this), [\n            '_definePathType',\n            '_defineEvent',\n            '_getPathTypes',\n            '_getEvents',\n            'getHooks',\n        ]));\n        this._defineCorePaths();\n        this._defineCoreEvents();\n        this._registerCoreTransitionHooks();\n        _router.globals.successfulTransitions.onEvict(treeChangesCleanup);\n    }\n    /**\n     * Registers a [[TransitionHookFn]], called *while a transition is being constructed*.\n     *\n     * Registers a transition lifecycle hook, which is invoked during transition construction.\n     *\n     * This low level hook should only be used by plugins.\n     * This can be a useful time for plugins to add resolves or mutate the transition as needed.\n     * The Sticky States plugin uses this hook to modify the treechanges.\n     *\n     * ### Lifecycle\n     *\n     * `onCreate` hooks are invoked *while a transition is being constructed*.\n     *\n     * ### Return value\n     *\n     * The hook's return value is ignored\n     *\n     * @internalapi\n     * @param criteria defines which Transitions the Hook should be invoked for.\n     * @param callback the hook function which will be invoked.\n     * @param options the registration options\n     * @returns a function which deregisters the hook.\n     */\n    TransitionService.prototype.onCreate = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onBefore = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onStart = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onExit = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onRetain = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onEnter = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onFinish = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onSuccess = function (criteria, callback, options) {\n        return;\n    };\n    /** @inheritdoc */\n    TransitionService.prototype.onError = function (criteria, callback, options) {\n        return;\n    };\n    /**\n     * dispose\n     * @internalapi\n     */\n    TransitionService.prototype.dispose = function (router) {\n        values(this._registeredHooks).forEach(function (hooksArray) {\n            return hooksArray.forEach(function (hook) {\n                hook._deregistered = true;\n                removeFrom(hooksArray, hook);\n            });\n        });\n    };\n    /**\n     * Creates a new [[Transition]] object\n     *\n     * This is a factory function for creating new Transition objects.\n     * It is used internally by the [[StateService]] and should generally not be called by application code.\n     *\n     * @param fromPath the path to the current state (the from state)\n     * @param targetState the target state (destination)\n     * @returns a Transition\n     */\n    TransitionService.prototype.create = function (fromPath, targetState) {\n        return new Transition(fromPath, targetState, this._router);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCoreEvents = function () {\n        var Phase = TransitionHookPhase;\n        var TH = TransitionHook;\n        var paths = this._criteriaPaths;\n        var NORMAL_SORT = false, REVERSE_SORT = true;\n        var SYNCHRONOUS = true;\n        this._defineEvent('onCreate', Phase.CREATE, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.THROW_ERROR, SYNCHRONOUS);\n        this._defineEvent('onBefore', Phase.BEFORE, 0, paths.to);\n        this._defineEvent('onStart', Phase.RUN, 0, paths.to);\n        this._defineEvent('onExit', Phase.RUN, 100, paths.exiting, REVERSE_SORT);\n        this._defineEvent('onRetain', Phase.RUN, 200, paths.retained);\n        this._defineEvent('onEnter', Phase.RUN, 300, paths.entering);\n        this._defineEvent('onFinish', Phase.RUN, 400, paths.to);\n        this._defineEvent('onSuccess', Phase.SUCCESS, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n        this._defineEvent('onError', Phase.ERROR, 0, paths.to, NORMAL_SORT, TH.LOG_REJECTED_RESULT, TH.LOG_ERROR, SYNCHRONOUS);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineCorePaths = function () {\n        var STATE = TransitionHookScope.STATE, TRANSITION = TransitionHookScope.TRANSITION;\n        this._definePathType('to', TRANSITION);\n        this._definePathType('from', TRANSITION);\n        this._definePathType('exiting', STATE);\n        this._definePathType('retained', STATE);\n        this._definePathType('entering', STATE);\n    };\n    /** @hidden */\n    TransitionService.prototype._defineEvent = function (name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous) {\n        if (reverseSort === void 0) { reverseSort = false; }\n        if (getResultHandler === void 0) { getResultHandler = TransitionHook.HANDLE_RESULT; }\n        if (getErrorHandler === void 0) { getErrorHandler = TransitionHook.REJECT_ERROR; }\n        if (synchronous === void 0) { synchronous = false; }\n        var eventType = new TransitionEventType(name, hookPhase, hookOrder, criteriaMatchPath, reverseSort, getResultHandler, getErrorHandler, synchronous);\n        this._eventTypes.push(eventType);\n        makeEvent(this, this, eventType);\n    };\n    /** @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getEvents = function (phase) {\n        var transitionHookTypes = isDefined(phase)\n            ? this._eventTypes.filter(function (type) { return type.hookPhase === phase; })\n            : this._eventTypes.slice();\n        return transitionHookTypes.sort(function (l, r) {\n            var cmpByPhase = l.hookPhase - r.hookPhase;\n            return cmpByPhase === 0 ? l.hookOrder - r.hookOrder : cmpByPhase;\n        });\n    };\n    /**\n     * Adds a Path to be used as a criterion against a TreeChanges path\n     *\n     * For example: the `exiting` path in [[HookMatchCriteria]] is a STATE scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('exiting', TransitionHookScope.STATE)`\n     * Each state in the exiting path is checked against the criteria and returned as part of the match.\n     *\n     * Another example: the `to` path in [[HookMatchCriteria]] is a TRANSITION scoped path.\n     * It was defined by calling `defineTreeChangesCriterion('to', TransitionHookScope.TRANSITION)`\n     * Only the tail of the `to` path is checked against the criteria and returned as part of the match.\n     *\n     * @hidden\n     */\n    TransitionService.prototype._definePathType = function (name, hookScope) {\n        this._criteriaPaths[name] = { name: name, scope: hookScope };\n    };\n    /** * @hidden */\n    // tslint:disable-next-line\n    TransitionService.prototype._getPathTypes = function () {\n        return this._criteriaPaths;\n    };\n    /** @hidden */\n    TransitionService.prototype.getHooks = function (hookName) {\n        return this._registeredHooks[hookName];\n    };\n    /** @hidden */\n    TransitionService.prototype._registerCoreTransitionHooks = function () {\n        var fns = this._deregisterHookFns;\n        fns.addCoreResolves = registerAddCoreResolvables(this);\n        fns.ignored = registerIgnoredTransitionHook(this);\n        fns.invalid = registerInvalidTransitionHook(this);\n        // Wire up redirectTo hook\n        fns.redirectTo = registerRedirectToHook(this);\n        // Wire up onExit/Retain/Enter state hooks\n        fns.onExit = registerOnExitHook(this);\n        fns.onRetain = registerOnRetainHook(this);\n        fns.onEnter = registerOnEnterHook(this);\n        // Wire up Resolve hooks\n        fns.eagerResolve = registerEagerResolvePath(this);\n        fns.lazyResolve = registerLazyResolveState(this);\n        fns.resolveAll = registerResolveRemaining(this);\n        // Wire up the View management hooks\n        fns.loadViews = registerLoadEnteringViews(this);\n        fns.activateViews = registerActivateViews(this);\n        // Updates global state after a transition\n        fns.updateGlobals = registerUpdateGlobalState(this);\n        // After globals.current is updated at priority: 10000\n        fns.updateUrl = registerUpdateUrl(this);\n        // Lazy load state trees\n        fns.lazyLoad = registerLazyLoadHook(this);\n    };\n    return TransitionService;\n}());\nexport { TransitionService };\n//# sourceMappingURL=transitionService.js.map","/** @publicapi @module state */ /** */\nimport { createProxyFunctions, defaults, extend, inArray, noop, removeFrom, silenceUncaughtInPromise, silentRejection, } from '../common/common';\nimport { isDefined, isObject, isString } from '../common/predicates';\nimport { Queue } from '../common/queue';\nimport { services } from '../common/coreservices';\nimport { PathUtils } from '../path/pathUtils';\nimport { PathNode } from '../path/pathNode';\nimport { defaultTransOpts } from '../transition/transitionService';\nimport { Rejection, RejectType } from '../transition/rejectFactory';\nimport { TargetState } from './targetState';\nimport { Param } from '../params/param';\nimport { Glob } from '../common/glob';\nimport { ResolveContext } from '../resolve/resolveContext';\nimport { lazyLoadState } from '../hooks/lazyLoad';\nimport { not, val } from '../common/hof';\n/**\n * Provides state related service functions\n *\n * This class provides services related to ui-router states.\n * An instance of this class is located on the global [[UIRouter]] object.\n */\nvar StateService = /** @class */ (function () {\n    /** @internalapi */\n    function StateService(/** @hidden */ router) {\n        this.router = router;\n        /** @internalapi */\n        this.invalidCallbacks = [];\n        /** @hidden */\n        this._defaultErrorHandler = function $defaultErrorHandler($error$) {\n            if ($error$ instanceof Error && $error$.stack) {\n                console.error($error$);\n                console.error($error$.stack);\n            }\n            else if ($error$ instanceof Rejection) {\n                console.error($error$.toString());\n                if ($error$.detail && $error$.detail.stack)\n                    console.error($error$.detail.stack);\n            }\n            else {\n                console.error($error$);\n            }\n        };\n        var getters = ['current', '$current', 'params', 'transition'];\n        var boundFns = Object.keys(StateService.prototype).filter(not(inArray(getters)));\n        createProxyFunctions(val(StateService.prototype), this, val(this), boundFns);\n    }\n    Object.defineProperty(StateService.prototype, \"transition\", {\n        /**\n         * The [[Transition]] currently in progress (or null)\n         *\n         * This is a passthrough through to [[UIRouterGlobals.transition]]\n         */\n        get: function () {\n            return this.router.globals.transition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"params\", {\n        /**\n         * The latest successful state parameters\n         *\n         * This is a passthrough through to [[UIRouterGlobals.params]]\n         */\n        get: function () {\n            return this.router.globals.params;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"current\", {\n        /**\n         * The current [[StateDeclaration]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.current]]\n         */\n        get: function () {\n            return this.router.globals.current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StateService.prototype, \"$current\", {\n        /**\n         * The current [[StateObject]]\n         *\n         * This is a passthrough through to [[UIRouterGlobals.$current]]\n         */\n        get: function () {\n            return this.router.globals.$current;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internalapi */\n    StateService.prototype.dispose = function () {\n        this.defaultErrorHandler(noop);\n        this.invalidCallbacks = [];\n    };\n    /**\n     * Handler for when [[transitionTo]] is called with an invalid state.\n     *\n     * Invokes the [[onInvalid]] callbacks, in natural order.\n     * Each callback's return value is checked in sequence until one of them returns an instance of TargetState.\n     * The results of the callbacks are wrapped in $q.when(), so the callbacks may return promises.\n     *\n     * If a callback returns an TargetState, then it is used as arguments to $state.transitionTo() and the result returned.\n     *\n     * @internalapi\n     */\n    StateService.prototype._handleInvalidTargetState = function (fromPath, toState) {\n        var _this = this;\n        var fromState = PathUtils.makeTargetState(this.router.stateRegistry, fromPath);\n        var globals = this.router.globals;\n        var latestThing = function () { return globals.transitionHistory.peekTail(); };\n        var latest = latestThing();\n        var callbackQueue = new Queue(this.invalidCallbacks.slice());\n        var injector = new ResolveContext(fromPath).injector();\n        var checkForRedirect = function (result) {\n            if (!(result instanceof TargetState)) {\n                return;\n            }\n            var target = result;\n            // Recreate the TargetState, in case the state is now defined.\n            target = _this.target(target.identifier(), target.params(), target.options());\n            if (!target.valid()) {\n                return Rejection.invalid(target.error()).toPromise();\n            }\n            if (latestThing() !== latest) {\n                return Rejection.superseded().toPromise();\n            }\n            return _this.transitionTo(target.identifier(), target.params(), target.options());\n        };\n        function invokeNextCallback() {\n            var nextCallback = callbackQueue.dequeue();\n            if (nextCallback === undefined)\n                return Rejection.invalid(toState.error()).toPromise();\n            var callbackResult = services.$q.when(nextCallback(toState, fromState, injector));\n            return callbackResult.then(checkForRedirect).then(function (result) { return result || invokeNextCallback(); });\n        }\n        return invokeNextCallback();\n    };\n    /**\n     * Registers an Invalid State handler\n     *\n     * Registers a [[OnInvalidCallback]] function to be invoked when [[StateService.transitionTo]]\n     * has been called with an invalid state reference parameter\n     *\n     * Example:\n     * ```js\n     * stateService.onInvalid(function(to, from, injector) {\n     *   if (to.name() === 'foo') {\n     *     let lazyLoader = injector.get('LazyLoadService');\n     *     return lazyLoader.load('foo')\n     *         .then(() => stateService.target('foo'));\n     *   }\n     * });\n     * ```\n     *\n     * @param {function} callback invoked when the toState is invalid\n     *   This function receives the (invalid) toState, the fromState, and an injector.\n     *   The function may optionally return a [[TargetState]] or a Promise for a TargetState.\n     *   If one is returned, it is treated as a redirect.\n     *\n     * @returns a function which deregisters the callback\n     */\n    StateService.prototype.onInvalid = function (callback) {\n        this.invalidCallbacks.push(callback);\n        return function deregisterListener() {\n            removeFrom(this.invalidCallbacks)(callback);\n        }.bind(this);\n    };\n    /**\n     * Reloads the current state\n     *\n     * A method that force reloads the current state, or a partial state hierarchy.\n     * All resolves are re-resolved, and components reinstantiated.\n     *\n     * #### Example:\n     * ```js\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     $state.reload();\n     *   }\n     * });\n     * ```\n     *\n     * Note: `reload()` is just an alias for:\n     *\n     * ```js\n     * $state.transitionTo($state.current, $state.params, {\n     *   reload: true, inherit: false\n     * });\n     * ```\n     *\n     * @param reloadState A state name or a state object.\n     *    If present, this state and all its children will be reloaded, but ancestors will not reload.\n     *\n     * #### Example:\n     * ```js\n     * //assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item'\n     * //and current state is 'contacts.detail.item'\n     * let app angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.reload = function(){\n     *     //will reload 'contact.detail' and nested 'contact.detail.item' states\n     *     $state.reload('contact.detail');\n     *   }\n     * });\n     * ```\n     *\n     * @returns A promise representing the state of the new transition. See [[StateService.go]]\n     */\n    StateService.prototype.reload = function (reloadState) {\n        return this.transitionTo(this.current, this.params, {\n            reload: isDefined(reloadState) ? reloadState : true,\n            inherit: false,\n            notify: false,\n        });\n    };\n    /**\n     * Transition to a different state and/or parameters\n     *\n     * Convenience method for transitioning to a new state.\n     *\n     * `$state.go` calls `$state.transitionTo` internally but automatically sets options to\n     * `{ location: true, inherit: true, relative: router.globals.$current, notify: true }`.\n     * This allows you to use either an absolute or relative `to` argument (because of `relative: router.globals.$current`).\n     * It also allows you to specify * only the parameters you'd like to update, while letting unspecified parameters\n     * inherit from the current parameter values (because of `inherit: true`).\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.go('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to Absolute state name, state object, or relative state path (relative to current state).\n     *\n     * Some examples:\n     *\n     * - `$state.go('contact.detail')` - will go to the `contact.detail` state\n     * - `$state.go('^')` - will go to the parent state\n     * - `$state.go('^.sibling')` - if current state is `home.child`, will go to the `home.sibling` state\n     * - `$state.go('.child.grandchild')` - if current state is home, will go to the `home.child.grandchild` state\n     *\n     * @param params A map of the parameters that will be sent to the state, will populate $stateParams.\n     *\n     *    Any parameters that are not specified will be inherited from current parameter values (because of `inherit: true`).\n     *    This allows, for example, going to a sibling state that shares parameters defined by a parent state.\n     *\n     * @param options Transition options\n     *\n     * @returns {promise} A promise representing the state of the new transition.\n     */\n    StateService.prototype.go = function (to, params, options) {\n        var defautGoOpts = { relative: this.$current, inherit: true };\n        var transOpts = defaults(options, defautGoOpts, defaultTransOpts);\n        return this.transitionTo(to, params, transOpts);\n    };\n    /**\n     * Creates a [[TargetState]]\n     *\n     * This is a factory method for creating a TargetState\n     *\n     * This may be returned from a Transition Hook to redirect a transition, for example.\n     */\n    StateService.prototype.target = function (identifier, params, options) {\n        if (options === void 0) { options = {}; }\n        // If we're reloading, find the state object to reload from\n        if (isObject(options.reload) && !options.reload.name)\n            throw new Error('Invalid reload state object');\n        var reg = this.router.stateRegistry;\n        options.reloadState =\n            options.reload === true ? reg.root() : reg.matcher.find(options.reload, options.relative);\n        if (options.reload && !options.reloadState)\n            throw new Error(\"No such reload state '\" + (isString(options.reload) ? options.reload : options.reload.name) + \"'\");\n        return new TargetState(this.router.stateRegistry, identifier, params, options);\n    };\n    StateService.prototype.getCurrentPath = function () {\n        var _this = this;\n        var globals = this.router.globals;\n        var latestSuccess = globals.successfulTransitions.peekTail();\n        var rootPath = function () { return [new PathNode(_this.router.stateRegistry.root())]; };\n        return latestSuccess ? latestSuccess.treeChanges().to : rootPath();\n    };\n    /**\n     * Low-level method for transitioning to a new state.\n     *\n     * The [[go]] method (which uses `transitionTo` internally) is recommended in most situations.\n     *\n     * #### Example:\n     * ```js\n     * let app = angular.module('app', ['ui.router']);\n     *\n     * app.controller('ctrl', function ($scope, $state) {\n     *   $scope.changeState = function () {\n     *     $state.transitionTo('contact.detail');\n     *   };\n     * });\n     * ```\n     *\n     * @param to State name or state object.\n     * @param toParams A map of the parameters that will be sent to the state,\n     *      will populate $stateParams.\n     * @param options Transition options\n     *\n     * @returns A promise representing the state of the new transition. See [[go]]\n     */\n    StateService.prototype.transitionTo = function (to, toParams, options) {\n        var _this = this;\n        if (toParams === void 0) { toParams = {}; }\n        if (options === void 0) { options = {}; }\n        var router = this.router;\n        var globals = router.globals;\n        options = defaults(options, defaultTransOpts);\n        var getCurrent = function () { return globals.transition; };\n        options = extend(options, { current: getCurrent });\n        var ref = this.target(to, toParams, options);\n        var currentPath = this.getCurrentPath();\n        if (!ref.exists())\n            return this._handleInvalidTargetState(currentPath, ref);\n        if (!ref.valid())\n            return silentRejection(ref.error());\n        /**\n         * Special handling for Ignored, Aborted, and Redirected transitions\n         *\n         * The semantics for the transition.run() promise and the StateService.transitionTo()\n         * promise differ. For instance, the run() promise may be rejected because it was\n         * IGNORED, but the transitionTo() promise is resolved because from the user perspective\n         * no error occurred.  Likewise, the transition.run() promise may be rejected because of\n         * a Redirect, but the transitionTo() promise is chained to the new Transition's promise.\n         */\n        var rejectedTransitionHandler = function (trans) { return function (error) {\n            if (error instanceof Rejection) {\n                var isLatest = router.globals.lastStartedTransitionId === trans.$id;\n                if (error.type === RejectType.IGNORED) {\n                    isLatest && router.urlRouter.update();\n                    // Consider ignored `Transition.run()` as a successful `transitionTo`\n                    return services.$q.when(globals.current);\n                }\n                var detail = error.detail;\n                if (error.type === RejectType.SUPERSEDED && error.redirected && detail instanceof TargetState) {\n                    // If `Transition.run()` was redirected, allow the `transitionTo()` promise to resolve successfully\n                    // by returning the promise for the new (redirect) `Transition.run()`.\n                    var redirect = trans.redirect(detail);\n                    return redirect.run().catch(rejectedTransitionHandler(redirect));\n                }\n                if (error.type === RejectType.ABORTED) {\n                    isLatest && router.urlRouter.update();\n                    return services.$q.reject(error);\n                }\n            }\n            var errorHandler = _this.defaultErrorHandler();\n            errorHandler(error);\n            return services.$q.reject(error);\n        }; };\n        var transition = this.router.transitionService.create(currentPath, ref);\n        var transitionToPromise = transition.run().catch(rejectedTransitionHandler(transition));\n        silenceUncaughtInPromise(transitionToPromise); // issue #2676\n        // Return a promise for the transition, which also has the transition object on it.\n        return extend(transitionToPromise, { transition: transition });\n    };\n    /**\n     * Checks if the current state *is* the provided state\n     *\n     * Similar to [[includes]] but only checks for the full state name.\n     * If params is supplied then it will be tested for strict equality against the current\n     * active params object, so all params must match with none missing and no extras.\n     *\n     * #### Example:\n     * ```js\n     * $state.$current.name = 'contacts.details.item';\n     *\n     * // absolute name\n     * $state.is('contact.details.item'); // returns true\n     * $state.is(contactDetailItemStateObject); // returns true\n     * ```\n     *\n     * // relative name (. and ^), typically from a template\n     * // E.g. from the 'contacts.details' template\n     * ```html\n     * <div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n     * ```\n     *\n     * @param stateOrName The state name (absolute or relative) or state object you'd like to check.\n     * @param params A param object, e.g. `{sectionId: section.id}`, that you'd like\n     * to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns Returns true if it is the state.\n     */\n    StateService.prototype.is = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return undefined;\n        if (this.$current !== state)\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Checks if the current state *includes* the provided state\n     *\n     * A method to determine if the current active state is equal to or is the child of the\n     * state stateName. If any params are passed then they will be tested for a match as well.\n     * Not all the parameters need to be passed, just the ones you'd like to test for equality.\n     *\n     * #### Example when `$state.$current.name === 'contacts.details.item'`\n     * ```js\n     * // Using partial names\n     * $state.includes(\"contacts\"); // returns true\n     * $state.includes(\"contacts.details\"); // returns true\n     * $state.includes(\"contacts.details.item\"); // returns true\n     * $state.includes(\"contacts.list\"); // returns false\n     * $state.includes(\"about\"); // returns false\n     * ```\n     *\n     * #### Glob Examples when `* $state.$current.name === 'contacts.details.item.url'`:\n     * ```js\n     * $state.includes(\"*.details.*.*\"); // returns true\n     * $state.includes(\"*.details.**\"); // returns true\n     * $state.includes(\"**.item.**\"); // returns true\n     * $state.includes(\"*.details.item.url\"); // returns true\n     * $state.includes(\"*.details.*.url\"); // returns true\n     * $state.includes(\"*.details.*\"); // returns false\n     * $state.includes(\"item.**\"); // returns false\n     * ```\n     *\n     * @param stateOrName A partial name, relative name, glob pattern,\n     *   or state object to be searched for within the current state name.\n     * @param params A param object, e.g. `{sectionId: section.id}`,\n     *   that you'd like to test against the current active state.\n     * @param options An options object. The options are:\n     *   - `relative`: If `stateOrName` is a relative state name and `options.relative` is set, .is will\n     *     test relative to `options.relative` state (or name).\n     *\n     * @returns {boolean} Returns true if it does include the state\n     */\n    StateService.prototype.includes = function (stateOrName, params, options) {\n        options = defaults(options, { relative: this.$current });\n        var glob = isString(stateOrName) && Glob.fromString(stateOrName);\n        if (glob) {\n            if (!glob.matches(this.$current.name))\n                return false;\n            stateOrName = this.$current.name;\n        }\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative), include = this.$current.includes;\n        if (!isDefined(state))\n            return undefined;\n        if (!isDefined(include[state.name]))\n            return false;\n        if (!params)\n            return true;\n        var schema = state.parameters({ inherit: true, matchingKeys: params });\n        return Param.equals(schema, Param.values(schema, params), this.params);\n    };\n    /**\n     * Generates a URL for a state and parameters\n     *\n     * Returns the url for the given state populated with the given params.\n     *\n     * #### Example:\n     * ```js\n     * expect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n     * ```\n     *\n     * @param stateOrName The state name or state object you'd like to generate a url from.\n     * @param params An object of parameter values to fill the state's required parameters.\n     * @param options Options object. The options are:\n     *\n     * @returns {string} compiled state url\n     */\n    StateService.prototype.href = function (stateOrName, params, options) {\n        var defaultHrefOpts = {\n            lossy: true,\n            inherit: true,\n            absolute: false,\n            relative: this.$current,\n        };\n        options = defaults(options, defaultHrefOpts);\n        params = params || {};\n        var state = this.router.stateRegistry.matcher.find(stateOrName, options.relative);\n        if (!isDefined(state))\n            return null;\n        if (options.inherit)\n            params = this.params.$inherit(params, this.$current, state);\n        var nav = state && options.lossy ? state.navigable : state;\n        if (!nav || nav.url === undefined || nav.url === null) {\n            return null;\n        }\n        return this.router.urlRouter.href(nav.url, params, { absolute: options.absolute });\n    };\n    /**\n     * Sets or gets the default [[transitionTo]] error handler.\n     *\n     * The error handler is called when a [[Transition]] is rejected or when any error occurred during the Transition.\n     * This includes errors caused by resolves and transition hooks.\n     *\n     * Note:\n     * This handler does not receive certain Transition rejections.\n     * Redirected and Ignored Transitions are not considered to be errors by [[StateService.transitionTo]].\n     *\n     * The built-in default error handler logs the error to the console.\n     *\n     * You can provide your own custom handler.\n     *\n     * #### Example:\n     * ```js\n     * stateService.defaultErrorHandler(function() {\n     *   // Do not log transitionTo errors\n     * });\n     * ```\n     *\n     * @param handler a global error handler function\n     * @returns the current global error handler\n     */\n    StateService.prototype.defaultErrorHandler = function (handler) {\n        return (this._defaultErrorHandler = handler || this._defaultErrorHandler);\n    };\n    StateService.prototype.get = function (stateOrName, base) {\n        var reg = this.router.stateRegistry;\n        if (arguments.length === 0)\n            return reg.get();\n        return reg.get(stateOrName, base || this.$current);\n    };\n    /**\n     * Lazy loads a state\n     *\n     * Explicitly runs a state's [[StateDeclaration.lazyLoad]] function.\n     *\n     * @param stateOrName the state that should be lazy loaded\n     * @param transition the optional Transition context to use (if the lazyLoad function requires an injector, etc)\n     * Note: If no transition is provided, a noop transition is created using the from the current state to the current state.\n     * This noop transition is not actually run.\n     *\n     * @returns a promise to lazy load\n     */\n    StateService.prototype.lazyLoad = function (stateOrName, transition) {\n        var state = this.get(stateOrName);\n        if (!state || !state.lazyLoad)\n            throw new Error('Can not lazy load ' + stateOrName);\n        var currentPath = this.getCurrentPath();\n        var target = PathUtils.makeTargetState(this.router.stateRegistry, currentPath);\n        transition = transition || this.router.transitionService.create(currentPath, target);\n        return lazyLoadState(transition, state);\n    };\n    return StateService;\n}());\nexport { StateService };\n//# sourceMappingURL=stateService.js.map","/** @internalapi @module vanilla */ /** */\nimport { isArray, isObject } from '../common/index';\n/**\n * An angular1-like promise api\n *\n * This object implements four methods similar to the\n * [angular 1 promise api](https://docs.angularjs.org/api/ng/service/$q)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This API provides native ES6 promise support wrapped as a $q-like API.\n * Internally, UI-Router uses this $q object to perform promise operations.\n * The `angular-ui-router` (ui-router for angular 1) uses the $q API provided by angular.\n *\n * $q-like promise api\n */\nexport var $q = {\n    /** Normalizes a value as a promise */\n    when: function (val) { return new Promise(function (resolve, reject) { return resolve(val); }); },\n    /** Normalizes a value as a promise rejection */\n    reject: function (val) {\n        return new Promise(function (resolve, reject) {\n            reject(val);\n        });\n    },\n    /** @returns a deferred object, which has `resolve` and `reject` functions */\n    defer: function () {\n        var deferred = {};\n        deferred.promise = new Promise(function (resolve, reject) {\n            deferred.resolve = resolve;\n            deferred.reject = reject;\n        });\n        return deferred;\n    },\n    /** Like Promise.all(), but also supports object key/promise notation like $q */\n    all: function (promises) {\n        if (isArray(promises)) {\n            return Promise.all(promises);\n        }\n        if (isObject(promises)) {\n            // Convert promises map to promises array.\n            // When each promise resolves, map it to a tuple { key: key, val: val }\n            var chain = Object.keys(promises).map(function (key) { return promises[key].then(function (val) { return ({ key: key, val: val }); }); });\n            // Then wait for all promises to resolve, and convert them back to an object\n            return $q.all(chain).then(function (values) {\n                return values.reduce(function (acc, tuple) {\n                    acc[tuple.key] = tuple.val;\n                    return acc;\n                }, {});\n            });\n        }\n    },\n};\n//# sourceMappingURL=q.js.map","/** @internalapi @module vanilla */ /** */\nimport { extend, assertPredicate, isFunction, isArray, isInjectable, } from '../common/index';\n// globally available injectables\nvar globals = {};\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n/**\n * A basic angular1-like injector api\n *\n * This object implements four methods similar to the\n * [angular 1 dependency injector](https://docs.angularjs.org/api/auto/service/$injector)\n *\n * UI-Router evolved from an angular 1 library to a framework agnostic library.\n * However, some of the `@uirouter/core` code uses these ng1 style APIs to support ng1 style dependency injection.\n *\n * This object provides a naive implementation of a globally scoped dependency injection system.\n * It supports the following DI approaches:\n *\n * ### Function parameter names\n *\n * A function's `.toString()` is called, and the parameter names are parsed.\n * This only works when the parameter names aren't \"mangled\" by a minifier such as UglifyJS.\n *\n * ```js\n * function injectedFunction(FooService, BarService) {\n *   // FooService and BarService are injected\n * }\n * ```\n *\n * ### Function annotation\n *\n * A function may be annotated with an array of dependency names as the `$inject` property.\n *\n * ```js\n * injectedFunction.$inject = [ 'FooService', 'BarService' ];\n * function injectedFunction(fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }\n * ```\n *\n * ### Array notation\n *\n * An array provides the names of the dependencies to inject (as strings).\n * The function is the last element of the array.\n *\n * ```js\n * [ 'FooService', 'BarService', function (fs, bs) {\n *   // FooService and BarService are injected as fs and bs parameters\n * }]\n * ```\n *\n * @type {$InjectorLike}\n */\nexport var $injector = {\n    /** Gets an object from DI based on a string token */\n    get: function (name) { return globals[name]; },\n    /** Returns true if an object named `name` exists in global DI */\n    has: function (name) { return $injector.get(name) != null; },\n    /**\n     * Injects a function\n     *\n     * @param fn the function to inject\n     * @param context the function's `this` binding\n     * @param locals An object with additional DI tokens and values, such as `{ someToken: { foo: 1 } }`\n     */\n    invoke: function (fn, context, locals) {\n        var all = extend({}, globals, locals || {});\n        var params = $injector.annotate(fn);\n        var ensureExist = assertPredicate(function (key) { return all.hasOwnProperty(key); }, function (key) { return \"DI can't find injectable: '\" + key + \"'\"; });\n        var args = params.filter(ensureExist).map(function (x) { return all[x]; });\n        if (isFunction(fn))\n            return fn.apply(context, args);\n        else\n            return fn.slice(-1)[0].apply(context, args);\n    },\n    /**\n     * Returns a function's dependencies\n     *\n     * Analyzes a function (or array) and returns an array of DI tokens that the function requires.\n     * @return an array of `string`s\n     */\n    annotate: function (fn) {\n        if (!isInjectable(fn))\n            throw new Error(\"Not an injectable function: \" + fn);\n        if (fn && fn.$inject)\n            return fn.$inject;\n        if (isArray(fn))\n            return fn.slice(0, -1);\n        var fnStr = fn.toString().replace(STRIP_COMMENTS, '');\n        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n        return result || [];\n    },\n};\n//# sourceMappingURL=injector.js.map","/** @internalapi @module vanilla */ /** */\nimport { identity, unnestR, isArray, splitEqual, splitHash, splitQuery, } from '../common';\nexport var keyValsToObjectR = function (accum, _a) {\n    var key = _a[0], val = _a[1];\n    if (!accum.hasOwnProperty(key)) {\n        accum[key] = val;\n    }\n    else if (isArray(accum[key])) {\n        accum[key].push(val);\n    }\n    else {\n        accum[key] = [accum[key], val];\n    }\n    return accum;\n};\nexport var getParams = function (queryString) {\n    return queryString\n        .split('&')\n        .filter(identity)\n        .map(splitEqual)\n        .reduce(keyValsToObjectR, {});\n};\nexport function parseUrl(url) {\n    var orEmptyString = function (x) { return x || ''; };\n    var _a = splitHash(url).map(orEmptyString), beforehash = _a[0], hash = _a[1];\n    var _b = splitQuery(beforehash).map(orEmptyString), path = _b[0], search = _b[1];\n    return { path: path, search: search, hash: hash, url: url };\n}\nexport var buildUrl = function (loc) {\n    var path = loc.path();\n    var searchObject = loc.search();\n    var hash = loc.hash();\n    var search = Object.keys(searchObject)\n        .map(function (key) {\n        var param = searchObject[key];\n        var vals = isArray(param) ? param : [param];\n        return vals.map(function (val) { return key + '=' + val; });\n    })\n        .reduce(unnestR, [])\n        .join('&');\n    return path + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n};\nexport function locationPluginFactory(name, isHtml5, serviceClass, configurationClass) {\n    return function (uiRouter) {\n        var service = (uiRouter.locationService = new serviceClass(uiRouter));\n        var configuration = (uiRouter.locationConfig = new configurationClass(uiRouter, isHtml5));\n        function dispose(router) {\n            router.dispose(service);\n            router.dispose(configuration);\n        }\n        return { name: name, service: service, configuration: configuration, dispose: dispose };\n    };\n}\n//# sourceMappingURL=utils.js.map","/** @internalapi @module vanilla */ /** */\nimport { deregAll, isDefined, removeFrom, root } from '../common';\nimport { buildUrl, getParams, parseUrl } from './utils';\n/** A base `LocationServices` */\nvar BaseLocationServices = /** @class */ (function () {\n    function BaseLocationServices(router, fireAfterUpdate) {\n        var _this = this;\n        this.fireAfterUpdate = fireAfterUpdate;\n        this._listeners = [];\n        this._listener = function (evt) { return _this._listeners.forEach(function (cb) { return cb(evt); }); };\n        this.hash = function () { return parseUrl(_this._get()).hash; };\n        this.path = function () { return parseUrl(_this._get()).path; };\n        this.search = function () { return getParams(parseUrl(_this._get()).search); };\n        this._location = root.location;\n        this._history = root.history;\n    }\n    BaseLocationServices.prototype.url = function (url, replace) {\n        if (replace === void 0) { replace = true; }\n        if (isDefined(url) && url !== this._get()) {\n            this._set(null, null, url, replace);\n            if (this.fireAfterUpdate) {\n                this._listeners.forEach(function (cb) { return cb({ url: url }); });\n            }\n        }\n        return buildUrl(this);\n    };\n    BaseLocationServices.prototype.onChange = function (cb) {\n        var _this = this;\n        this._listeners.push(cb);\n        return function () { return removeFrom(_this._listeners, cb); };\n    };\n    BaseLocationServices.prototype.dispose = function (router) {\n        deregAll(this._listeners);\n    };\n    return BaseLocationServices;\n}());\nexport { BaseLocationServices };\n//# sourceMappingURL=baseLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @internalapi @module vanilla */ /** */\nimport { root, trimHashVal } from '../common';\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that uses the browser hash \"#\" to get/set the current location */\nvar HashLocationService = /** @class */ (function (_super) {\n    __extends(HashLocationService, _super);\n    function HashLocationService(router) {\n        var _this = _super.call(this, router, false) || this;\n        root.addEventListener('hashchange', _this._listener, false);\n        return _this;\n    }\n    HashLocationService.prototype._get = function () {\n        return trimHashVal(this._location.hash);\n    };\n    HashLocationService.prototype._set = function (state, title, url, replace) {\n        this._location.hash = url;\n    };\n    HashLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('hashchange', this._listener);\n    };\n    return HashLocationService;\n}(BaseLocationServices));\nexport { HashLocationService };\n//# sourceMappingURL=hashLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/** @internalapi @module vanilla */ /** */\nimport { BaseLocationServices } from './baseLocationService';\n/** A `LocationServices` that gets/sets the current location from an in-memory object */\nvar MemoryLocationService = /** @class */ (function (_super) {\n    __extends(MemoryLocationService, _super);\n    function MemoryLocationService(router) {\n        return _super.call(this, router, true) || this;\n    }\n    MemoryLocationService.prototype._get = function () {\n        return this._url;\n    };\n    MemoryLocationService.prototype._set = function (state, title, url, replace) {\n        this._url = url;\n    };\n    return MemoryLocationService;\n}(BaseLocationServices));\nexport { MemoryLocationService };\n//# sourceMappingURL=memoryLocationService.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BaseLocationServices } from './baseLocationService';\nimport { root, splitHash, splitQuery, stripLastPathElement } from '../common';\n/**\n * A `LocationServices` that gets/sets the current location using the browser's `location` and `history` apis\n *\n * Uses `history.pushState` and `history.replaceState`\n */\nvar PushStateLocationService = /** @class */ (function (_super) {\n    __extends(PushStateLocationService, _super);\n    function PushStateLocationService(router) {\n        var _this = _super.call(this, router, true) || this;\n        _this._config = router.urlService.config;\n        root.addEventListener('popstate', _this._listener, false);\n        return _this;\n    }\n    /**\n     * Gets the base prefix without:\n     * - trailing slash\n     * - trailing filename\n     * - protocol and hostname\n     *\n     * If <base href='/base/'>, this returns '/base'.\n     * If <base href='/foo/base/'>, this returns '/foo/base'.\n     * If <base href='/base/index.html'>, this returns '/base'.\n     * If <base href='http://localhost:8080/base/index.html'>, this returns '/base'.\n     * If <base href='/base'>, this returns ''.\n     * If <base href='http://localhost:8080'>, this returns ''.\n     * If <base href='http://localhost:8080/'>, this returns ''.\n     *\n     * See: https://html.spec.whatwg.org/dev/semantics.html#the-base-element\n     */\n    PushStateLocationService.prototype._getBasePrefix = function () {\n        return stripLastPathElement(this._config.baseHref());\n    };\n    PushStateLocationService.prototype._get = function () {\n        var _a = this._location, pathname = _a.pathname, hash = _a.hash, search = _a.search;\n        search = splitQuery(search)[1]; // strip ? if found\n        hash = splitHash(hash)[1]; // strip # if found\n        var basePrefix = this._getBasePrefix();\n        var exactBaseHrefMatch = pathname === this._config.baseHref();\n        var startsWithBase = pathname.substr(0, basePrefix.length) === basePrefix;\n        pathname = exactBaseHrefMatch ? '/' : startsWithBase ? pathname.substring(basePrefix.length) : pathname;\n        return pathname + (search ? '?' + search : '') + (hash ? '#' + hash : '');\n    };\n    PushStateLocationService.prototype._set = function (state, title, url, replace) {\n        var basePrefix = this._getBasePrefix();\n        var slash = url && url[0] !== '/' ? '/' : '';\n        var fullUrl = url === '' || url === '/' ? this._config.baseHref() : basePrefix + slash + url;\n        if (replace) {\n            this._history.replaceState(state, title, fullUrl);\n        }\n        else {\n            this._history.pushState(state, title, fullUrl);\n        }\n    };\n    PushStateLocationService.prototype.dispose = function (router) {\n        _super.prototype.dispose.call(this, router);\n        root.removeEventListener('popstate', this._listener);\n    };\n    return PushStateLocationService;\n}(BaseLocationServices));\nexport { PushStateLocationService };\n//# sourceMappingURL=pushStateLocationService.js.map","import { isDefined } from '../common/predicates';\nimport { noop } from '../common/common';\n/** A `LocationConfig` mock that gets/sets all config from an in-memory object */\nvar MemoryLocationConfig = /** @class */ (function () {\n    function MemoryLocationConfig() {\n        var _this = this;\n        this.dispose = noop;\n        this._baseHref = '';\n        this._port = 80;\n        this._protocol = 'http';\n        this._host = 'localhost';\n        this._hashPrefix = '';\n        this.port = function () { return _this._port; };\n        this.protocol = function () { return _this._protocol; };\n        this.host = function () { return _this._host; };\n        this.baseHref = function () { return _this._baseHref; };\n        this.html5Mode = function () { return false; };\n        this.hashPrefix = function (newval) { return (isDefined(newval) ? (_this._hashPrefix = newval) : _this._hashPrefix); };\n    }\n    return MemoryLocationConfig;\n}());\nexport { MemoryLocationConfig };\n//# sourceMappingURL=memoryLocationConfig.js.map","/** @internalapi @module vanilla */\n/** */\nimport { isDefined, isUndefined } from '../common/predicates';\n/** A `LocationConfig` that delegates to the browser's `location` object */\nvar BrowserLocationConfig = /** @class */ (function () {\n    function BrowserLocationConfig(router, _isHtml5) {\n        if (_isHtml5 === void 0) { _isHtml5 = false; }\n        this._isHtml5 = _isHtml5;\n        this._baseHref = undefined;\n        this._hashPrefix = '';\n    }\n    BrowserLocationConfig.prototype.port = function () {\n        if (location.port) {\n            return Number(location.port);\n        }\n        return this.protocol() === 'https' ? 443 : 80;\n    };\n    BrowserLocationConfig.prototype.protocol = function () {\n        return location.protocol.replace(/:/g, '');\n    };\n    BrowserLocationConfig.prototype.host = function () {\n        return location.hostname;\n    };\n    BrowserLocationConfig.prototype.html5Mode = function () {\n        return this._isHtml5;\n    };\n    BrowserLocationConfig.prototype.hashPrefix = function (newprefix) {\n        return isDefined(newprefix) ? (this._hashPrefix = newprefix) : this._hashPrefix;\n    };\n    BrowserLocationConfig.prototype.baseHref = function (href) {\n        if (isDefined(href))\n            this._baseHref = href;\n        if (isUndefined(this._baseHref))\n            this._baseHref = this.getBaseHref();\n        return this._baseHref;\n    };\n    BrowserLocationConfig.prototype.getBaseHref = function () {\n        var baseTag = document.getElementsByTagName('base')[0];\n        if (baseTag && baseTag.href) {\n            return baseTag.href.replace(/^(https?:)?\\/\\/[^/]*/, '');\n        }\n        return this._isHtml5 ? '/' : location.pathname || '/';\n    };\n    BrowserLocationConfig.prototype.dispose = function () { };\n    return BrowserLocationConfig;\n}());\nexport { BrowserLocationConfig };\n//# sourceMappingURL=browserLocationConfig.js.map","/** @internalapi @module vanilla */ /** */\nimport { BrowserLocationConfig } from './browserLocationConfig';\nimport { HashLocationService } from './hashLocationService';\nimport { locationPluginFactory } from './utils';\nimport { PushStateLocationService } from './pushStateLocationService';\nimport { MemoryLocationService } from './memoryLocationService';\nimport { MemoryLocationConfig } from './memoryLocationConfig';\nimport { $injector } from './injector';\nimport { $q } from './q';\nimport { services } from '../common/coreservices';\nexport function servicesPlugin(router) {\n    services.$injector = $injector;\n    services.$q = $q;\n    return { name: 'vanilla.services', $q: $q, $injector: $injector, dispose: function () { return null; } };\n}\n/** A `UIRouterPlugin` uses the browser hash to get/set the current location */\nexport var hashLocationPlugin = locationPluginFactory('vanilla.hashBangLocation', false, HashLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location using the browser's `location` and `history` apis */\nexport var pushStateLocationPlugin = locationPluginFactory('vanilla.pushStateLocation', true, PushStateLocationService, BrowserLocationConfig);\n/** A `UIRouterPlugin` that gets/sets the current location from an in-memory object */\nexport var memoryLocationPlugin = locationPluginFactory('vanilla.memoryLocation', false, MemoryLocationService, MemoryLocationConfig);\n//# sourceMappingURL=plugins.js.map","/**\n * # Core classes and interfaces\n *\n * The classes and interfaces that are core to ui-router and do not belong\n * to a more specific subsystem (such as resolve).\n *\n * @preferred @publicapi @module core\n */ /** */\n/** @internalapi */\nvar UIRouterPluginBase = /** @class */ (function () {\n    function UIRouterPluginBase() {\n    }\n    UIRouterPluginBase.prototype.dispose = function (router) { };\n    return UIRouterPluginBase;\n}());\nexport { UIRouterPluginBase };\n//# sourceMappingURL=interface.js.map","import { pick, forEach, tail, extend, isArray, isInjectable, isDefined, isString, services, trace, ViewService, ResolveContext, Resolvable, } from '@uirouter/core';\n/** @internalapi */\nexport function getNg1ViewConfigFactory() {\n    var templateFactory = null;\n    return function (path, view) {\n        templateFactory = templateFactory || services.$injector.get('$templateFactory');\n        return [new Ng1ViewConfig(path, view, templateFactory)];\n    };\n}\n/** @internalapi */\nvar hasAnyKey = function (keys, obj) { return keys.reduce(function (acc, key) { return acc || isDefined(obj[key]); }, false); };\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `views`.\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angularjs (ng1).\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object\n * and applies the state-level configuration to a view named `$default`.\n *\n * @internalapi\n */\nexport function ng1ViewsBuilder(state) {\n    // Do not process root state\n    if (!state.parent)\n        return {};\n    var tplKeys = ['templateProvider', 'templateUrl', 'template', 'notify', 'async'], ctrlKeys = ['controller', 'controllerProvider', 'controllerAs', 'resolveAs'], compKeys = ['component', 'bindings', 'componentProvider'], nonCompKeys = tplKeys.concat(ctrlKeys), allViewKeys = compKeys.concat(nonCompKeys);\n    // Do not allow a state to have both state-level props and also a `views: {}` property.\n    // A state without a `views: {}` property can declare properties for the `$default` view as properties of the state.\n    // However, the `$default` approach should not be mixed with a separate `views: ` block.\n    if (isDefined(state.views) && hasAnyKey(allViewKeys, state)) {\n        throw new Error(\"State '\" + state.name + \"' has a 'views' object. \" +\n            \"It cannot also have \\\"view properties\\\" at the state level.  \" +\n            \"Move the following properties into a view (in the 'views' object): \" +\n            (\" \" + allViewKeys.filter(function (key) { return isDefined(state[key]); }).join(', ')));\n    }\n    var views = {}, viewsObject = state.views || { $default: pick(state, allViewKeys) };\n    forEach(viewsObject, function (config, name) {\n        // Account for views: { \"\": { template... } }\n        name = name || '$default';\n        // Account for views: { header: \"headerComponent\" }\n        if (isString(config))\n            config = { component: config };\n        // Make a shallow copy of the config object\n        config = extend({}, config);\n        // Do not allow a view to mix props for component-style view with props for template/controller-style view\n        if (hasAnyKey(compKeys, config) && hasAnyKey(nonCompKeys, config)) {\n            throw new Error(\"Cannot combine: \" + compKeys.join('|') + \" with: \" + nonCompKeys.join('|') + \" in stateview: '\" + name + \"@\" + state.name + \"'\");\n        }\n        config.resolveAs = config.resolveAs || '$resolve';\n        config.$type = 'ng1';\n        config.$context = state;\n        config.$name = name;\n        var normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n        config.$uiViewName = normalized.uiViewName;\n        config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n        views[name] = config;\n    });\n    return views;\n}\n/** @hidden */\nvar id = 0;\n/** @internalapi */\nvar Ng1ViewConfig = /** @class */ (function () {\n    function Ng1ViewConfig(path, viewDecl, factory) {\n        var _this = this;\n        this.path = path;\n        this.viewDecl = viewDecl;\n        this.factory = factory;\n        this.$id = id++;\n        this.loaded = false;\n        this.getTemplate = function (uiView, context) {\n            return _this.component\n                ? _this.factory.makeComponentTemplate(uiView, context, _this.component, _this.viewDecl.bindings)\n                : _this.template;\n        };\n    }\n    Ng1ViewConfig.prototype.load = function () {\n        var _this = this;\n        var $q = services.$q;\n        var context = new ResolveContext(this.path);\n        var params = this.path.reduce(function (acc, node) { return extend(acc, node.paramValues); }, {});\n        var promises = {\n            template: $q.when(this.factory.fromConfig(this.viewDecl, params, context)),\n            controller: $q.when(this.getController(context)),\n        };\n        return $q.all(promises).then(function (results) {\n            trace.traceViewServiceEvent('Loaded', _this);\n            _this.controller = results.controller;\n            extend(_this, results.template); // Either { template: \"tpl\" } or { component: \"cmpName\" }\n            return _this;\n        });\n    };\n    /**\n     * Gets the controller for a view configuration.\n     *\n     * @returns {Function|Promise.<Function>} Returns a controller, or a promise that resolves to a controller.\n     */\n    Ng1ViewConfig.prototype.getController = function (context) {\n        var provider = this.viewDecl.controllerProvider;\n        if (!isInjectable(provider))\n            return this.viewDecl.controller;\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    return Ng1ViewConfig;\n}());\nexport { Ng1ViewConfig };\n//# sourceMappingURL=views.js.map","/** @publicapi @module view */ /** */\nimport { ng as angular } from './angular';\nimport { isArray, isDefined, isFunction, isObject, services, tail, kebobString, unnestR, Resolvable, } from '@uirouter/core';\n/**\n * Service which manages loading of templates from a ViewConfig.\n */\nvar TemplateFactory = /** @class */ (function () {\n    function TemplateFactory() {\n        var _this = this;\n        /** @hidden */ this._useHttp = angular.version.minor < 3;\n        /** @hidden */ this.$get = [\n            '$http',\n            '$templateCache',\n            '$injector',\n            function ($http, $templateCache, $injector) {\n                _this.$templateRequest = $injector.has && $injector.has('$templateRequest') && $injector.get('$templateRequest');\n                _this.$http = $http;\n                _this.$templateCache = $templateCache;\n                return _this;\n            },\n        ];\n    }\n    /** @hidden */\n    TemplateFactory.prototype.useHttpService = function (value) {\n        this._useHttp = value;\n    };\n    /**\n     * Creates a template from a configuration object.\n     *\n     * @param config Configuration object for which to load a template.\n     * The following properties are search in the specified order, and the first one\n     * that is defined is used to create the template:\n     *\n     * @param params  Parameters to pass to the template function.\n     * @param context The resolve context associated with the template's view\n     *\n     * @return {string|object}  The template html as a string, or a promise for\n     * that string,or `null` if no template is configured.\n     */\n    TemplateFactory.prototype.fromConfig = function (config, params, context) {\n        var defaultTemplate = '<ui-view></ui-view>';\n        var asTemplate = function (result) { return services.$q.when(result).then(function (str) { return ({ template: str }); }); };\n        var asComponent = function (result) { return services.$q.when(result).then(function (str) { return ({ component: str }); }); };\n        return isDefined(config.template)\n            ? asTemplate(this.fromString(config.template, params))\n            : isDefined(config.templateUrl)\n                ? asTemplate(this.fromUrl(config.templateUrl, params))\n                : isDefined(config.templateProvider)\n                    ? asTemplate(this.fromProvider(config.templateProvider, params, context))\n                    : isDefined(config.component)\n                        ? asComponent(config.component)\n                        : isDefined(config.componentProvider)\n                            ? asComponent(this.fromComponentProvider(config.componentProvider, params, context))\n                            : asTemplate(defaultTemplate);\n    };\n    /**\n     * Creates a template from a string or a function returning a string.\n     *\n     * @param template html template as a string or function that returns an html template as a string.\n     * @param params Parameters to pass to the template function.\n     *\n     * @return {string|object} The template html as a string, or a promise for that\n     * string.\n     */\n    TemplateFactory.prototype.fromString = function (template, params) {\n        return isFunction(template) ? template(params) : template;\n    };\n    /**\n     * Loads a template from the a URL via `$http` and `$templateCache`.\n     *\n     * @param {string|Function} url url of the template to load, or a function\n     * that returns a url.\n     * @param {Object} params Parameters to pass to the url function.\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromUrl = function (url, params) {\n        if (isFunction(url))\n            url = url(params);\n        if (url == null)\n            return null;\n        if (this._useHttp) {\n            return this.$http\n                .get(url, { cache: this.$templateCache, headers: { Accept: 'text/html' } })\n                .then(function (response) {\n                return response.data;\n            });\n        }\n        return this.$templateRequest(url);\n    };\n    /**\n     * Creates a template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string|Promise.<string>} The template html as a string, or a promise\n     * for that string.\n     */\n    TemplateFactory.prototype.fromProvider = function (provider, params, context) {\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    /**\n     * Creates a component's template by invoking an injectable provider function.\n     *\n     * @param provider Function to invoke via `locals`\n     * @param {Function} injectFn a function used to invoke the template provider\n     * @return {string} The template html as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.fromComponentProvider = function (provider, params, context) {\n        var deps = services.$injector.annotate(provider);\n        var providerFn = isArray(provider) ? tail(provider) : provider;\n        var resolvable = new Resolvable('', providerFn, deps);\n        return resolvable.get(context);\n    };\n    /**\n     * Creates a template from a component's name\n     *\n     * This implements route-to-component.\n     * It works by retrieving the component (directive) metadata from the injector.\n     * It analyses the component's bindings, then constructs a template that instantiates the component.\n     * The template wires input and output bindings to resolves or from the parent component.\n     *\n     * @param uiView {object} The parent ui-view (for binding outputs to callbacks)\n     * @param context The ResolveContext (for binding outputs to callbacks returned from resolves)\n     * @param component {string} Component's name in camel case.\n     * @param bindings An object defining the component's bindings: {foo: '<'}\n     * @return {string} The template as a string: \"<component-name input1='::$resolve.foo'></component-name>\".\n     */\n    TemplateFactory.prototype.makeComponentTemplate = function (uiView, context, component, bindings) {\n        bindings = bindings || {};\n        // Bind once prefix\n        var prefix = angular.version.minor >= 3 ? '::' : '';\n        // Convert to kebob name. Add x- prefix if the string starts with `x-` or `data-`\n        var kebob = function (camelCase) {\n            var kebobed = kebobString(camelCase);\n            return /^(x|data)-/.exec(kebobed) ? \"x-\" + kebobed : kebobed;\n        };\n        var attributeTpl = function (input) {\n            var name = input.name, type = input.type;\n            var attrName = kebob(name);\n            // If the ui-view has an attribute which matches a binding on the routed component\n            // then pass that attribute through to the routed component template.\n            // Prefer ui-view wired mappings to resolve data, unless the resolve was explicitly bound using `bindings:`\n            if (uiView.attr(attrName) && !bindings[name])\n                return attrName + \"='\" + uiView.attr(attrName) + \"'\";\n            var resolveName = bindings[name] || name;\n            // Pre-evaluate the expression for \"@\" bindings by enclosing in {{ }}\n            // some-attr=\"{{ ::$resolve.someResolveName }}\"\n            if (type === '@')\n                return attrName + \"='{{\" + prefix + \"$resolve.\" + resolveName + \"}}'\";\n            // Wire \"&\" callbacks to resolves that return a callback function\n            // Get the result of the resolve (should be a function) and annotate it to get its arguments.\n            // some-attr=\"$resolve.someResolveResultName(foo, bar)\"\n            if (type === '&') {\n                var res = context.getResolvable(resolveName);\n                var fn = res && res.data;\n                var args = (fn && services.$injector.annotate(fn)) || [];\n                // account for array style injection, i.e., ['foo', function(foo) {}]\n                var arrayIdxStr = isArray(fn) ? \"[\" + (fn.length - 1) + \"]\" : '';\n                return attrName + \"='$resolve.\" + resolveName + arrayIdxStr + \"(\" + args.join(',') + \")'\";\n            }\n            // some-attr=\"::$resolve.someResolveName\"\n            return attrName + \"='\" + prefix + \"$resolve.\" + resolveName + \"'\";\n        };\n        var attrs = getComponentBindings(component)\n            .map(attributeTpl)\n            .join(' ');\n        var kebobName = kebob(component);\n        return \"<\" + kebobName + \" \" + attrs + \"></\" + kebobName + \">\";\n    };\n    return TemplateFactory;\n}());\nexport { TemplateFactory };\n// Gets all the directive(s)' inputs ('@', '=', and '<') and outputs ('&')\nfunction getComponentBindings(name) {\n    var cmpDefs = services.$injector.get(name + 'Directive'); // could be multiple\n    if (!cmpDefs || !cmpDefs.length)\n        throw new Error(\"Unable to find component named '\" + name + \"'\");\n    return cmpDefs.map(getBindings).reduce(unnestR, []);\n}\n// Given a directive definition, find its object input attributes\n// Use different properties, depending on the type of directive (component, bindToController, normal)\nvar getBindings = function (def) {\n    if (isObject(def.bindToController))\n        return scopeBindings(def.bindToController);\n    return scopeBindings(def.scope);\n};\n// for ng 1.2 style, process the scope: { input: \"=foo\" }\n// for ng 1.3 through ng 1.5, process the component's bindToController: { input: \"=foo\" } object\nvar scopeBindings = function (bindingsObj) {\n    return Object.keys(bindingsObj || {})\n        // [ 'input', [ '=foo', '=', 'foo' ] ]\n        .map(function (key) { return [key, /^([=<@&])[?]?(.*)/.exec(bindingsObj[key])]; })\n        // skip malformed values\n        .filter(function (tuple) { return isDefined(tuple) && isArray(tuple[1]); })\n        // { name: ('foo' || 'input'), type: '=' }\n        .map(function (tuple) { return ({ name: tuple[1][2] || tuple[0], type: tuple[1][1] }); });\n};\n//# sourceMappingURL=templateFactory.js.map","/** @publicapi @module ng1 */ /** */\nimport { val, isObject, createProxyFunctions, } from '@uirouter/core';\n/**\n * The Angular 1 `StateProvider`\n *\n * The `$stateProvider` works similar to Angular's v1 router, but it focuses purely\n * on state.\n *\n * A state corresponds to a \"place\" in the application in terms of the overall UI and\n * navigation. A state describes (via the controller / template / view properties) what\n * the UI looks like and does at that place.\n *\n * States often have things in common, and the primary way of factoring out these\n * commonalities in this model is via the state hierarchy, i.e. parent/child states aka\n * nested states.\n *\n * The `$stateProvider` provides interfaces to declare these states for your app.\n */\nvar StateProvider = /** @class */ (function () {\n    function StateProvider(stateRegistry, stateService) {\n        this.stateRegistry = stateRegistry;\n        this.stateService = stateService;\n        createProxyFunctions(val(StateProvider.prototype), this, val(this));\n    }\n    /**\n     * Decorates states when they are registered\n     *\n     * Allows you to extend (carefully) or override (at your own peril) the\n     * `stateBuilder` object used internally by [[StateRegistry]].\n     * This can be used to add custom functionality to ui-router,\n     * for example inferring templateUrl based on the state name.\n     *\n     * When passing only a name, it returns the current (original or decorated) builder\n     * function that matches `name`.\n     *\n     * The builder functions that can be decorated are listed below. Though not all\n     * necessarily have a good use case for decoration, that is up to you to decide.\n     *\n     * In addition, users can attach custom decorators, which will generate new\n     * properties within the state's internal definition. There is currently no clear\n     * use-case for this beyond accessing internal states (i.e. $state.$current),\n     * however, expect this to become increasingly relevant as we introduce additional\n     * meta-programming features.\n     *\n     * **Warning**: Decorators should not be interdependent because the order of\n     * execution of the builder functions in non-deterministic. Builder functions\n     * should only be dependent on the state definition object and super function.\n     *\n     *\n     * Existing builder functions and current return values:\n     *\n     * - **parent** `{object}` - returns the parent state object.\n     * - **data** `{object}` - returns state data, including any inherited data that is not\n     *   overridden by own values (if any).\n     * - **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n     *   or `null`.\n     * - **navigable** `{object}` - returns closest ancestor state that has a URL (aka is\n     *   navigable).\n     * - **params** `{object}` - returns an array of state params that are ensured to\n     *   be a super-set of parent's params.\n     * - **views** `{object}` - returns a views object where each key is an absolute view\n     *   name (i.e. \"viewName@stateName\") and each value is the config object\n     *   (template, controller) for the view. Even when you don't use the views object\n     *   explicitly on a state config, one is still created for you internally.\n     *   So by decorating this builder function you have access to decorating template\n     *   and controller properties.\n     * - **ownParams** `{object}` - returns an array of params that belong to the state,\n     *   not including any params defined by ancestor states.\n     * - **path** `{string}` - returns the full path from the root down to this state.\n     *   Needed for state activation.\n     * - **includes** `{object}` - returns an object that includes every state that\n     *   would pass a `$state.includes()` test.\n     *\n     * #### Example:\n     * Override the internal 'views' builder with a function that takes the state\n     * definition, and a reference to the internal function being overridden:\n     * ```js\n     * $stateProvider.decorator('views', function (state, parent) {\n     *   let result = {},\n     *       views = parent(state);\n     *\n     *   angular.forEach(views, function (config, name) {\n     *     let autoName = (state.name + '.' + name).replace('.', '/');\n     *     config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n     *     result[name] = config;\n     *   });\n     *   return result;\n     * });\n     *\n     * $stateProvider.state('home', {\n     *   views: {\n     *     'contact.list': { controller: 'ListController' },\n     *     'contact.item': { controller: 'ItemController' }\n     *   }\n     * });\n     * ```\n     *\n     *\n     * ```js\n     * // Auto-populates list and item views with /partials/home/contact/list.html,\n     * // and /partials/home/contact/item.html, respectively.\n     * $state.go('home');\n     * ```\n     *\n     * @param {string} name The name of the builder function to decorate.\n     * @param {object} func A function that is responsible for decorating the original\n     * builder function. The function receives two parameters:\n     *\n     *   - `{object}` - state - The state config object.\n     *   - `{object}` - super - The original builder function.\n     *\n     * @return {object} $stateProvider - $stateProvider instance\n     */\n    StateProvider.prototype.decorator = function (name, func) {\n        return this.stateRegistry.decorator(name, func) || this;\n    };\n    StateProvider.prototype.state = function (name, definition) {\n        if (isObject(name)) {\n            definition = name;\n        }\n        else {\n            definition.name = name;\n        }\n        this.stateRegistry.register(definition);\n        return this;\n    };\n    /**\n     * Registers an invalid state handler\n     *\n     * This is a passthrough to [[StateService.onInvalid]] for ng1.\n     */\n    StateProvider.prototype.onInvalid = function (callback) {\n        return this.stateService.onInvalid(callback);\n    };\n    return StateProvider;\n}());\nexport { StateProvider };\n//# sourceMappingURL=stateProvider.js.map","/** @publicapi @module ng1 */ /** */\nimport { services, ResolveContext, extend, } from '@uirouter/core';\nimport { getLocals } from '../services';\n/**\n * This is a [[StateBuilder.builder]] function for angular1 `onEnter`, `onExit`,\n * `onRetain` callback hooks on a [[Ng1StateDeclaration]].\n *\n * When the [[StateBuilder]] builds a [[StateObject]] object from a raw [[StateDeclaration]], this builder\n * ensures that those hooks are injectable for @uirouter/angularjs (ng1).\n *\n * @internalapi\n */\nexport var getStateHookBuilder = function (hookName) {\n    return function stateHookBuilder(stateObject, parentFn) {\n        var hook = stateObject[hookName];\n        var pathname = hookName === 'onExit' ? 'from' : 'to';\n        function decoratedNg1Hook(trans, state) {\n            var resolveContext = new ResolveContext(trans.treeChanges(pathname));\n            var subContext = resolveContext.subContext(state.$$state());\n            var locals = extend(getLocals(subContext), { $state$: state, $transition$: trans });\n            return services.$injector.invoke(hook, this, locals);\n        }\n        return hook ? decoratedNg1Hook : undefined;\n    };\n};\n//# sourceMappingURL=onEnterExitRetain.js.map","/** @publicapi @module ng1 */ /** */\nimport { isDefined } from '@uirouter/core';\nimport { val, createProxyFunctions, removeFrom, isObject } from '@uirouter/core';\n/**\n * Implements UI-Router LocationServices and LocationConfig using Angular 1's $location service\n * @internalapi\n */\nvar Ng1LocationServices = /** @class */ (function () {\n    function Ng1LocationServices($locationProvider) {\n        // .onChange() registry\n        this._urlListeners = [];\n        this.$locationProvider = $locationProvider;\n        var _lp = val($locationProvider);\n        createProxyFunctions(_lp, this, _lp, ['hashPrefix']);\n    }\n    /**\n     * Applys ng1-specific path parameter encoding\n     *\n     * The Angular 1 `$location` service is a bit weird.\n     * It doesn't allow slashes to be encoded/decoded bi-directionally.\n     *\n     * See the writeup at https://github.com/angular-ui/ui-router/issues/2598\n     *\n     * This code patches the `path` parameter type so it encoded/decodes slashes as ~2F\n     *\n     * @param router\n     */\n    Ng1LocationServices.monkeyPatchPathParameterType = function (router) {\n        var pathType = router.urlMatcherFactory.type('path');\n        pathType.encode = function (x) {\n            return x != null ? x.toString().replace(/(~|\\/)/g, function (m) { return ({ '~': '~~', '/': '~2F' }[m]); }) : x;\n        };\n        pathType.decode = function (x) {\n            return x != null ? x.toString().replace(/(~~|~2F)/g, function (m) { return ({ '~~': '~', '~2F': '/' }[m]); }) : x;\n        };\n    };\n    Ng1LocationServices.prototype.dispose = function () { };\n    Ng1LocationServices.prototype.onChange = function (callback) {\n        var _this = this;\n        this._urlListeners.push(callback);\n        return function () { return removeFrom(_this._urlListeners)(callback); };\n    };\n    Ng1LocationServices.prototype.html5Mode = function () {\n        var html5Mode = this.$locationProvider.html5Mode();\n        html5Mode = isObject(html5Mode) ? html5Mode.enabled : html5Mode;\n        return html5Mode && this.$sniffer.history;\n    };\n    Ng1LocationServices.prototype.baseHref = function () {\n        return this._baseHref || (this._baseHref = this.$browser.baseHref() || this.$window.location.pathname);\n    };\n    Ng1LocationServices.prototype.url = function (newUrl, replace, state) {\n        if (replace === void 0) { replace = false; }\n        if (isDefined(newUrl))\n            this.$location.url(newUrl);\n        if (replace)\n            this.$location.replace();\n        if (state)\n            this.$location.state(state);\n        return this.$location.url();\n    };\n    Ng1LocationServices.prototype._runtimeServices = function ($rootScope, $location, $sniffer, $browser, $window) {\n        var _this = this;\n        this.$location = $location;\n        this.$sniffer = $sniffer;\n        this.$browser = $browser;\n        this.$window = $window;\n        // Bind $locationChangeSuccess to the listeners registered in LocationService.onChange\n        $rootScope.$on('$locationChangeSuccess', function (evt) { return _this._urlListeners.forEach(function (fn) { return fn(evt); }); });\n        var _loc = val($location);\n        // Bind these LocationService functions to $location\n        createProxyFunctions(_loc, this, _loc, ['replace', 'path', 'search', 'hash']);\n        // Bind these LocationConfig functions to $location\n        createProxyFunctions(_loc, this, _loc, ['port', 'protocol', 'host']);\n    };\n    return Ng1LocationServices;\n}());\nexport { Ng1LocationServices };\n//# sourceMappingURL=locationServices.js.map","/** @publicapi @module url */ /** */\nimport { BaseUrlRule, } from '@uirouter/core';\nimport { services, isString, isFunction, isArray, identity } from '@uirouter/core';\n/**\n * Manages rules for client-side URL\n *\n * ### Deprecation warning:\n * This class is now considered to be an internal API\n * Use the [[UrlService]] instead.\n * For configuring URL rules, use the [[UrlRulesApi]] which can be found as [[UrlService.rules]].\n *\n * This class manages the router rules for what to do when the URL changes.\n *\n * This provider remains for backwards compatibility.\n *\n * @internalapi\n * @deprecated\n */\nvar UrlRouterProvider = /** @class */ (function () {\n    /** @hidden */\n    function UrlRouterProvider(/** @hidden */ router) {\n        this.router = router;\n    }\n    UrlRouterProvider.injectableHandler = function (router, handler) {\n        return function (match) { return services.$injector.invoke(handler, null, { $match: match, $stateParams: router.globals.params }); };\n    };\n    /** @hidden */\n    UrlRouterProvider.prototype.$get = function () {\n        var urlService = this.router.urlService;\n        this.router.urlRouter.update(true);\n        if (!urlService.interceptDeferred)\n            urlService.listen();\n        return this.router.urlRouter;\n    };\n    /**\n     * Registers a url handler function.\n     *\n     * Registers a low level url handler (a `rule`).\n     * A rule detects specific URL patterns and returns a redirect, or performs some action.\n     *\n     * If a rule returns a string, the URL is replaced with the string, and all rules are fired again.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Here's an example of how you might allow case insensitive urls\n     *   $urlRouterProvider.rule(function ($injector, $location) {\n     *     var path = $location.path(),\n     *         normalized = path.toLowerCase();\n     *\n     *     if (path !== normalized) {\n     *       return normalized;\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param ruleFn\n     * Handler function that takes `$injector` and `$location` services as arguments.\n     * You can use them to detect a url and return a different url as a string.\n     *\n     * @return [[UrlRouterProvider]] (`this`)\n     */\n    UrlRouterProvider.prototype.rule = function (ruleFn) {\n        var _this = this;\n        if (!isFunction(ruleFn))\n            throw new Error(\"'rule' must be a function\");\n        var match = function () { return ruleFn(services.$injector, _this.router.locationService); };\n        var rule = new BaseUrlRule(match, identity);\n        this.router.urlService.rules.rule(rule);\n        return this;\n    };\n    /**\n     * Defines the path or behavior to use when no url can be matched.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // if the path doesn't match any of the urls you configured\n     *   // otherwise will take care of routing the user to the\n     *   // specified url\n     *   $urlRouterProvider.otherwise('/index');\n     *\n     *   // Example of using function rule as param\n     *   $urlRouterProvider.otherwise(function ($injector, $location) {\n     *     return '/a/valid/url';\n     *   });\n     * });\n     * ```\n     *\n     * @param rule\n     * The url path you want to redirect to or a function rule that returns the url path or performs a `$state.go()`.\n     * The function version is passed two params: `$injector` and `$location` services, and should return a url string.\n     *\n     * @return {object} `$urlRouterProvider` - `$urlRouterProvider` instance\n     */\n    UrlRouterProvider.prototype.otherwise = function (rule) {\n        var _this = this;\n        var urlRules = this.router.urlService.rules;\n        if (isString(rule)) {\n            urlRules.otherwise(rule);\n        }\n        else if (isFunction(rule)) {\n            urlRules.otherwise(function () { return rule(services.$injector, _this.router.locationService); });\n        }\n        else {\n            throw new Error(\"'rule' must be a string or function\");\n        }\n        return this;\n    };\n    /**\n     * Registers a handler for a given url matching.\n     *\n     * If the handler is a string, it is\n     * treated as a redirect, and is interpolated according to the syntax of match\n     * (i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n     *\n     * If the handler is a function, it is injectable.\n     * It gets invoked if `$location` matches.\n     * You have the option of inject the match object as `$match`.\n     *\n     * The handler can return\n     *\n     * - **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n     *   will continue trying to find another one that matches.\n     * - **string** which is treated as a redirect and passed to `$location.url()`\n     * - **void** or any **truthy** value tells `$urlRouter` that the url was handled.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n     *     if ($state.$current.navigable !== state ||\n     *         !equalForKeys($match, $stateParams) {\n     *      $state.transitionTo(state, $match, false);\n     *     }\n     *   });\n     * });\n     * ```\n     *\n     * @param what A pattern string to match, compiled as a [[UrlMatcher]].\n     * @param handler The path (or function that returns a path) that you want to redirect your user to.\n     * @param ruleCallback [optional] A callback that receives the `rule` registered with [[UrlMatcher.rule]]\n     *\n     * Note: the handler may also invoke arbitrary code, such as `$state.go()`\n     */\n    UrlRouterProvider.prototype.when = function (what, handler) {\n        if (isArray(handler) || isFunction(handler)) {\n            handler = UrlRouterProvider.injectableHandler(this.router, handler);\n        }\n        this.router.urlService.rules.when(what, handler);\n        return this;\n    };\n    /**\n     * Disables monitoring of the URL.\n     *\n     * Call this method before UI-Router has bootstrapped.\n     * It will stop UI-Router from performing the initial url sync.\n     *\n     * This can be useful to perform some asynchronous initialization before the router starts.\n     * Once the initialization is complete, call [[listen]] to tell UI-Router to start watching and synchronizing the URL.\n     *\n     * #### Example:\n     * ```js\n     * var app = angular.module('app', ['ui.router']);\n     *\n     * app.config(function ($urlRouterProvider) {\n     *   // Prevent $urlRouter from automatically intercepting URL changes;\n     *   $urlRouterProvider.deferIntercept();\n     * })\n     *\n     * app.run(function (MyService, $urlRouter, $http) {\n     *   $http.get(\"/stuff\").then(function(resp) {\n     *     MyService.doStuff(resp.data);\n     *     $urlRouter.listen();\n     *     $urlRouter.sync();\n     *   });\n     * });\n     * ```\n     *\n     * @param defer Indicates whether to defer location change interception.\n     *        Passing no parameter is equivalent to `true`.\n     */\n    UrlRouterProvider.prototype.deferIntercept = function (defer) {\n        this.router.urlService.deferIntercept(defer);\n    };\n    return UrlRouterProvider;\n}());\nexport { UrlRouterProvider };\n//# sourceMappingURL=urlRouterProvider.js.map","/**\n * # Angular 1 types\n *\n * UI-Router core provides various Typescript types which you can use for code completion and validating parameter values, etc.\n * The customizations to the core types for Angular UI-Router are documented here.\n *\n * The optional [[$resolve]] service is also documented here.\n *\n * @preferred @publicapi @module ng1\n */ /** */\nimport { ng as angular } from './angular';\nimport { services, applyPairs, isString, trace, extend, UIRouter, unnestR, } from '@uirouter/core';\nimport { ng1ViewsBuilder, getNg1ViewConfigFactory } from './statebuilders/views';\nimport { TemplateFactory } from './templateFactory';\nimport { StateProvider } from './stateProvider';\nimport { getStateHookBuilder } from './statebuilders/onEnterExitRetain';\nimport { Ng1LocationServices } from './locationServices';\nimport { UrlRouterProvider } from './urlRouterProvider';\nangular.module('ui.router.angular1', []);\nvar mod_init = angular.module('ui.router.init', ['ng']);\nvar mod_util = angular.module('ui.router.util', ['ui.router.init']);\nvar mod_rtr = angular.module('ui.router.router', ['ui.router.util']);\nvar mod_state = angular.module('ui.router.state', ['ui.router.router', 'ui.router.util', 'ui.router.angular1']);\nvar mod_main = angular.module('ui.router', ['ui.router.init', 'ui.router.state', 'ui.router.angular1']);\nvar mod_cmpt = angular.module('ui.router.compat', ['ui.router']); // tslint:disable-line\nvar router = null;\n$uiRouterProvider.$inject = ['$locationProvider'];\n/** This angular 1 provider instantiates a Router and exposes its services via the angular injector */\nfunction $uiRouterProvider($locationProvider) {\n    // Create a new instance of the Router when the $uiRouterProvider is initialized\n    router = this.router = new UIRouter();\n    router.stateProvider = new StateProvider(router.stateRegistry, router.stateService);\n    // Apply ng1 specific StateBuilder code for `views`, `resolve`, and `onExit/Retain/Enter` properties\n    router.stateRegistry.decorator('views', ng1ViewsBuilder);\n    router.stateRegistry.decorator('onExit', getStateHookBuilder('onExit'));\n    router.stateRegistry.decorator('onRetain', getStateHookBuilder('onRetain'));\n    router.stateRegistry.decorator('onEnter', getStateHookBuilder('onEnter'));\n    router.viewService._pluginapi._viewConfigFactory('ng1', getNg1ViewConfigFactory());\n    var ng1LocationService = (router.locationService = router.locationConfig = new Ng1LocationServices($locationProvider));\n    Ng1LocationServices.monkeyPatchPathParameterType(router);\n    // backwards compat: also expose router instance as $uiRouterProvider.router\n    router['router'] = router;\n    router['$get'] = $get;\n    $get.$inject = ['$location', '$browser', '$window', '$sniffer', '$rootScope', '$http', '$templateCache'];\n    function $get($location, $browser, $window, $sniffer, $rootScope, $http, $templateCache) {\n        ng1LocationService._runtimeServices($rootScope, $location, $sniffer, $browser, $window);\n        delete router['router'];\n        delete router['$get'];\n        return router;\n    }\n    return router;\n}\nvar getProviderFor = function (serviceName) { return [\n    '$uiRouterProvider',\n    function ($urp) {\n        var service = $urp.router[serviceName];\n        service['$get'] = function () { return service; };\n        return service;\n    },\n]; };\n// This effectively calls $get() on `$uiRouterProvider` to trigger init (when ng enters runtime)\nrunBlock.$inject = ['$injector', '$q', '$uiRouter'];\nfunction runBlock($injector, $q, $uiRouter) {\n    services.$injector = $injector;\n    services.$q = $q;\n    // https://github.com/angular-ui/ui-router/issues/3678\n    if (!$injector.hasOwnProperty('strictDi')) {\n        try {\n            $injector.invoke(function (checkStrictDi) { });\n        }\n        catch (error) {\n            $injector.strictDi = !!/strict mode/.exec(error && error.toString());\n        }\n    }\n    // The $injector is now available.\n    // Find any resolvables that had dependency annotation deferred\n    $uiRouter.stateRegistry\n        .get()\n        .map(function (x) { return x.$$state().resolvables; })\n        .reduce(unnestR, [])\n        .filter(function (x) { return x.deps === 'deferred'; })\n        .forEach(function (resolvable) { return (resolvable.deps = $injector.annotate(resolvable.resolveFn, $injector.strictDi)); });\n}\n// $urlRouter service and $urlRouterProvider\nvar getUrlRouterProvider = function (uiRouter) { return (uiRouter.urlRouterProvider = new UrlRouterProvider(uiRouter)); };\n// $state service and $stateProvider\n// $urlRouter service and $urlRouterProvider\nvar getStateProvider = function () { return extend(router.stateProvider, { $get: function () { return router.stateService; } }); };\nwatchDigests.$inject = ['$rootScope'];\nexport function watchDigests($rootScope) {\n    $rootScope.$watch(function () {\n        trace.approximateDigests++;\n    });\n}\nmod_init.provider('$uiRouter', $uiRouterProvider);\nmod_rtr.provider('$urlRouter', ['$uiRouterProvider', getUrlRouterProvider]);\nmod_util.provider('$urlService', getProviderFor('urlService'));\nmod_util.provider('$urlMatcherFactory', ['$uiRouterProvider', function () { return router.urlMatcherFactory; }]);\nmod_util.provider('$templateFactory', function () { return new TemplateFactory(); });\nmod_state.provider('$stateRegistry', getProviderFor('stateRegistry'));\nmod_state.provider('$uiRouterGlobals', getProviderFor('globals'));\nmod_state.provider('$transitions', getProviderFor('transitionService'));\nmod_state.provider('$state', ['$uiRouterProvider', getStateProvider]);\nmod_state.factory('$stateParams', ['$uiRouter', function ($uiRouter) { return $uiRouter.globals.params; }]);\nmod_main.factory('$view', function () { return router.viewService; });\nmod_main.service('$trace', function () { return trace; });\nmod_main.run(watchDigests);\nmod_util.run(['$urlMatcherFactory', function ($urlMatcherFactory) { }]);\nmod_state.run(['$state', function ($state) { }]);\nmod_rtr.run(['$urlRouter', function ($urlRouter) { }]);\nmod_init.run(runBlock);\n/** @hidden TODO: find a place to move this */\nexport var getLocals = function (ctx) {\n    var tokens = ctx.getTokens().filter(isString);\n    var tuples = tokens.map(function (key) {\n        var resolvable = ctx.getResolvable(key);\n        var waitPolicy = ctx.getPolicy(resolvable).async;\n        return [key, waitPolicy === 'NOWAIT' ? resolvable.promise : resolvable.data];\n    });\n    return tuples.reduce(applyPairs, {});\n};\n//# sourceMappingURL=services.js.map","/**\n * # Angular 1 Directives\n *\n * These are the directives included in UI-Router for Angular 1.\n * These directives are used in templates to create viewports and link/navigate to states.\n *\n * @preferred @publicapi @module directives\n */ /** */\nimport { ng as angular } from '../angular';\nimport { extend, forEach, tail, isString, isObject, isArray, parse, noop, unnestR, identity, uniqR, inArray, removeFrom, } from '@uirouter/core';\n/** @hidden */\nfunction parseStateRef(ref) {\n    var parsed;\n    var paramsOnly = ref.match(/^\\s*({[^}]*})\\s*$/);\n    if (paramsOnly)\n        ref = '(' + paramsOnly[1] + ')';\n    parsed = ref.replace(/\\n/g, ' ').match(/^\\s*([^(]*?)\\s*(\\((.*)\\))?\\s*$/);\n    if (!parsed || parsed.length !== 4)\n        throw new Error(\"Invalid state ref '\" + ref + \"'\");\n    return { state: parsed[1] || null, paramExpr: parsed[3] || null };\n}\n/** @hidden */\nfunction stateContext(el) {\n    var $uiView = el.parent().inheritedData('$uiView');\n    var path = parse('$cfg.path')($uiView);\n    return path ? tail(path).state.name : undefined;\n}\n/** @hidden */\nfunction processedDef($state, $element, def) {\n    var uiState = def.uiState || $state.current.name;\n    var uiStateOpts = extend(defaultOpts($element, $state), def.uiStateOpts || {});\n    var href = $state.href(uiState, def.uiStateParams, uiStateOpts);\n    return { uiState: uiState, uiStateParams: def.uiStateParams, uiStateOpts: uiStateOpts, href: href };\n}\n/** @hidden */\nfunction getTypeInfo(el) {\n    // SVGAElement does not use the href attribute, but rather the 'xlinkHref' attribute.\n    var isSvg = Object.prototype.toString.call(el.prop('href')) === '[object SVGAnimatedString]';\n    var isForm = el[0].nodeName === 'FORM';\n    return {\n        attr: isForm ? 'action' : isSvg ? 'xlink:href' : 'href',\n        isAnchor: el.prop('tagName').toUpperCase() === 'A',\n        clickable: !isForm,\n    };\n}\n/** @hidden */\nfunction clickHook(el, $state, $timeout, type, getDef) {\n    return function (e) {\n        var button = e.which || e.button, target = getDef();\n        if (!(button > 1 || e.ctrlKey || e.metaKey || e.shiftKey || el.attr('target'))) {\n            // HACK: This is to allow ng-clicks to be processed before the transition is initiated:\n            var transition_1 = $timeout(function () {\n                if (!el.attr('disabled')) {\n                    $state.go(target.uiState, target.uiStateParams, target.uiStateOpts);\n                }\n            });\n            e.preventDefault();\n            // if the state has no URL, ignore one preventDefault from the <a> directive.\n            var ignorePreventDefaultCount_1 = type.isAnchor && !target.href ? 1 : 0;\n            e.preventDefault = function () {\n                if (ignorePreventDefaultCount_1-- <= 0)\n                    $timeout.cancel(transition_1);\n            };\n        }\n    };\n}\n/** @hidden */\nfunction defaultOpts(el, $state) {\n    return {\n        relative: stateContext(el) || $state.$current,\n        inherit: true,\n        source: 'sref',\n    };\n}\n/** @hidden */\nfunction bindEvents(element, scope, hookFn, uiStateOpts) {\n    var events;\n    if (uiStateOpts) {\n        events = uiStateOpts.events;\n    }\n    if (!isArray(events)) {\n        events = ['click'];\n    }\n    var on = element.on ? 'on' : 'bind';\n    for (var _i = 0, events_1 = events; _i < events_1.length; _i++) {\n        var event_1 = events_1[_i];\n        element[on](event_1, hookFn);\n    }\n    scope.$on('$destroy', function () {\n        var off = element.off ? 'off' : 'unbind';\n        for (var _i = 0, events_2 = events; _i < events_2.length; _i++) {\n            var event_2 = events_2[_i];\n            element[off](event_2, hookFn);\n        }\n    });\n}\n/**\n * `ui-sref`: A directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of the `ui-sref` is the name of the state to link to.\n *\n * #### Example:\n * This will activate the `home` state when the link is clicked.\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * ```\n *\n * ### Relative Links\n * You can also use relative state paths within `ui-sref`, just like a relative path passed to `$state.go()` ([[StateService.go]]).\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create a relative `ui-sref` which always targets the same destination.\n *\n * #### Example:\n * Both these links are relative to the parent state, even when a child state is currently active.\n * ```html\n * <a ui-sref=\".child1\">child 1 state</a>\n * <a ui-sref=\".child2\">child 2 state</a>\n * ```\n *\n * This link activates the parent state.\n * ```html\n * <a ui-sref=\"^\">Return</a>\n * ```\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * #### Example:\n * Assuming the `users` state has a url of `/users/`\n * ```html\n * <a ui-sref=\"users\" href=\"/users/\">Users</a>\n * ```\n *\n * ### Parameter Values\n * In addition to the state name, a `ui-sref` can include parameter values which are applied when activating the state.\n * Param values can be provided in the `ui-sref` value after the state name, enclosed by parentheses.\n * The content inside the parentheses is an expression, evaluated to the parameter values.\n *\n * #### Example:\n * This example renders a list of links to users.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"user in users\">\n *   <a ui-sref=\"users.detail({ userId: user.id })\">{{ user.displayName }}</a>\n * </li>\n * ```\n *\n * Note:\n * The parameter values expression is `$watch`ed for updates.\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-sref-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n *\n * #### Example:\n * ```html\n * <a ui-sref=\"home\" ui-sref-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-sref-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-sref=\"contacts\" ui-sref-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Examples\n * If you have the following template:\n *\n * ```html\n * <a ui-sref=\"home\">Home</a>\n * <a ui-sref=\"about\">About</a>\n * <a ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n *     </li>\n * </ul>\n * ```\n *\n * Then (assuming the current state is `contacts`) the rendered html including hrefs would be:\n *\n * ```html\n * <a href=\"#/home\" ui-sref=\"home\">Home</a>\n * <a href=\"#/about\" ui-sref=\"about\">About</a>\n * <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n *\n * <ul>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n *     </li>\n *     <li ng-repeat=\"contact in contacts\">\n *         <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n *     </li>\n * </ul>\n *\n * <a href=\"#/home\" ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n * ```\n *\n * ### Notes\n *\n * - You can use `ui-sref` to change **only the parameter values** by omitting the state name and parentheses.\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-sref=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n *\n * - Unlike the parameter values expression, the state name is not `$watch`ed (for performance reasons).\n * If you need to dynamically update the state being linked to, use the fully dynamic [[uiState]] directive.\n */\nvar uiSrefDirective;\nuiSrefDirective = [\n    '$uiRouter',\n    '$timeout',\n    function $StateRefDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var ref = parseStateRef(attrs.uiSref);\n                rawDef.uiState = ref.state;\n                rawDef.uiStateOpts = attrs.uiSrefOpts ? scope.$eval(attrs.uiSrefOpts) : {};\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                if (ref.paramExpr) {\n                    scope.$watch(ref.paramExpr, function (val) {\n                        rawDef.uiStateParams = extend({}, val);\n                        update();\n                    }, true);\n                    rawDef.uiStateParams = extend({}, scope.$eval(ref.paramExpr));\n                }\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            },\n        };\n    },\n];\n/**\n * `ui-state`: A fully dynamic directive for linking to a state\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * **This directive is very similar to [[uiSref]], but it `$observe`s and `$watch`es/evaluates all its inputs.**\n *\n * A directive which links to a state (and optionally, parameters).\n * When clicked, this directive activates the linked state with the supplied parameter values.\n *\n * ### Linked State\n * The attribute value of `ui-state` is an expression which is `$watch`ed and evaluated as the state to link to.\n * **This is in contrast with `ui-sref`, which takes a state name as a string literal.**\n *\n * #### Example:\n * Create a list of links.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Relative Links\n * If the expression evaluates to a relative path, it is processed like [[uiSref]].\n * You just need to be aware that the path is relative to the state that *created* the link.\n * This allows a state to create relative `ui-state` which always targets the same destination.\n *\n * ### hrefs\n * If the linked state has a URL, the directive will automatically generate and\n * update the `href` attribute (using the [[StateService.href]]  method).\n *\n * ### Parameter Values\n * In addition to the state name expression, a `ui-state` can include parameter values which are applied when activating the state.\n * Param values should be provided using the `ui-state-params` attribute.\n * The `ui-state-params` attribute value is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * This example renders a list of links with param values.\n * The state's `userId` parameter value comes from each user's `user.id` property.\n * ```html\n * <li ng-repeat=\"link in navlinks\">\n *   <a ui-state=\"link.state\" ui-state-params=\"link.params\">{{ link.displayName }}</a>\n * </li>\n * ```\n *\n * ### Transition Options\n * You can specify [[TransitionOptions]] to pass to [[StateService.go]] by using the `ui-state-opts` attribute.\n * Options are restricted to `location`, `inherit`, and `reload`.\n * The value of the `ui-state-opts` is `$watch`ed and evaluated as an expression.\n *\n * #### Example:\n * ```html\n * <a ui-state=\"returnto.state\" ui-state-opts=\"{ reload: true }\">Home</a>\n * ```\n *\n * ### Other DOM Events\n *\n * You can also customize which DOM events to respond to (instead of `click`) by\n * providing an `events` array in the `ui-state-opts` attribute.\n *\n * #### Example:\n * ```html\n * <input type=\"text\" ui-state=\"contacts\" ui-state-opts=\"{ events: ['change', 'blur'] }\">\n * ```\n *\n * ### Highlighting the active link\n * This directive can be used in conjunction with [[uiSrefActive]] to highlight the active link.\n *\n * ### Notes\n *\n * - You can use `ui-params` to change **only the parameter values** by omitting the state name and supplying only `ui-state-params`.\n *   However, it might be simpler to use [[uiSref]] parameter-only links.\n *\n * #### Example:\n * Sets the `lang` parameter to `en` and remains on the same state.\n *\n * ```html\n * <a ui-state=\"\" ui-state-params=\"{ lang: 'en' }\">English</a>\n * ```\n *\n * - A middle-click, right-click, or ctrl-click is handled (natively) by the browser to open the href in a new window, for example.\n * ```\n */\nvar uiStateDirective;\nuiStateDirective = [\n    '$uiRouter',\n    '$timeout',\n    function $StateRefDynamicDirective($uiRouter, $timeout) {\n        var $state = $uiRouter.stateService;\n        return {\n            restrict: 'A',\n            require: ['?^uiSrefActive', '?^uiSrefActiveEq'],\n            link: function (scope, element, attrs, uiSrefActive) {\n                var type = getTypeInfo(element);\n                var active = uiSrefActive[1] || uiSrefActive[0];\n                var unlinkInfoFn = null;\n                var hookFn;\n                var rawDef = {};\n                var getDef = function () { return processedDef($state, element, rawDef); };\n                var inputAttrs = ['uiState', 'uiStateParams', 'uiStateOpts'];\n                var watchDeregFns = inputAttrs.reduce(function (acc, attr) { return ((acc[attr] = noop), acc); }, {});\n                function update() {\n                    var def = getDef();\n                    if (unlinkInfoFn)\n                        unlinkInfoFn();\n                    if (active)\n                        unlinkInfoFn = active.$$addStateInfo(def.uiState, def.uiStateParams);\n                    if (def.href != null)\n                        attrs.$set(type.attr, def.href);\n                }\n                inputAttrs.forEach(function (field) {\n                    rawDef[field] = attrs[field] ? scope.$eval(attrs[field]) : null;\n                    attrs.$observe(field, function (expr) {\n                        watchDeregFns[field]();\n                        watchDeregFns[field] = scope.$watch(expr, function (newval) {\n                            rawDef[field] = newval;\n                            update();\n                        }, true);\n                    });\n                });\n                update();\n                scope.$on('$destroy', $uiRouter.stateRegistry.onStatesChanged(update));\n                scope.$on('$destroy', $uiRouter.transitionService.onSuccess({}, update));\n                if (!type.clickable)\n                    return;\n                hookFn = clickHook(element, $state, $timeout, type, getDef);\n                bindEvents(element, scope, hookFn, rawDef.uiStateOpts);\n            },\n        };\n    },\n];\n/**\n * `ui-sref-active` and `ui-sref-active-eq`: A directive that adds a CSS class when a `ui-sref` is active\n *\n * A directive working alongside [[uiSref]] and [[uiState]] to add classes to an element when the\n * related directive's state is active (and remove them when it is inactive).\n *\n * The primary use-case is to highlight the active link in navigation menus,\n * distinguishing it from the inactive menu items.\n *\n * ### Linking to a `ui-sref` or `ui-state`\n * `ui-sref-active` can live on the same element as `ui-sref`/`ui-state`, or it can be on a parent element.\n * If a `ui-sref-active` is a parent to more than one `ui-sref`/`ui-state`, it will apply the CSS class when **any of the links are active**.\n *\n * ### Matching\n *\n * The `ui-sref-active` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state **or any child state is active**.\n * This is a \"fuzzy match\" which uses [[StateService.includes]].\n *\n * The `ui-sref-active-eq` directive applies the CSS class when the `ui-sref`/`ui-state`'s target state is directly active (not when child states are active).\n * This is an \"exact match\" which uses [[StateService.is]].\n *\n * ### Parameter values\n * If the `ui-sref`/`ui-state` includes parameter values, the current parameter values must match the link's values for the link to be highlighted.\n * This allows a list of links to the same state with different parameters to be rendered, and the correct one highlighted.\n *\n * #### Example:\n * ```html\n * <li ng-repeat=\"user in users\" ui-sref-active=\"active\">\n *   <a ui-sref=\"user.details({ userId: user.id })\">{{ user.lastName }}</a>\n * </li>\n * ```\n *\n * ### Examples\n *\n * Given the following template:\n * #### Example:\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item\">\n *     <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * When the app state is `app.user` (or any child state),\n * and contains the state parameter \"user\" with value \"bilbobaggins\",\n * the resulting HTML will appear as (note the 'active' class):\n *\n * ```html\n * <ul>\n *   <li ui-sref-active=\"active\" class=\"item active\">\n *     <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n *   </li>\n * </ul>\n * ```\n *\n * ### Glob mode\n *\n * It is possible to pass `ui-sref-active` an expression that evaluates to an object.\n * The objects keys represent active class names and values represent the respective state names/globs.\n * `ui-sref-active` will match if the current active state **includes** any of\n * the specified state names/globs, even the abstract ones.\n *\n * #### Example:\n * Given the following template, with \"admin\" being an abstract state:\n * ```html\n * <div ui-sref-active=\"{'active': 'admin.**'}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * Arrays are also supported as values in the `ngClass`-like interface.\n * This allows multiple states to add `active` class.\n *\n * #### Example:\n * Given the following template, with \"admin.roles\" being the current state, the class will be added too:\n * ```html\n * <div ui-sref-active=\"{'active': ['owner.**', 'admin.**']}\">\n *   <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n * </div>\n * ```\n *\n * When the current state is \"admin.roles\" the \"active\" class will be applied to both the `<div>` and `<a>` elements.\n * It is important to note that the state names/globs passed to `ui-sref-active` override any state provided by a linked `ui-sref`.\n *\n * ### Notes:\n *\n * - The class name is interpolated **once** during the directives link time (any further changes to the\n * interpolated value are ignored).\n *\n * - Multiple classes may be specified in a space-separated format: `ui-sref-active='class1 class2 class3'`\n */\nvar uiSrefActiveDirective;\nuiSrefActiveDirective = [\n    '$state',\n    '$stateParams',\n    '$interpolate',\n    '$uiRouter',\n    function $StateRefActiveDirective($state, $stateParams, $interpolate, $uiRouter) {\n        return {\n            restrict: 'A',\n            controller: [\n                '$scope',\n                '$element',\n                '$attrs',\n                function ($scope, $element, $attrs) {\n                    var states = [];\n                    var activeEqClass;\n                    var uiSrefActive;\n                    // There probably isn't much point in $observing this\n                    // uiSrefActive and uiSrefActiveEq share the same directive object with some\n                    // slight difference in logic routing\n                    activeEqClass = $interpolate($attrs.uiSrefActiveEq || '', false)($scope);\n                    try {\n                        uiSrefActive = $scope.$eval($attrs.uiSrefActive);\n                    }\n                    catch (e) {\n                        // Do nothing. uiSrefActive is not a valid expression.\n                        // Fall back to using $interpolate below\n                    }\n                    uiSrefActive = uiSrefActive || $interpolate($attrs.uiSrefActive || '', false)($scope);\n                    setStatesFromDefinitionObject(uiSrefActive);\n                    // Allow uiSref to communicate with uiSrefActive[Equals]\n                    this.$$addStateInfo = function (newState, newParams) {\n                        // we already got an explicit state provided by ui-sref-active, so we\n                        // shadow the one that comes from ui-sref\n                        if (isObject(uiSrefActive) && states.length > 0) {\n                            return;\n                        }\n                        var deregister = addState(newState, newParams, uiSrefActive);\n                        update();\n                        return deregister;\n                    };\n                    function updateAfterTransition(trans) {\n                        trans.promise.then(update, noop);\n                    }\n                    $scope.$on('$destroy', setupEventListeners());\n                    if ($uiRouter.globals.transition) {\n                        updateAfterTransition($uiRouter.globals.transition);\n                    }\n                    function setupEventListeners() {\n                        var deregisterStatesChangedListener = $uiRouter.stateRegistry.onStatesChanged(handleStatesChanged);\n                        var deregisterOnStartListener = $uiRouter.transitionService.onStart({}, updateAfterTransition);\n                        var deregisterStateChangeSuccessListener = $scope.$on('$stateChangeSuccess', update);\n                        return function cleanUp() {\n                            deregisterStatesChangedListener();\n                            deregisterOnStartListener();\n                            deregisterStateChangeSuccessListener();\n                        };\n                    }\n                    function handleStatesChanged() {\n                        setStatesFromDefinitionObject(uiSrefActive);\n                    }\n                    function setStatesFromDefinitionObject(statesDefinition) {\n                        if (isObject(statesDefinition)) {\n                            states = [];\n                            forEach(statesDefinition, function (stateOrName, activeClass) {\n                                // Helper function to abstract adding state.\n                                var addStateForClass = function (stateOrName, activeClass) {\n                                    var ref = parseStateRef(stateOrName);\n                                    addState(ref.state, $scope.$eval(ref.paramExpr), activeClass);\n                                };\n                                if (isString(stateOrName)) {\n                                    // If state is string, just add it.\n                                    addStateForClass(stateOrName, activeClass);\n                                }\n                                else if (isArray(stateOrName)) {\n                                    // If state is an array, iterate over it and add each array item individually.\n                                    forEach(stateOrName, function (stateOrName) {\n                                        addStateForClass(stateOrName, activeClass);\n                                    });\n                                }\n                            });\n                        }\n                    }\n                    function addState(stateName, stateParams, activeClass) {\n                        var state = $state.get(stateName, stateContext($element));\n                        var stateInfo = {\n                            state: state || { name: stateName },\n                            params: stateParams,\n                            activeClass: activeClass,\n                        };\n                        states.push(stateInfo);\n                        return function removeState() {\n                            removeFrom(states)(stateInfo);\n                        };\n                    }\n                    // Update route state\n                    function update() {\n                        var splitClasses = function (str) { return str.split(/\\s/).filter(identity); };\n                        var getClasses = function (stateList) {\n                            return stateList\n                                .map(function (x) { return x.activeClass; })\n                                .map(splitClasses)\n                                .reduce(unnestR, []);\n                        };\n                        var allClasses = getClasses(states)\n                            .concat(splitClasses(activeEqClass))\n                            .reduce(uniqR, []);\n                        var fuzzyClasses = getClasses(states.filter(function (x) { return $state.includes(x.state.name, x.params); }));\n                        var exactlyMatchesAny = !!states.filter(function (x) { return $state.is(x.state.name, x.params); }).length;\n                        var exactClasses = exactlyMatchesAny ? splitClasses(activeEqClass) : [];\n                        var addClasses = fuzzyClasses.concat(exactClasses).reduce(uniqR, []);\n                        var removeClasses = allClasses.filter(function (cls) { return !inArray(addClasses, cls); });\n                        $scope.$evalAsync(function () {\n                            addClasses.forEach(function (className) { return $element.addClass(className); });\n                            removeClasses.forEach(function (className) { return $element.removeClass(className); });\n                        });\n                    }\n                    update();\n                },\n            ],\n        };\n    },\n];\nangular\n    .module('ui.router.state')\n    .directive('uiSref', uiSrefDirective)\n    .directive('uiSrefActive', uiSrefActiveDirective)\n    .directive('uiSrefActiveEq', uiSrefActiveDirective)\n    .directive('uiState', uiStateDirective);\n//# sourceMappingURL=stateDirectives.js.map","/** @publicapi @module directives */ /** */\nimport { extend, filter, isDefined, isFunction, isString, kebobString, noop, parse, ResolveContext, tail, trace, unnestR, } from '@uirouter/core';\nimport { ng as angular } from '../angular';\nimport { getLocals } from '../services';\nimport { Ng1ViewConfig } from '../statebuilders/views';\n/**\n * `ui-view`: A viewport directive which is filled in by a view from the active state.\n *\n * ### Attributes\n *\n * - `name`: (Optional) A view name.\n *   The name should be unique amongst the other views in the same state.\n *   You can have views of the same name that live in different states.\n *   The ui-view can be targeted in a View using the name ([[Ng1StateDeclaration.views]]).\n *\n * - `autoscroll`: an expression. When it evaluates to true, the `ui-view` will be scrolled into view when it is activated.\n *   Uses [[$uiViewScroll]] to do the scrolling.\n *\n * - `onload`: Expression to evaluate whenever the view updates.\n *\n * #### Example:\n * A view can be unnamed or named.\n * ```html\n * <!-- Unnamed -->\n * <div ui-view></div>\n *\n * <!-- Named -->\n * <div ui-view=\"viewName\"></div>\n *\n * <!-- Named (different style) -->\n * <ui-view name=\"viewName\"></ui-view>\n * ```\n *\n * You can only have one unnamed view within any template (or root html). If you are only using a\n * single view and it is unnamed then you can populate it like so:\n *\n * ```html\n * <div ui-view></div>\n * $stateProvider.state(\"home\", {\n *   template: \"<h1>HELLO!</h1>\"\n * })\n * ```\n *\n * The above is a convenient shortcut equivalent to specifying your view explicitly with the\n * [[Ng1StateDeclaration.views]] config property, by name, in this case an empty name:\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * But typically you'll only use the views property if you name your view or have more than one view\n * in the same template. There's not really a compelling reason to name a view if its the only one,\n * but you could if you wanted, like so:\n *\n * ```html\n * <div ui-view=\"main\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"main\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     }\n *   }\n * })\n * ```\n *\n * Really though, you'll use views to set up multiple views:\n *\n * ```html\n * <div ui-view></div>\n * <div ui-view=\"chart\"></div>\n * <div ui-view=\"data\"></div>\n * ```\n *\n * ```js\n * $stateProvider.state(\"home\", {\n *   views: {\n *     \"\": {\n *       template: \"<h1>HELLO!</h1>\"\n *     },\n *     \"chart\": {\n *       template: \"<chart_thing/>\"\n *     },\n *     \"data\": {\n *       template: \"<data_thing/>\"\n *     }\n *   }\n * })\n * ```\n *\n * #### Examples for `autoscroll`:\n * ```html\n * <!-- If autoscroll present with no expression,\n *      then scroll ui-view into view -->\n * <ui-view autoscroll/>\n *\n * <!-- If autoscroll present with valid expression,\n *      then scroll ui-view into view if expression evaluates to true -->\n * <ui-view autoscroll='true'/>\n * <ui-view autoscroll='false'/>\n * <ui-view autoscroll='scopeVariable'/>\n * ```\n *\n * Resolve data:\n *\n * The resolved data from the state's `resolve` block is placed on the scope as `$resolve` (this\n * can be customized using [[Ng1ViewDeclaration.resolveAs]]).  This can be then accessed from the template.\n *\n * Note that when `controllerAs` is being used, `$resolve` is set on the controller instance *after* the\n * controller is instantiated.  The `$onInit()` hook can be used to perform initialization code which\n * depends on `$resolve` data.\n *\n * #### Example:\n * ```js\n * $stateProvider.state('home', {\n *   template: '<my-component user=\"$resolve.user\"></my-component>',\n *   resolve: {\n *     user: function(UserService) { return UserService.fetchUser(); }\n *   }\n * });\n * ```\n */\nexport var uiView;\nuiView = [\n    '$view',\n    '$animate',\n    '$uiViewScroll',\n    '$interpolate',\n    '$q',\n    function $ViewDirective($view, $animate, $uiViewScroll, $interpolate, $q) {\n        function getRenderer(attrs, scope) {\n            return {\n                enter: function (element, target, cb) {\n                    if (angular.version.minor > 2) {\n                        $animate.enter(element, null, target).then(cb);\n                    }\n                    else {\n                        $animate.enter(element, null, target, cb);\n                    }\n                },\n                leave: function (element, cb) {\n                    if (angular.version.minor > 2) {\n                        $animate.leave(element).then(cb);\n                    }\n                    else {\n                        $animate.leave(element, cb);\n                    }\n                },\n            };\n        }\n        function configsEqual(config1, config2) {\n            return config1 === config2;\n        }\n        var rootData = {\n            $cfg: { viewDecl: { $context: $view._pluginapi._rootViewContext() } },\n            $uiView: {},\n        };\n        var directive = {\n            count: 0,\n            restrict: 'ECA',\n            terminal: true,\n            priority: 400,\n            transclude: 'element',\n            compile: function (tElement, tAttrs, $transclude) {\n                return function (scope, $element, attrs) {\n                    var onloadExp = attrs['onload'] || '', autoScrollExp = attrs['autoscroll'], renderer = getRenderer(attrs, scope), inherited = $element.inheritedData('$uiView') || rootData, name = $interpolate(attrs['uiView'] || attrs['name'] || '')(scope) || '$default';\n                    var previousEl, currentEl, currentScope, viewConfig, unregister;\n                    var activeUIView = {\n                        $type: 'ng1',\n                        id: directive.count++,\n                        name: name,\n                        fqn: inherited.$uiView.fqn ? inherited.$uiView.fqn + '.' + name : name,\n                        config: null,\n                        configUpdated: configUpdatedCallback,\n                        get creationContext() {\n                            // The context in which this ui-view \"tag\" was created\n                            var fromParentTagConfig = parse('$cfg.viewDecl.$context')(inherited);\n                            // Allow <ui-view name=\"foo\"><ui-view name=\"bar\"></ui-view></ui-view>\n                            // See https://github.com/angular-ui/ui-router/issues/3355\n                            var fromParentTag = parse('$uiView.creationContext')(inherited);\n                            return fromParentTagConfig || fromParentTag;\n                        },\n                    };\n                    trace.traceUIViewEvent('Linking', activeUIView);\n                    function configUpdatedCallback(config) {\n                        if (config && !(config instanceof Ng1ViewConfig))\n                            return;\n                        if (configsEqual(viewConfig, config))\n                            return;\n                        trace.traceUIViewConfigUpdated(activeUIView, config && config.viewDecl && config.viewDecl.$context);\n                        viewConfig = config;\n                        updateView(config);\n                    }\n                    $element.data('$uiView', { $uiView: activeUIView });\n                    updateView();\n                    unregister = $view.registerUIView(activeUIView);\n                    scope.$on('$destroy', function () {\n                        trace.traceUIViewEvent('Destroying/Unregistering', activeUIView);\n                        unregister();\n                    });\n                    function cleanupLastView() {\n                        if (previousEl) {\n                            trace.traceUIViewEvent('Removing (previous) el', previousEl.data('$uiView'));\n                            previousEl.remove();\n                            previousEl = null;\n                        }\n                        if (currentScope) {\n                            trace.traceUIViewEvent('Destroying scope', activeUIView);\n                            currentScope.$destroy();\n                            currentScope = null;\n                        }\n                        if (currentEl) {\n                            var _viewData_1 = currentEl.data('$uiViewAnim');\n                            trace.traceUIViewEvent('Animate out', _viewData_1);\n                            renderer.leave(currentEl, function () {\n                                _viewData_1.$$animLeave.resolve();\n                                previousEl = null;\n                            });\n                            previousEl = currentEl;\n                            currentEl = null;\n                        }\n                    }\n                    function updateView(config) {\n                        var newScope = scope.$new();\n                        var animEnter = $q.defer(), animLeave = $q.defer();\n                        var $uiViewData = {\n                            $cfg: config,\n                            $uiView: activeUIView,\n                        };\n                        var $uiViewAnim = {\n                            $animEnter: animEnter.promise,\n                            $animLeave: animLeave.promise,\n                            $$animLeave: animLeave,\n                        };\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoading\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description\n                         *\n                         * Fired once the view **begins loading**, *before* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         * @param {string} viewName Name of the view.\n                         */\n                        newScope.$emit('$viewContentLoading', name);\n                        var cloned = $transclude(newScope, function (clone) {\n                            clone.data('$uiViewAnim', $uiViewAnim);\n                            clone.data('$uiView', $uiViewData);\n                            renderer.enter(clone, $element, function onUIViewEnter() {\n                                animEnter.resolve();\n                                if (currentScope)\n                                    currentScope.$emit('$viewContentAnimationEnded');\n                                if ((isDefined(autoScrollExp) && !autoScrollExp) || scope.$eval(autoScrollExp)) {\n                                    $uiViewScroll(clone);\n                                }\n                            });\n                            cleanupLastView();\n                        });\n                        currentEl = cloned;\n                        currentScope = newScope;\n                        /**\n                         * @ngdoc event\n                         * @name ui.router.state.directive:ui-view#$viewContentLoaded\n                         * @eventOf ui.router.state.directive:ui-view\n                         * @eventType emits on ui-view directive scope\n                         * @description           *\n                         * Fired once the view is **loaded**, *after* the DOM is rendered.\n                         *\n                         * @param {Object} event Event object.\n                         */\n                        currentScope.$emit('$viewContentLoaded', config || viewConfig);\n                        currentScope.$eval(onloadExp);\n                    }\n                };\n            },\n        };\n        return directive;\n    },\n];\n$ViewDirectiveFill.$inject = ['$compile', '$controller', '$transitions', '$view', '$q', '$timeout'];\n/** @hidden */\nfunction $ViewDirectiveFill($compile, $controller, $transitions, $view, $q, $timeout) {\n    var getControllerAs = parse('viewDecl.controllerAs');\n    var getResolveAs = parse('viewDecl.resolveAs');\n    return {\n        restrict: 'ECA',\n        priority: -400,\n        compile: function (tElement) {\n            var initial = tElement.html();\n            tElement.empty();\n            return function (scope, $element) {\n                var data = $element.data('$uiView');\n                if (!data) {\n                    $element.html(initial);\n                    $compile($element.contents())(scope);\n                    return;\n                }\n                var cfg = data.$cfg || { viewDecl: {}, getTemplate: noop };\n                var resolveCtx = cfg.path && new ResolveContext(cfg.path);\n                $element.html(cfg.getTemplate($element, resolveCtx) || initial);\n                trace.traceUIViewFill(data.$uiView, $element.html());\n                var link = $compile($element.contents());\n                var controller = cfg.controller;\n                var controllerAs = getControllerAs(cfg);\n                var resolveAs = getResolveAs(cfg);\n                var locals = resolveCtx && getLocals(resolveCtx);\n                scope[resolveAs] = locals;\n                if (controller) {\n                    var controllerInstance = ($controller(controller, extend({}, locals, { $scope: scope, $element: $element })));\n                    if (controllerAs) {\n                        scope[controllerAs] = controllerInstance;\n                        scope[controllerAs][resolveAs] = locals;\n                    }\n                    // TODO: Use $view service as a central point for registering component-level hooks\n                    // Then, when a component is created, tell the $view service, so it can invoke hooks\n                    // $view.componentLoaded(controllerInstance, { $scope: scope, $element: $element });\n                    // scope.$on('$destroy', () => $view.componentUnloaded(controllerInstance, { $scope: scope, $element: $element }));\n                    $element.data('$ngControllerController', controllerInstance);\n                    $element.children().data('$ngControllerController', controllerInstance);\n                    registerControllerCallbacks($q, $transitions, controllerInstance, scope, cfg);\n                }\n                // Wait for the component to appear in the DOM\n                if (isString(cfg.component)) {\n                    var kebobName = kebobString(cfg.component);\n                    var tagRegexp_1 = new RegExp(\"^(x-|data-)?\" + kebobName + \"$\", 'i');\n                    var getComponentController = function () {\n                        var directiveEl = [].slice\n                            .call($element[0].children)\n                            .filter(function (el) { return el && el.tagName && tagRegexp_1.exec(el.tagName); });\n                        return directiveEl && angular.element(directiveEl).data(\"$\" + cfg.component + \"Controller\");\n                    };\n                    var deregisterWatch_1 = scope.$watch(getComponentController, function (ctrlInstance) {\n                        if (!ctrlInstance)\n                            return;\n                        registerControllerCallbacks($q, $transitions, ctrlInstance, scope, cfg);\n                        deregisterWatch_1();\n                    });\n                }\n                link(scope);\n            };\n        },\n    };\n}\n/** @hidden */\nvar hasComponentImpl = typeof angular.module('ui.router')['component'] === 'function';\n/** @hidden incrementing id */\nvar _uiCanExitId = 0;\n/** @hidden TODO: move these callbacks to $view and/or `/hooks/components.ts` or something */\nfunction registerControllerCallbacks($q, $transitions, controllerInstance, $scope, cfg) {\n    // Call $onInit() ASAP\n    if (isFunction(controllerInstance.$onInit) && !(cfg.viewDecl.component && hasComponentImpl)) {\n        controllerInstance.$onInit();\n    }\n    var viewState = tail(cfg.path).state.self;\n    var hookOptions = { bind: controllerInstance };\n    // Add component-level hook for onUiParamsChanged\n    if (isFunction(controllerInstance.uiOnParamsChanged)) {\n        var resolveContext = new ResolveContext(cfg.path);\n        var viewCreationTrans_1 = resolveContext.getResolvable('$transition$').data;\n        // Fire callback on any successful transition\n        var paramsUpdated = function ($transition$) {\n            // Exit early if the $transition$ is the same as the view was created within.\n            // Exit early if the $transition$ will exit the state the view is for.\n            if ($transition$ === viewCreationTrans_1 || $transition$.exiting().indexOf(viewState) !== -1)\n                return;\n            var toParams = $transition$.params('to');\n            var fromParams = $transition$.params('from');\n            var getNodeSchema = function (node) { return node.paramSchema; };\n            var toSchema = $transition$\n                .treeChanges('to')\n                .map(getNodeSchema)\n                .reduce(unnestR, []);\n            var fromSchema = $transition$\n                .treeChanges('from')\n                .map(getNodeSchema)\n                .reduce(unnestR, []);\n            // Find the to params that have different values than the from params\n            var changedToParams = toSchema.filter(function (param) {\n                var idx = fromSchema.indexOf(param);\n                return idx === -1 || !fromSchema[idx].type.equals(toParams[param.id], fromParams[param.id]);\n            });\n            // Only trigger callback if a to param has changed or is new\n            if (changedToParams.length) {\n                var changedKeys_1 = changedToParams.map(function (x) { return x.id; });\n                // Filter the params to only changed/new to params.  `$transition$.params()` may be used to get all params.\n                var newValues = filter(toParams, function (val, key) { return changedKeys_1.indexOf(key) !== -1; });\n                controllerInstance.uiOnParamsChanged(newValues, $transition$);\n            }\n        };\n        $scope.$on('$destroy', $transitions.onSuccess({}, paramsUpdated, hookOptions));\n    }\n    // Add component-level hook for uiCanExit\n    if (isFunction(controllerInstance.uiCanExit)) {\n        var id_1 = _uiCanExitId++;\n        var cacheProp_1 = '_uiCanExitIds';\n        // Returns true if a redirect transition already answered truthy\n        var prevTruthyAnswer_1 = function (trans) {\n            return !!trans && ((trans[cacheProp_1] && trans[cacheProp_1][id_1] === true) || prevTruthyAnswer_1(trans.redirectedFrom()));\n        };\n        // If a user answered yes, but the transition was later redirected, don't also ask for the new redirect transition\n        var wrappedHook = function (trans) {\n            var promise;\n            var ids = (trans[cacheProp_1] = trans[cacheProp_1] || {});\n            if (!prevTruthyAnswer_1(trans)) {\n                promise = $q.when(controllerInstance.uiCanExit(trans));\n                promise.then(function (val) { return (ids[id_1] = val !== false); });\n            }\n            return promise;\n        };\n        var criteria = { exiting: viewState.name };\n        $scope.$on('$destroy', $transitions.onBefore(criteria, wrappedHook, hookOptions));\n    }\n}\nangular.module('ui.router.state').directive('uiView', uiView);\nangular.module('ui.router.state').directive('uiView', $ViewDirectiveFill);\n//# sourceMappingURL=viewDirective.js.map","/** @publicapi @module ng1 */ /** */\nimport { ng as angular } from './angular';\n/**\n * `isState` Filter: truthy if the current state is the parameter\n *\n * Translates to [[StateService.is]] `$state.is(\"stateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'stateName' | isState\">show if state is 'stateName'</div>\n * ```\n */\n$IsStateFilter.$inject = ['$state'];\nexport function $IsStateFilter($state) {\n    var isFilter = function (state, params, options) {\n        return $state.is(state, params, options);\n    };\n    isFilter.$stateful = true;\n    return isFilter;\n}\n/**\n * `includedByState` Filter: truthy if the current state includes the parameter\n *\n * Translates to [[StateService.includes]]` $state.is(\"fullOrPartialStateName\")`.\n *\n * #### Example:\n * ```html\n * <div ng-if=\"'fullOrPartialStateName' | includedByState\">show if state includes 'fullOrPartialStateName'</div>\n * ```\n */\n$IncludedByStateFilter.$inject = ['$state'];\nexport function $IncludedByStateFilter($state) {\n    var includesFilter = function (state, params, options) {\n        return $state.includes(state, params, options);\n    };\n    includesFilter.$stateful = true;\n    return includesFilter;\n}\nangular\n    .module('ui.router.state')\n    .filter('isState', $IsStateFilter)\n    .filter('includedByState', $IncludedByStateFilter);\n//# sourceMappingURL=stateFilters.js.map","/** @publicapi @module ng1 */ /** */\nimport { ng as angular } from './angular';\n/** @hidden */\nfunction $ViewScrollProvider() {\n    var useAnchorScroll = false;\n    this.useAnchorScroll = function () {\n        useAnchorScroll = true;\n    };\n    this.$get = [\n        '$anchorScroll',\n        '$timeout',\n        function ($anchorScroll, $timeout) {\n            if (useAnchorScroll) {\n                return $anchorScroll;\n            }\n            return function ($element) {\n                return $timeout(function () {\n                    $element[0].scrollIntoView();\n                }, 0, false);\n            };\n        },\n    ];\n}\nangular.module('ui.router.state').provider('$uiViewScroll', $ViewScrollProvider);\n//# sourceMappingURL=viewScroll.js.map","export * from './services';\nexport * from './statebuilders/views';\nexport * from './stateProvider';\nexport * from './urlRouterProvider';\nimport './injectables';\nimport './directives/stateDirectives';\nimport './stateFilters';\nimport './directives/viewDirective';\nimport './viewScroll';\nexport default 'ui.router';\nimport * as core from '@uirouter/core';\nexport { core };\nexport * from '@uirouter/core';\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}